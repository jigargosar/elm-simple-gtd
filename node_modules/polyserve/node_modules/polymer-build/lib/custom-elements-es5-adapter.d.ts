/// <reference types="node" />
/// <reference types="vinyl" />
import * as stream from 'stream';
import File = require('vinyl');
/**
 * Wraps `addCustomElementsEs5Adapter()` in a `stream.Transform`.
 */
export declare class CustomElementsEs5AdapterInjector extends stream.Transform {
    constructor();
    _transform(file: File, _encoding: string, callback: (error?: any, file?: File) => void): Promise<void>;
}
/**
 * Please avoid using this function because the API is likely to change. Prefer
 * the interface provided by `PolymerProject.addCustomElementsEs5Adapter`.
 *
 * When compiling ES6 classes down to ES5 we need to include a special form of
 * the webcomponents loader to be compatible with native custom elements. This
 * includes moving the loader script element and all relevent siblings
 * following it into the body so that the Custom Elements ES5 adapter can be
 * properly injected.
 *
 * NOTE(fks) 03-28-2017: Comments are not currently moved to the body, which
 * means relevent comments may be left behind in the head. This is fine for now,
 * but may break if we ever decide to support important metadata in comments
 * (ex: support for defining lazy-imports via HTML comments).
 *
 * TODO(fks) 03-28-2017: Add tests.
 */
export declare function addCustomElementsEs5Adapter(html: string): string;
