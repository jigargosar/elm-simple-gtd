var _gdotdesign$elm_ui$Ui_Pager$select = F2(
	function (page, model) {
		var isSamePage = _elm_lang$core$Native_Utils.eq(model.active, page);
		var canAnimate = _elm_lang$core$Native_Utils.eq(
			model.left,
			{ctor: '[]'}) && _elm_lang$core$Native_Utils.eq(
			model.center,
			{ctor: '[]'});
		return (canAnimate && (!isSamePage)) ? _elm_lang$core$Native_Utils.update(
			model,
			{
				left: {
					ctor: '::',
					_0: model.active,
					_1: {ctor: '[]'}
				},
				center: {
					ctor: '::',
					_0: page,
					_1: {ctor: '[]'}
				}
			}) : model;
	});
var _gdotdesign$elm_ui$Ui_Pager$update = F2(
	function (action, model) {
		var _p0 = action;
		if (_p0.ctor === 'End') {
			return _elm_lang$core$Native_Utils.update(
				model,
				{
					left: {ctor: '[]'}
				});
		} else {
			return _elm_lang$core$Native_Utils.update(
				model,
				{
					center: {ctor: '[]'},
					active: _p0._0
				});
		}
	});
var _gdotdesign$elm_ui$Ui_Pager$init = function (_p1) {
	return {
		center: {ctor: '[]'},
		active: 0,
		left: {ctor: '[]'}
	};
};
var _gdotdesign$elm_ui$Ui_Pager$Model = F3(
	function (a, b, c) {
		return {center: a, left: b, active: c};
	});
var _gdotdesign$elm_ui$Ui_Pager$ViewModel = F2(
	function (a, b) {
		return {pages: a, address: b};
	});
var _gdotdesign$elm_ui$Ui_Pager$End = function (a) {
	return {ctor: 'End', _0: a};
};
var _gdotdesign$elm_ui$Ui_Pager$Active = function (a) {
	return {ctor: 'Active', _0: a};
};
var _gdotdesign$elm_ui$Ui_Pager$render = F2(
	function (_p2, model) {
		var _p3 = _p2;
		var _p4 = _p3.address;
		var renderPage = F2(
			function (index, page) {
				var decoder = function (msg) {
					return A2(
						_elm_lang$core$Json_Decode$at,
						{
							ctor: '::',
							_0: 'target',
							_1: {
								ctor: '::',
								_0: '_page',
								_1: {ctor: '[]'}
							}
						},
						_elm_lang$core$Json_Decode$succeed(msg));
				};
				var attributes = A2(_elm_lang$core$List$member, index, model.left) ? {
					ctor: '::',
					_0: _gdotdesign$elm_ui$Html_Events_Extra$onTransitionEnd(
						decoder(
							_p4(
								_gdotdesign$elm_ui$Ui_Pager$End(index)))),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'left', _1: '-100%'},
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(_elm_lang$html$Html_Attributes$attribute, 'animating', ''),
							_1: {ctor: '[]'}
						}
					}
				} : (A2(_elm_lang$core$List$member, index, model.center) ? {
					ctor: '::',
					_0: _gdotdesign$elm_ui$Html_Events_Extra$onTransitionEnd(
						decoder(
							_p4(
								_gdotdesign$elm_ui$Ui_Pager$Active(index)))),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'left', _1: '0%'},
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(_elm_lang$html$Html_Attributes$attribute, 'animating', ''),
							_1: {ctor: '[]'}
						}
					}
				} : (_elm_lang$core$Native_Utils.eq(index, model.active) ? {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'left', _1: '0%'},
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				} : {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'visibility', _1: 'hidden'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'left', _1: '100%'},
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}));
				return A3(
					_elm_lang$html$Html$node,
					'ui-page',
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html_Attributes$property,
							'_page',
							_elm_lang$core$Json_Encode$string(
								_elm_lang$core$Basics$toString(index))),
						_1: attributes
					},
					{
						ctor: '::',
						_0: page,
						_1: {ctor: '[]'}
					});
			});
		return A3(
			_elm_lang$html$Html$node,
			'ui-pager',
			_gdotdesign$elm_ui$Ui_Styles$apply(_gdotdesign$elm_ui$Ui_Styles_Pager$defaultStyle),
			A2(_elm_lang$core$List$indexedMap, renderPage, _p3.pages));
	});
var _gdotdesign$elm_ui$Ui_Pager$view = F2(
	function (viewModel, model) {
		return A3(_elm_lang$html$Html_Lazy$lazy2, _gdotdesign$elm_ui$Ui_Pager$render, viewModel, model);
	});
