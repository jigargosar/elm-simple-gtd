var _jigargosar$elm_simple_gtd$Todo_MainHelp$setReminderOverlayToSnoozeView = F2(
	function (details, model) {
		return _elm_lang$core$Native_Utils.update(
			model,
			{
				reminderOverlay: _jigargosar$elm_simple_gtd$Todo_Notification_Model$snoozeView(details)
			});
	});
var _jigargosar$elm_simple_gtd$Todo_MainHelp$removeReminderOverlay = function (model) {
	return _elm_lang$core$Native_Utils.update(
		model,
		{reminderOverlay: _jigargosar$elm_simple_gtd$Todo_Notification_Model$none});
};
var _jigargosar$elm_simple_gtd$Todo_MainHelp$snoozeTodoWithOffset = F3(
	function (snoozeOffset, todoId, model) {
		var time = A2(_jigargosar$elm_simple_gtd$Todo_Notification_Model$addSnoozeOffset, model.now, snoozeOffset);
		return function (_p0) {
			return A2(
				_elm_lang$core$Tuple$mapFirst,
				_jigargosar$elm_simple_gtd$Todo_MainHelp$removeReminderOverlay,
				A3(
					_jigargosar$elm_simple_gtd$Stores$updateTodo,
					_jigargosar$elm_simple_gtd$Todo_Types$TA_SnoozeTill(time),
					todoId,
					_p0));
		}(model);
	});
var _jigargosar$elm_simple_gtd$Todo_MainHelp$reminderOverlayAction = function (action) {
	return _Fresheyeball$elm_return$Return$andThen(
		function (model) {
			return function () {
				var _p1 = model.reminderOverlay;
				if (_p1.ctor === 'Active') {
					var _p8 = _p1._1;
					var todoId = _p8.id;
					var _p2 = action;
					switch (_p2.ctor) {
						case 'Dismiss':
							return function (_p3) {
								return A2(
									_Fresheyeball$elm_return$Return$command,
									_jigargosar$elm_simple_gtd$Notification$closeNotification(todoId),
									A2(
										_elm_lang$core$Tuple$mapFirst,
										_jigargosar$elm_simple_gtd$Todo_MainHelp$removeReminderOverlay,
										A3(_jigargosar$elm_simple_gtd$Stores$updateTodo, _jigargosar$elm_simple_gtd$Todo_Types$TA_TurnReminderOff, todoId, _p3)));
							};
						case 'ShowSnoozeOptions':
							return function (_p4) {
								return _Fresheyeball$elm_return$Return$singleton(
									A2(_jigargosar$elm_simple_gtd$Todo_MainHelp$setReminderOverlayToSnoozeView, _p8, _p4));
							};
						case 'SnoozeTill':
							return function (_p5) {
								return A2(
									_Fresheyeball$elm_return$Return$command,
									_jigargosar$elm_simple_gtd$Notification$closeNotification(todoId),
									A2(
										_Fresheyeball$elm_return$Return$andThen,
										A2(_jigargosar$elm_simple_gtd$Todo_MainHelp$snoozeTodoWithOffset, _p2._0, todoId),
										_Fresheyeball$elm_return$Return$singleton(_p5)));
							};
						case 'Close':
							return function (_p6) {
								return _Fresheyeball$elm_return$Return$singleton(
									_jigargosar$elm_simple_gtd$Todo_MainHelp$removeReminderOverlay(_p6));
							};
						default:
							return function (_p7) {
								return A2(
									_Fresheyeball$elm_return$Return$command,
									_jigargosar$elm_simple_gtd$Notification$closeNotification(todoId),
									A2(
										_elm_lang$core$Tuple$mapFirst,
										_jigargosar$elm_simple_gtd$Todo_MainHelp$removeReminderOverlay,
										A3(_jigargosar$elm_simple_gtd$Stores$updateTodo, _jigargosar$elm_simple_gtd$Todo_Types$TA_MarkDone, todoId, _p7)));
							};
					}
				} else {
					return _Fresheyeball$elm_return$Return$singleton;
				}
			}()(model);
		});
};
var _jigargosar$elm_simple_gtd$Todo_MainHelp$inboxEntity = _jigargosar$elm_simple_gtd$Entity_Types$createContextEntity(_jigargosar$elm_simple_gtd$Context$null);
var _jigargosar$elm_simple_gtd$Todo_MainHelp$setReminderOverlayToInitialView = F2(
	function (todo, model) {
		return _elm_lang$core$Native_Utils.update(
			model,
			{
				reminderOverlay: _jigargosar$elm_simple_gtd$Todo_Notification_Model$initialView(todo)
			});
	});
var _jigargosar$elm_simple_gtd$Todo_MainHelp$showReminderOverlayForTodoId = function (todoId) {
	return A2(
		_jigargosar$elm_simple_gtd$X_Function$applyMaybeWith,
		_jigargosar$elm_simple_gtd$Stores$findTodoById(todoId),
		_jigargosar$elm_simple_gtd$Todo_MainHelp$setReminderOverlayToInitialView);
};
var _jigargosar$elm_simple_gtd$Todo_MainHelp$positionMoreMenuCmd = function (todoId) {
	return _jigargosar$elm_simple_gtd$DomPorts$positionPopupMenu(
		A2(_elm_lang$core$Basics_ops['++'], '#todo-more-menu-button-', todoId));
};
var _jigargosar$elm_simple_gtd$Todo_MainHelp$gotoTodoWithId = F2(
	function (todoId, model) {
		var maybeTodoEntity = A2(
			_elm_community$list_extra$List_Extra$find,
			function (entity) {
				var _p9 = entity;
				if (_p9.ctor === 'TodoEntity') {
					return A2(_jigargosar$elm_simple_gtd$Document$hasId, todoId, _p9._0);
				} else {
					return false;
				}
			},
			_jigargosar$elm_simple_gtd$Stores$getCurrentViewEntityList(model));
		return A3(
			_elm_community$maybe_extra$Maybe_Extra$unpack,
			function (_p10) {
				return _jigargosar$elm_simple_gtd$Model_ViewType$switchToContextsView(
					A2(_jigargosar$elm_simple_gtd$Stores$setFocusInEntityWithTodoId, todoId, model));
			},
			A2(_danielnarey$elm_toolkit$Toolkit_Operators_ops['#'], _jigargosar$elm_simple_gtd$Stores$setFocusInEntity, model),
			maybeTodoEntity);
	});
var _jigargosar$elm_simple_gtd$Todo_MainHelp$gotoTodoWithIdIn = _elm_lang$core$Basics$flip(_jigargosar$elm_simple_gtd$Todo_MainHelp$gotoTodoWithId);
var _jigargosar$elm_simple_gtd$Todo_MainHelp$gotoRunningTodo = function (model) {
	return A2(
		_danielnarey$elm_toolkit$Toolkit_Operators_ops['?='],
		A2(
			_danielnarey$elm_toolkit$Toolkit_Operators_ops['?|>'],
			_jigargosar$elm_simple_gtd$Todo_TimeTracker$getMaybeTodoId(model.timeTracker),
			_jigargosar$elm_simple_gtd$Todo_MainHelp$gotoTodoWithIdIn(model)),
		model);
};
var _jigargosar$elm_simple_gtd$Todo_MainHelp$showReminderNotificationCmd = function (_p11) {
	var _p12 = _p11;
	var _p13 = _p12._0;
	var createNotification = function () {
		var id = _jigargosar$elm_simple_gtd$Document$getId(_p13);
		return {
			title: _jigargosar$elm_simple_gtd$Todo$getText(_p13),
			tag: id,
			data: {id: id}
		};
	}();
	var cmds = {
		ctor: '::',
		_0: _jigargosar$elm_simple_gtd$Todo_MainHelpPort$showTodoReminderNotification(createNotification),
		_1: {
			ctor: '::',
			_0: _jigargosar$elm_simple_gtd$Notification$startAlarm(
				{ctor: '_Tuple0'}),
			_1: {ctor: '[]'}
		}
	};
	return A2(_elm_lang$core$Platform_Cmd_ops['!'], _p12._1, cmds);
};
var _jigargosar$elm_simple_gtd$Todo_MainHelp$onRunningNotificationResponse = F2(
	function (andThenUpdate, res) {
		var todoId = res.data.id;
		return function (_p14) {
			return A2(
				andThenUpdate,
				_jigargosar$elm_simple_gtd$Msg$OnCloseNotification(todoId),
				function () {
					var _p15 = res.action;
					switch (_p15) {
						case 'stop':
							return andThenUpdate(_jigargosar$elm_simple_gtd$TodoMsg$onStopRunningTodo);
						case 'continue':
							return _elm_lang$core$Basics$identity;
						default:
							return andThenUpdate(_jigargosar$elm_simple_gtd$TodoMsg$onGotoRunningTodo);
					}
				}()(_p14));
		};
	});
var _jigargosar$elm_simple_gtd$Todo_MainHelp$onStartAddingTodo = F2(
	function (andThenUpdate, addFormMode) {
		var createXM = function (model) {
			return _jigargosar$elm_simple_gtd$ExclusiveMode_Types$XMTodoForm(
				_jigargosar$elm_simple_gtd$Todo_Form$createAddTodoForm(addFormMode));
		};
		return function (_p16) {
			return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputRCmd(
				A3(
					_jigargosar$elm_simple_gtd$X_Return$returnWith,
					createXM,
					function (_p17) {
						return andThenUpdate(
							_jigargosar$elm_simple_gtd$XMMsg$onSetExclusiveMode(_p17));
					},
					_p16));
		};
	});
var _jigargosar$elm_simple_gtd$Todo_MainHelp$onUpdateTodoFormAction = F3(
	function (andThenUpdate, form, action) {
		var xm = _jigargosar$elm_simple_gtd$ExclusiveMode_Types$XMTodoForm(
			A2(_jigargosar$elm_simple_gtd$Todo_Form$updateTodoForm, action, form));
		return function (_p18) {
			return A2(
				_Fresheyeball$elm_return$Return$command,
				function () {
					var _p19 = action;
					if (_p19.ctor === 'SetTodoMenuState') {
						return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd;
					} else {
						return _elm_lang$core$Platform_Cmd$none;
					}
				}(),
				A2(
					andThenUpdate,
					_jigargosar$elm_simple_gtd$XMMsg$onSetExclusiveMode(xm),
					_p18));
		};
	});
var _jigargosar$elm_simple_gtd$Todo_MainHelp$timeTracker = A2(
	_jigargosar$elm_simple_gtd$X_Record$fieldLens,
	function (_) {
		return _.timeTracker;
	},
	F2(
		function (s, b) {
			return _elm_lang$core$Native_Utils.update(
				b,
				{timeTracker: s});
		}));
var _jigargosar$elm_simple_gtd$Todo_MainHelp$maybeMapToCmd = function (fn) {
	return A2(
		_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>?='],
		_elm_lang$core$Maybe$map(fn),
		_elm_lang$core$Platform_Cmd$none);
};
var _jigargosar$elm_simple_gtd$Todo_MainHelp$showRunningNotificationCmd = function (_p20) {
	var _p21 = _p20;
	var createRequest = F2(
		function (info, todo) {
			var formattedDuration = _jigargosar$elm_simple_gtd$X_Time$toHHMMSSMin(info.elapsedTime);
			var todoId = _jigargosar$elm_simple_gtd$Document$getId(todo);
			return {
				tag: todoId,
				title: A2(_elm_lang$core$Basics_ops['++'], 'You have been working for ', formattedDuration),
				body: _jigargosar$elm_simple_gtd$Todo$getText(todo),
				actions: {
					ctor: '::',
					_0: {title: 'Continue', action: 'continue'},
					_1: {
						ctor: '::',
						_0: {title: 'Stop', action: 'stop'},
						_1: {ctor: '[]'}
					}
				},
				data: {
					id: todoId,
					notificationClickedPort: 'onRunningTodoNotificationClicked',
					skipFocusActionList: {
						ctor: '::',
						_0: 'continue',
						_1: {ctor: '[]'}
					}
				}
			};
		});
	return A2(
		_jigargosar$elm_simple_gtd$Todo_MainHelp$maybeMapToCmd,
		_jigargosar$elm_simple_gtd$Todo_MainHelpPort$showRunningTodoNotification,
		A2(
			_danielnarey$elm_toolkit$Toolkit_Operators_ops['?+>'],
			_p21._0,
			function (info) {
				return A2(
					_danielnarey$elm_toolkit$Toolkit_Operators_ops['?|>'],
					A2(_jigargosar$elm_simple_gtd$Stores$findTodoById, info.todoId, _p21._1),
					createRequest(info));
			}));
};
var _jigargosar$elm_simple_gtd$Todo_MainHelp$andThen = _Fresheyeball$elm_return$Return$andThen;
var _jigargosar$elm_simple_gtd$Todo_MainHelp$updateTimeTracker = function (now) {
	return _jigargosar$elm_simple_gtd$Todo_MainHelp$andThen(
		function (_p22) {
			return A2(
				_danielnarey$elm_toolkit$Toolkit_Helpers$apply2,
				{ctor: '_Tuple2', _0: _elm_lang$core$Tuple$second, _1: _jigargosar$elm_simple_gtd$Todo_MainHelp$showRunningNotificationCmd},
				A3(
					_jigargosar$elm_simple_gtd$X_Record$overT2,
					_jigargosar$elm_simple_gtd$Todo_MainHelp$timeTracker,
					_jigargosar$elm_simple_gtd$Todo_TimeTracker$updateNextAlarmAt(now),
					_p22));
		});
};
var _jigargosar$elm_simple_gtd$Todo_MainHelp$command = _Fresheyeball$elm_return$Return$command;
var _jigargosar$elm_simple_gtd$Todo_MainHelp$onStartEditingTodo = F3(
	function (andThenUpdate, todo, editFormMode) {
		var positionPopup = function (idPrefix) {
			return _jigargosar$elm_simple_gtd$DomPorts$positionPopupMenu(
				A2(
					_elm_lang$core$Basics_ops['++'],
					idPrefix,
					_jigargosar$elm_simple_gtd$Document_Types$getDocId(todo)));
		};
		var createXM = function (model) {
			return _jigargosar$elm_simple_gtd$ExclusiveMode_Types$XMTodoForm(
				A3(_jigargosar$elm_simple_gtd$Todo_Form$createEditTodoForm, editFormMode, model.now, todo));
		};
		return function (_p23) {
			return A2(
				_jigargosar$elm_simple_gtd$Todo_MainHelp$command,
				function () {
					var _p24 = editFormMode;
					switch (_p24.ctor) {
						case 'ETFM_EditTodoText':
							return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd;
						case 'ETFM_EditTodoContext':
							return positionPopup('#edit-context-button-');
						case 'ETFM_EditTodoProject':
							return positionPopup('#edit-project-button-');
						default:
							return positionPopup('#edit-schedule-button-');
					}
				}(),
				A3(
					_jigargosar$elm_simple_gtd$X_Return$returnWith,
					createXM,
					function (_p25) {
						return andThenUpdate(
							_jigargosar$elm_simple_gtd$XMMsg$onSetExclusiveMode(_p25));
					},
					_p23));
		};
	});
var _jigargosar$elm_simple_gtd$Todo_MainHelp$onReminderNotificationClicked = F2(
	function (andThenUpdate, notif) {
		var _p26 = notif;
		var action = _p26.action;
		var data = _p26.data;
		var todoId = data.id;
		return _elm_lang$core$Native_Utils.eq(action, 'mark-done') ? function (_p27) {
			return A2(
				_jigargosar$elm_simple_gtd$Todo_MainHelp$command,
				_jigargosar$elm_simple_gtd$Notification$closeNotification(todoId),
				A2(
					_Fresheyeball$elm_return$Return$andThen,
					A2(_jigargosar$elm_simple_gtd$Stores$updateTodo, _jigargosar$elm_simple_gtd$Todo_Types$TA_MarkDone, todoId),
					_p27));
		} : function (_p28) {
			return andThenUpdate(
				_jigargosar$elm_simple_gtd$Msg$OnTodoMsg(
					_jigargosar$elm_simple_gtd$Todo_Msg$ShowReminderOverlayForTodoId(_p28)));
		}(todoId);
	});
var _jigargosar$elm_simple_gtd$Todo_MainHelp$map = _Fresheyeball$elm_return$Return$map;
var _jigargosar$elm_simple_gtd$Todo_MainHelp$onUpsertTodo = function (todo) {
	return _jigargosar$elm_simple_gtd$Todo_MainHelp$map(
		function (model) {
			var isTrackerTodoInactive = _jigargosar$elm_simple_gtd$Todo$isInActive(todo) && A2(_jigargosar$elm_simple_gtd$Todo_TimeTracker$isTrackingTodo, todo, model.timeTracker);
			return isTrackerTodoInactive ? A3(_jigargosar$elm_simple_gtd$X_Record$set, _jigargosar$elm_simple_gtd$Todo_MainHelp$timeTracker, _jigargosar$elm_simple_gtd$Todo_TimeTracker$none, model) : model;
		});
};
var _jigargosar$elm_simple_gtd$Todo_MainHelp$mapSet = A2(_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>>'], _jigargosar$elm_simple_gtd$X_Record$set, _Fresheyeball$elm_return$Return$map);
var _jigargosar$elm_simple_gtd$Todo_MainHelp$mapOver = A2(_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>>'], _jigargosar$elm_simple_gtd$X_Record$over, _Fresheyeball$elm_return$Return$map);
