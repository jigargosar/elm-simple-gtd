var _jigargosar$elm_simple_gtd$AppDrawer_View$onSetEntityListViewItem = F3(
	function (iconName, viewType, title) {
		return A2(
			_elm_lang$html$Html$li,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(''),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_jigargosar$elm_simple_gtd$Model$onSetEntityListView(viewType)),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: _jigargosar$elm_simple_gtd$Mat$icon(iconName),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$h5,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(title),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _jigargosar$elm_simple_gtd$AppDrawer_View$switchViewItemSmall = F3(
	function (iconName, viewType, title) {
		return A2(
			_elm_lang$html$Html$li,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(''),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_jigargosar$elm_simple_gtd$Msg$OnSetViewType(viewType)),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: _jigargosar$elm_simple_gtd$Mat$icon(iconName),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(title),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _jigargosar$elm_simple_gtd$AppDrawer_View$switchViewItem = F3(
	function (iconName, viewType, title) {
		return A2(
			_elm_lang$html$Html$li,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(''),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_jigargosar$elm_simple_gtd$Msg$OnSetViewType(viewType)),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: _jigargosar$elm_simple_gtd$Mat$icon(iconName),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$h5,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(title),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _jigargosar$elm_simple_gtd$AppDrawer_View$entityListItem = function (vm) {
	return A2(
		_elm_lang$html$Html$li,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(
				vm.onActiveStateChanged(true)),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _jigargosar$elm_simple_gtd$Mat$iconM(vm.icon),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('font-nowrap'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(_jigargosar$elm_simple_gtd$View_Shared$badge, vm.name, vm.count),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _jigargosar$elm_simple_gtd$AppDrawer_View$archivedItems = function (vm) {
	var _p0 = vm.showArchived ? {
		ctor: '_Tuple3',
		_0: 'visibility_off',
		_1: 'Hide Archived',
		_2: A2(_elm_lang$core$List$map, _jigargosar$elm_simple_gtd$AppDrawer_View$entityListItem, vm.archivedEntityList)
	} : {
		ctor: '_Tuple3',
		_0: 'visibility',
		_1: ' Show Archived',
		_2: {ctor: '[]'}
	};
	var iconName = _p0._0;
	var buttonText = _p0._1;
	var viewItems = _p0._2;
	var badgeCount = _elm_lang$core$List$length(vm.archivedEntityList);
	return {
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$li,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(''),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(vm.onToggleShowArchived),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: _jigargosar$elm_simple_gtd$Mat$icon(iconName),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('font-nowrap'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(_jigargosar$elm_simple_gtd$View_Shared$badge, buttonText, badgeCount),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$li,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$classList(
						{
							ctor: '::',
							_0: A2(_jigargosar$elm_simple_gtd$X_Function_Infix_ops['=>'], 'list-container', true),
							_1: {
								ctor: '::',
								_0: A2(_jigargosar$elm_simple_gtd$X_Function_Infix_ops['=>'], 'expanded', vm.showArchived),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$ul,
						{ctor: '[]'},
						viewItems),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		}
	};
};
var _jigargosar$elm_simple_gtd$AppDrawer_View$entityGroupView = F2(
	function (vm, mainViewType) {
		var nullViewAsList = A2(_danielnarey$elm_toolkit$Toolkit_Operators_ops['.|>'], vm.nullVMAsList, _jigargosar$elm_simple_gtd$AppDrawer_View$entityListItem);
		var _p1 = vm;
		var viewType = _p1.viewType;
		var onAddClicked = _p1.onAddClicked;
		var onToggleExpanded = _p1.onToggleExpanded;
		var isExpanded = _p1.isExpanded;
		var isCurrentView = _elm_lang$core$Native_Utils.eq(
			_jigargosar$elm_simple_gtd$Types$EntityListView(viewType),
			mainViewType);
		var fireSwitchView = _jigargosar$elm_simple_gtd$Msg$OnSetViewType(
			_jigargosar$elm_simple_gtd$Types$EntityListView(viewType));
		var fireSmart = isCurrentView ? onToggleExpanded : fireSwitchView;
		var expandIconName = isExpanded ? 'expand_less' : 'expand_more';
		return A2(
			_elm_lang$core$Basics_ops['++'],
			nullViewAsList,
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$li,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(fireSmart),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _jigargosar$elm_simple_gtd$Mat$iconM(vm.icon),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$h5,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(vm.title),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A3(_jigargosar$elm_simple_gtd$Mat$iconBtn2, _jigargosar$elm_simple_gtd$Msg$OnMdl, expandIconName, onToggleExpanded),
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$li,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$classList(
								{
									ctor: '::',
									_0: A2(_jigargosar$elm_simple_gtd$X_Function_Infix_ops['=>'], 'list-container', true),
									_1: {
										ctor: '::',
										_0: A2(_jigargosar$elm_simple_gtd$X_Function_Infix_ops['=>'], 'expanded', isExpanded),
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$ul,
								{ctor: '[]'},
								A2(
									_elm_lang$core$Basics_ops['++'],
									{ctor: '[]'},
									A2(
										_elm_lang$core$Basics_ops['++'],
										A2(_elm_lang$core$List$map, _jigargosar$elm_simple_gtd$AppDrawer_View$entityListItem, vm.entityList),
										A2(
											_elm_lang$core$Basics_ops['++'],
											{
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$li,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$class(''),
														_1: {
															ctor: '::',
															_0: _jigargosar$elm_simple_gtd$X_Html$onClickStopAll(onAddClicked),
															_1: {ctor: '[]'}
														}
													},
													{
														ctor: '::',
														_0: _jigargosar$elm_simple_gtd$Mat$icon('add'),
														_1: {
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$div,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html$text('Add New'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {ctor: '[]'}
											},
											_jigargosar$elm_simple_gtd$AppDrawer_View$archivedItems(vm))))),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _jigargosar$elm_simple_gtd$AppDrawer_View$sidebarContent = F2(
	function (appVM, model) {
		var _p2 = appVM;
		var contexts = _p2.contexts;
		var projects = _p2.projects;
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$id('layout-sidebar-content'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('app-drawer-list-container'),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$ul,
					{ctor: '[]'},
					A2(
						_elm_lang$core$Basics_ops['++'],
						{ctor: '[]'},
						A2(
							_elm_lang$core$Basics_ops['++'],
							A2(_jigargosar$elm_simple_gtd$AppDrawer_View$entityGroupView, contexts, model.mainViewType),
							A2(
								_elm_lang$core$Basics_ops['++'],
								A2(_jigargosar$elm_simple_gtd$AppDrawer_View$entityGroupView, projects, model.mainViewType),
								A2(
									_elm_lang$core$Basics_ops['++'],
									{
										ctor: '::',
										_0: _jigargosar$elm_simple_gtd$Mat$divider,
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A3(_jigargosar$elm_simple_gtd$AppDrawer_View$onSetEntityListViewItem, 'sort', _jigargosar$elm_simple_gtd$Entity_Types$RecentView, 'Recent'),
										_1: {
											ctor: '::',
											_0: A3(_jigargosar$elm_simple_gtd$AppDrawer_View$onSetEntityListViewItem, 'delete', _jigargosar$elm_simple_gtd$Entity_Types$BinView, 'Bin'),
											_1: {
												ctor: '::',
												_0: A3(_jigargosar$elm_simple_gtd$AppDrawer_View$onSetEntityListViewItem, 'done', _jigargosar$elm_simple_gtd$Entity_Types$DoneView, 'Done'),
												_1: {
													ctor: '::',
													_0: _jigargosar$elm_simple_gtd$Mat$divider,
													_1: {
														ctor: '::',
														_0: A3(_jigargosar$elm_simple_gtd$AppDrawer_View$switchViewItemSmall, 'settings', _jigargosar$elm_simple_gtd$Types$SyncView, 'Advance Settings'),
														_1: {ctor: '[]'}
													}
												}
											}
										}
									}))))),
				_1: {ctor: '[]'}
			});
	});
var _jigargosar$elm_simple_gtd$AppDrawer_View$sidebarHeader = F2(
	function (appVM, m) {
		var _p3 = m.developmentMode ? {
			ctor: '_Tuple2',
			_0: A2(_elm_lang$core$Basics_ops['++'], 'Dev v', m.appVersion),
			_1: A2(_elm_lang$core$Basics_ops['++'], 'v', m.appVersion)
		} : {
			ctor: '_Tuple2',
			_0: 'SimpleGTD.com',
			_1: A2(_elm_lang$core$Basics_ops['++'], 'v', m.appVersion)
		};
		var t1 = _p3._0;
		var t2 = _p3._1;
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$id('layout-sidebar-header'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: A2(_jigargosar$elm_simple_gtd$X_Function_Infix_ops['=>'], 'color', 'white'),
							_1: {
								ctor: '::',
								_0: A2(
									_jigargosar$elm_simple_gtd$X_Function_Infix_ops['=>'],
									'background-color',
									_jigargosar$elm_simple_gtd$AppColors$encode(appVM.header.backgroundColor)),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('detail'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$h5,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$a,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$href(_jigargosar$elm_simple_gtd$AppUrl$landing),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$tabindex(-1),
											_1: {ctor: '[]'}
										}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(t1),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('small layout horizontal '),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$a,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$target('_blank'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$href(_jigargosar$elm_simple_gtd$AppUrl$changeLogURL),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$tabindex(-1),
													_1: {ctor: '[]'}
												}
											}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(
												A2(_elm_lang$core$Basics_ops['++'], 'v', m.appVersion)),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$a,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$target('_blank'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$href(_jigargosar$elm_simple_gtd$AppUrl$newPostURL),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$tabindex(-1),
														_1: {ctor: '[]'}
													}
												}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Discuss'),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$a,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$target('_blank'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$href(_jigargosar$elm_simple_gtd$AppUrl$contact),
														_1: {
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$tabindex(-1),
															_1: {ctor: '[]'}
														}
													}
												},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('Feedback'),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										}
									}
								}),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			});
	});
