{"version":3,"sources":["src/storage/implementation/location.ts"],"names":["errorsExports","Location","bucket","path","path_","encode","encodeURIComponent","bucketString","bucketLocation","makeFromUrl","e","invalidDefaultBucket","url","location","bucketDomain","gsRegex","RegExp","httpRegex","groups","regex","indices","postModify","loc","charAt","length","slice","decodeURIComponent","i","group","captures","exec","bucketValue","pathValue","invalidUrl"],"mappings":"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","file":"location.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\nimport * as errorsExports from './error';\nimport {errors} from './error';\n\n/**\n * @struct\n */\nexport class Location {\n  private path_: string;\n\n  constructor(public readonly bucket: string, path: string) {\n    this.path_ = path;\n  }\n\n  get path(): string {\n    return this.path_;\n  }\n\n  fullServerUrl(): string {\n    let encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    let encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString: string): Location {\n    let bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw errorsExports.invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string): Location {\n    let location = null;\n    let bucketDomain = '([A-Za-z0-9.\\\\-]+)';\n\n    function gsModify(loc: Location) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    let gsPath = '(/(.*))?$';\n    let path = '(/([^?#]*).*)?$';\n    let gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    let gsIndices = {bucket: 1, path: 3};\n\n    function httpModify(loc: Location) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    let version = 'v[A-Za-z0-9_]+';\n    let httpRegex = new RegExp(\n        '^https?://firebasestorage\\\\.googleapis\\\\.com/' + version + '/b/' +\n            bucketDomain + '/o' + path,\n        'i');\n    let httpIndices = {bucket: 1, path: 3};\n    let groups = [\n      {regex: gsRegex, indices: gsIndices, postModify: gsModify},\n      {regex: httpRegex, indices: httpIndices, postModify: httpModify}\n    ];\n    for (let i = 0; i < groups.length; i++) {\n      let group = groups[i];\n      let captures = group.regex.exec(url);\n      if (captures) {\n        let bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw errorsExports.invalidUrl(url);\n    }\n    return location;\n  }\n}\n"]}