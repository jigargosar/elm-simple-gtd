var _jigargosar$elm_simple_gtd$Update$positionScheduleMenuCmd = function (todo) {
	return _jigargosar$elm_simple_gtd$DomPorts$positionPopupMenu(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'#edit-schedule-button-',
			_jigargosar$elm_simple_gtd$Document$getId(todo)));
};
var _jigargosar$elm_simple_gtd$Update$positionProjectMenuCmd = function (todo) {
	return _jigargosar$elm_simple_gtd$DomPorts$positionPopupMenu(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'#edit-project-button-',
			_jigargosar$elm_simple_gtd$Document$getId(todo)));
};
var _jigargosar$elm_simple_gtd$Update$positionMainMenuCmd = _jigargosar$elm_simple_gtd$DomPorts$positionPopupMenu('#main-menu-button');
var _jigargosar$elm_simple_gtd$Update$positionContextMenuCmd = function (todo) {
	return _jigargosar$elm_simple_gtd$DomPorts$positionPopupMenu(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'#edit-context-button-',
			_jigargosar$elm_simple_gtd$Document$getId(todo)));
};
var _jigargosar$elm_simple_gtd$Update$command = _Fresheyeball$elm_return$Return$command;
var _jigargosar$elm_simple_gtd$Update$reminderOverlayAction = function (action) {
	return _Fresheyeball$elm_return$Return$andThen(
		function (model) {
			return function () {
				var _p0 = model.reminderOverlay;
				if (_p0.ctor === 'Active') {
					var _p7 = _p0._1;
					var todoId = _p7.id;
					var _p1 = action;
					switch (_p1.ctor) {
						case 'Dismiss':
							return function (_p2) {
								return A2(
									_Fresheyeball$elm_return$Return$command,
									_jigargosar$elm_simple_gtd$Notification$closeNotification(todoId),
									A2(
										_elm_lang$core$Tuple$mapFirst,
										_jigargosar$elm_simple_gtd$Model$removeReminderOverlay,
										A3(_jigargosar$elm_simple_gtd$Stores$updateTodo, _jigargosar$elm_simple_gtd$Todo_Types$TA_TurnReminderOff, todoId, _p2)));
							};
						case 'ShowSnoozeOptions':
							return function (_p3) {
								return _Fresheyeball$elm_return$Return$singleton(
									A2(_jigargosar$elm_simple_gtd$Model$setReminderOverlayToSnoozeView, _p7, _p3));
							};
						case 'SnoozeTill':
							return function (_p4) {
								return A2(
									_Fresheyeball$elm_return$Return$command,
									_jigargosar$elm_simple_gtd$Notification$closeNotification(todoId),
									A2(
										_Fresheyeball$elm_return$Return$andThen,
										A2(_jigargosar$elm_simple_gtd$Model$snoozeTodoWithOffset, _p1._0, todoId),
										_Fresheyeball$elm_return$Return$singleton(_p4)));
							};
						case 'Close':
							return function (_p5) {
								return _Fresheyeball$elm_return$Return$singleton(
									_jigargosar$elm_simple_gtd$Model$removeReminderOverlay(_p5));
							};
						default:
							return function (_p6) {
								return A2(
									_Fresheyeball$elm_return$Return$command,
									_jigargosar$elm_simple_gtd$Notification$closeNotification(todoId),
									A2(
										_elm_lang$core$Tuple$mapFirst,
										_jigargosar$elm_simple_gtd$Model$removeReminderOverlay,
										A3(_jigargosar$elm_simple_gtd$Stores$updateTodo, _jigargosar$elm_simple_gtd$Todo_Types$TA_MarkDone, todoId, _p6)));
							};
					}
				} else {
					return _Fresheyeball$elm_return$Return$singleton;
				}
			}()(model);
		});
};
var _jigargosar$elm_simple_gtd$Update$maybeMapToCmd = function (fn) {
	return A2(
		_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>?='],
		_elm_lang$core$Maybe$map(fn),
		_elm_lang$core$Platform_Cmd$none);
};
var _jigargosar$elm_simple_gtd$Update$updateTodoAndMaybeAlsoSelected = F2(
	function (action, todoId) {
		return _Fresheyeball$elm_return$Return$andThen(
			A2(_jigargosar$elm_simple_gtd$Stores$updateTodoAndMaybeAlsoSelected, action, todoId));
	});
var _jigargosar$elm_simple_gtd$Update$withNow = function (toMsg) {
	return _jigargosar$elm_simple_gtd$Update$command(
		A2(_elm_lang$core$Task$perform, toMsg, _elm_lang$core$Time$now));
};
var _jigargosar$elm_simple_gtd$Update$map = _Fresheyeball$elm_return$Return$map;
var _jigargosar$elm_simple_gtd$Update$onGlobalKeyUp = F2(
	function (andThenUpdate, key) {
		return A2(
			_jigargosar$elm_simple_gtd$X_Return$with,
			_jigargosar$elm_simple_gtd$Model$getEditMode,
			function (editMode) {
				var _p8 = {ctor: '_Tuple2', _0: key, _1: editMode};
				_v2_2:
				do {
					if (_p8.ctor === '_Tuple2') {
						if (_p8._1.ctor === 'XMNone') {
							var clear = function (_p9) {
								return A2(
									andThenUpdate,
									_jigargosar$elm_simple_gtd$Msg$OnDeactivateEditingMode,
									A2(_jigargosar$elm_simple_gtd$Update$map, _jigargosar$elm_simple_gtd$Model_Selection$clearSelection, _p9));
							};
							var _p10 = _p8._0;
							switch (_p10.ctor) {
								case 'Escape':
									return clear;
								case 'CharX':
									return clear;
								case 'CharQ':
									return _Fresheyeball$elm_return$Return$andThen(
										function (_p11) {
											return A2(
												_elm_lang$core$Basics$uncurry,
												andThenUpdate,
												A2(
													_danielnarey$elm_toolkit$Toolkit_Helpers$apply2,
													{ctor: '_Tuple2', _0: _jigargosar$elm_simple_gtd$Model_Msg$onNewTodoModeWithFocusInEntityAsReference, _1: _Fresheyeball$elm_return$Return$singleton},
													_p11));
										});
								case 'CharI':
									return andThenUpdate(_jigargosar$elm_simple_gtd$Msg$onNewTodoForInbox);
								case 'Slash':
									return andThenUpdate(
										_jigargosar$elm_simple_gtd$Msg$OnLaunchBarMsg(_jigargosar$elm_simple_gtd$LaunchBar_Types$OnLBOpen));
								default:
									return _elm_lang$core$Basics$identity;
							}
						} else {
							if (_p8._0.ctor === 'Escape') {
								return andThenUpdate(_jigargosar$elm_simple_gtd$Msg$OnDeactivateEditingMode);
							} else {
								break _v2_2;
							}
						}
					} else {
						break _v2_2;
					}
				} while(false);
				return _elm_lang$core$Basics$identity;
			});
	});
var _jigargosar$elm_simple_gtd$Update$onSubMsg = F2(
	function (andThenUpdate, subMsg) {
		var _p12 = subMsg;
		switch (_p12.ctor) {
			case 'OnNowChanged':
				return _jigargosar$elm_simple_gtd$Update$map(
					_jigargosar$elm_simple_gtd$Model$setNow(_p12._0));
			case 'OnKeyboardMsg':
				return function (_p13) {
					return A2(
						_jigargosar$elm_simple_gtd$DomPorts$focusSelectorIfNoFocusCmd,
						'.entity-list .focusable-list-item[tabindex=0]',
						A2(
							_jigargosar$elm_simple_gtd$Update$map,
							_jigargosar$elm_simple_gtd$Model$updateKeyboardState(
								_jigargosar$elm_simple_gtd$X_Keyboard$update(_p12._0)),
							_p13));
				};
			case 'OnGlobalKeyUp':
				return A2(_jigargosar$elm_simple_gtd$Update$onGlobalKeyUp, andThenUpdate, _p12._0);
			case 'OnPouchDBChange':
				var afterEntityUpsertOnPouchDBChange = function (entity) {
					var _p14 = entity;
					if (_p14.ctor === 'TodoEntity') {
						return _jigargosar$elm_simple_gtd$Msg$OnTodoMsg(
							_jigargosar$elm_simple_gtd$Todo_Msg$Upsert(_p14._0));
					} else {
						return _jigargosar$elm_simple_gtd$Model$noop;
					}
				};
				return _jigargosar$elm_simple_gtd$X_Return$andThenMaybe(
					A2(
						_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>?'],
						A2(_jigargosar$elm_simple_gtd$Stores$upsertEncodedDocOnPouchDBChange, _p12._0, _p12._1),
						function (_p15) {
							return A2(
								_elm_lang$core$Basics$uncurry,
								andThenUpdate,
								A3(_Fresheyeball$elm_tuple_extra$Tuple2$mapEach, afterEntityUpsertOnPouchDBChange, _Fresheyeball$elm_return$Return$singleton, _p15));
						}));
			default:
				return _Fresheyeball$elm_return$Return$effect_(
					A2(_jigargosar$elm_simple_gtd$Stores$upsertEncodedDocOnFirebaseChange, _p12._0, _p12._1));
		}
	});
var _jigargosar$elm_simple_gtd$Update$syncWithRemotePouch = _elm_lang$core$Native_Platform.outgoingPort(
	'syncWithRemotePouch',
	function (v) {
		return v;
	});
var _jigargosar$elm_simple_gtd$Update$persistLocalPref = _elm_lang$core$Native_Platform.outgoingPort(
	'persistLocalPref',
	function (v) {
		return v;
	});
var _jigargosar$elm_simple_gtd$Update$update = F2(
	function (andThenUpdate, msg) {
		var _p16 = msg;
		switch (_p16.ctor) {
			case 'OnCommonMsg':
				return _jigargosar$elm_simple_gtd$CommonMsg$update(_p16._0);
			case 'OnSubMsg':
				return A2(_jigargosar$elm_simple_gtd$Update$onSubMsg, andThenUpdate, _p16._0);
			case 'OnStartExclusiveMode':
				return _jigargosar$elm_simple_gtd$ExclusiveMode_Main$start(_p16._0);
			case 'OnMainMsg':
				return A2(_jigargosar$elm_simple_gtd$Main_Update$update, andThenUpdate, _p16._0);
			case 'OnShowMainMenu':
				return function (_p17) {
					return A2(
						_Fresheyeball$elm_return$Return$command,
						_jigargosar$elm_simple_gtd$Update$positionMainMenuCmd,
						A2(_jigargosar$elm_simple_gtd$Update$map, _jigargosar$elm_simple_gtd$Model_ExMode$showMainMenu, _p17));
				};
			case 'OnEntityListKeyDown':
				var _p21 = _p16._0;
				var _p18 = _p16._1.key;
				switch (_p18.ctor) {
					case 'ArrowUp':
						return function (_p19) {
							return A2(
								andThenUpdate,
								_jigargosar$elm_simple_gtd$Model$setDomFocusToFocusInEntityCmd,
								A2(
									_jigargosar$elm_simple_gtd$Update$map,
									A2(_jigargosar$elm_simple_gtd$Model$moveFocusBy, -1, _p21),
									_p19));
						};
					case 'ArrowDown':
						return function (_p20) {
							return A2(
								andThenUpdate,
								_jigargosar$elm_simple_gtd$Model$setDomFocusToFocusInEntityCmd,
								A2(
									_jigargosar$elm_simple_gtd$Update$map,
									A2(_jigargosar$elm_simple_gtd$Model$moveFocusBy, 1, _p21),
									_p20));
						};
					default:
						return _elm_lang$core$Basics$identity;
				}
			case 'OnRemotePouchSync':
				return function (_p22) {
					return A2(
						_Fresheyeball$elm_return$Return$effect_,
						function (_p23) {
							return _jigargosar$elm_simple_gtd$Update$syncWithRemotePouch(
								function (_) {
									return _.pouchDBRemoteSyncURI;
								}(_p23));
						},
						A2(andThenUpdate, _jigargosar$elm_simple_gtd$Msg$OnSaveCurrentForm, _p22));
				};
			case 'OnReminderOverlayAction':
				return _jigargosar$elm_simple_gtd$Update$reminderOverlayAction(_p16._0);
			case 'OnDeactivateEditingMode':
				return function (_p24) {
					return A2(
						andThenUpdate,
						_jigargosar$elm_simple_gtd$Model$setDomFocusToFocusInEntityCmd,
						A2(_jigargosar$elm_simple_gtd$Update$map, _jigargosar$elm_simple_gtd$Model_ExMode$deactivateEditingMode, _p24));
				};
			case 'OnStartEditingContext':
				var _p26 = _p16._0;
				return function (_p25) {
					return A2(
						_Fresheyeball$elm_return$Return$command,
						_jigargosar$elm_simple_gtd$Update$positionContextMenuCmd(_p26),
						A2(
							_jigargosar$elm_simple_gtd$Update$map,
							_jigargosar$elm_simple_gtd$Model_ExMode$startEditingTodoContext(_p26),
							_p25));
				};
			case 'OnStartEditingProject':
				var _p28 = _p16._0;
				return function (_p27) {
					return A2(
						_Fresheyeball$elm_return$Return$command,
						_jigargosar$elm_simple_gtd$Update$positionProjectMenuCmd(_p28),
						A2(
							_jigargosar$elm_simple_gtd$Update$map,
							_jigargosar$elm_simple_gtd$Model_ExMode$startEditingTodoProject(_p28),
							_p27));
				};
			case 'OnNewTodoTextChanged':
				return _jigargosar$elm_simple_gtd$Update$map(
					A2(_jigargosar$elm_simple_gtd$Model_ExMode$updateNewTodoText, _p16._0, _p16._1));
			case 'OnStartEditingReminder':
				var _p30 = _p16._0;
				return function (_p29) {
					return A2(
						_Fresheyeball$elm_return$Return$command,
						_jigargosar$elm_simple_gtd$Update$positionScheduleMenuCmd(_p30),
						A2(
							_jigargosar$elm_simple_gtd$Update$map,
							_jigargosar$elm_simple_gtd$Model_ExMode$startEditingReminder(_p30),
							_p29));
				};
			case 'OnUpdateTodoForm':
				return _jigargosar$elm_simple_gtd$Update$map(
					function (_p31) {
						return _jigargosar$elm_simple_gtd$Model_ExMode$setEditMode(
							_jigargosar$elm_simple_gtd$ExclusiveMode_Types$XMEditTodo(_p31));
					}(
						A2(_jigargosar$elm_simple_gtd$Todo_Form$set, _p16._1, _p16._0)));
			case 'OnEditTodoProjectMenuStateChanged':
				return function (_p32) {
					return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
						A2(
							_jigargosar$elm_simple_gtd$Update$map,
							function (_p33) {
								return _jigargosar$elm_simple_gtd$Model_ExMode$setEditMode(
									_jigargosar$elm_simple_gtd$ExclusiveMode_Types$XMEditTodoProject(_p33));
							}(
								A2(_jigargosar$elm_simple_gtd$Todo_GroupForm$setMenuState, _p16._1, _p16._0)),
							_p32));
				};
			case 'OnMainMenuStateChanged':
				return function (_p34) {
					return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
						A2(
							_jigargosar$elm_simple_gtd$Update$map,
							function (_p35) {
								return _jigargosar$elm_simple_gtd$Model_ExMode$setEditMode(
									_jigargosar$elm_simple_gtd$ExclusiveMode_Types$XMMainMenu(_p35));
							}(_p16._0),
							_p34));
				};
			case 'OnEditTodoContextMenuStateChanged':
				return function (_p36) {
					return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
						A2(
							_jigargosar$elm_simple_gtd$Update$map,
							function (_p37) {
								return _jigargosar$elm_simple_gtd$Model_ExMode$setEditMode(
									_jigargosar$elm_simple_gtd$ExclusiveMode_Types$XMEditTodoContext(_p37));
							}(
								A2(_jigargosar$elm_simple_gtd$Todo_GroupForm$setMenuState, _p16._1, _p16._0)),
							_p36));
				};
			case 'OnUpdateRemoteSyncFormUri':
				return _jigargosar$elm_simple_gtd$Update$map(
					function (_p38) {
						return _jigargosar$elm_simple_gtd$Model_ExMode$setEditMode(
							_jigargosar$elm_simple_gtd$ExclusiveMode_Types$XMEditSyncSettings(_p38));
					}(
						_elm_lang$core$Native_Utils.update(
							_p16._0,
							{uri: _p16._1})));
			case 'OnSetViewType':
				return _jigargosar$elm_simple_gtd$Update$map(
					_jigargosar$elm_simple_gtd$Model_ViewType$switchToView(_p16._0));
			case 'OnSaveCurrentForm':
				return function (_p39) {
					return A2(
						andThenUpdate,
						_jigargosar$elm_simple_gtd$Msg$OnDeactivateEditingMode,
						A2(_Fresheyeball$elm_return$Return$andThen, _jigargosar$elm_simple_gtd$Model_ExMode$saveCurrentForm, _p39));
				};
			case 'OnEntityMsg':
				return A2(_jigargosar$elm_simple_gtd$Entity_Main$update, andThenUpdate, _p16._0);
			case 'OnLaunchBarMsgWithNow':
				return A3(_jigargosar$elm_simple_gtd$LaunchBar_Main$update, andThenUpdate, _p16._1, _p16._0);
			case 'OnLaunchBarMsg':
				return _jigargosar$elm_simple_gtd$Update$withNow(
					_jigargosar$elm_simple_gtd$Msg$OnLaunchBarMsgWithNow(_p16._0));
			case 'OnCloseNotification':
				return _jigargosar$elm_simple_gtd$Update$command(
					_jigargosar$elm_simple_gtd$Notification$closeNotification(_p16._0));
			case 'OnKeyCombo':
				return _Fresheyeball$elm_return$Return$andThen(
					_jigargosar$elm_simple_gtd$Model$updateCombo(_p16._0));
			case 'OnTodoMsg':
				return _jigargosar$elm_simple_gtd$Update$withNow(
					_jigargosar$elm_simple_gtd$Msg$OnTodoMsgWithTime(_p16._0));
			case 'OnTodoMsgWithTime':
				return A3(_jigargosar$elm_simple_gtd$Todo_Main$update, andThenUpdate, _p16._1, _p16._0);
			case 'OnFirebaseMsg':
				return A2(_jigargosar$elm_simple_gtd$Firebase_Main$update, andThenUpdate, _p16._0);
			case 'OnAppDrawerMsg':
				return A2(_jigargosar$elm_simple_gtd$AppDrawer_Main$update, andThenUpdate, _p16._0);
			case 'OnPersistLocalPref':
				return _Fresheyeball$elm_return$Return$effect_(
					function (_p40) {
						return _jigargosar$elm_simple_gtd$Update$persistLocalPref(
							_jigargosar$elm_simple_gtd$LocalPref$encodeLocalPref(_p40));
					});
			default:
				return _Fresheyeball$elm_return$Return$andThen(
					A2(_debois$elm_mdl$Material$update, _jigargosar$elm_simple_gtd$Msg$OnMdl, _p16._0));
		}
	});
