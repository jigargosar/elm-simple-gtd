{"version":3,"sources":["../src/storage/service.ts"],"names":["args","fbsPromiseImpl","RequestExports","Service","app","pool","url","bucket_","authWrapper_","authWrapper","loc","makeRequest","app_","makeFromBucketSpec","authWrapperBucket","bucket","internals_","ServiceInternals","path","validate","stringSpec","test","arguments","Error","ref","child","p","makeFromUrl","e","time","nonNegativeNumberSpec","setMaxUploadRetryTime","setMaxOperationRetryTime","maxUploadRetryTime","maxOperationRetryTime","service","service_","deleteApp","resolve","undefined"],"mappings":"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","file":"service.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nimport * as args from './implementation/args';\nimport {AuthWrapper} from './implementation/authwrapper';\nimport {Location} from './implementation/location';\nimport * as fbsPromiseImpl from './implementation/promise_external';\nimport * as RequestExports from './implementation/request';\nimport {Request} from './implementation/request';\nimport {XhrIoPool} from './implementation/xhriopool';\nimport {Reference} from './reference';\nimport { FirebaseApp } from \"../app/firebase_app\";\n\n/**\n * A service that provides firebaseStorage.Reference instances.\n * @param opt_url gs:// url to a custom Storage Bucket\n *\n * @struct\n */\nexport class Service {\n  authWrapper_: AuthWrapper;\n  private app_: FirebaseApp;\n  private bucket_: Location|null = null;\n  private internals_: ServiceInternals;\n\n  constructor(app: FirebaseApp, pool: XhrIoPool, url?: string) {\n    function maker(authWrapper: AuthWrapper, loc: Location) {\n      return new Reference(authWrapper, loc);\n    }\n    this.authWrapper_ =\n        new AuthWrapper(app, maker, RequestExports.makeRequest, this, pool);\n    this.app_ = app;\n    if (url != null) {\n      this.bucket_ = Location.makeFromBucketSpec(url);\n    } else {\n      const authWrapperBucket = this.authWrapper_.bucket();\n      if (authWrapperBucket != null) {\n        this.bucket_ = new Location(authWrapperBucket, '');\n      }\n    }\n    this.internals_ = new ServiceInternals(this);\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference for the given path in the default\n   * bucket.\n   */\n  ref(path?: string): Reference {\n    function validator(path: string) {\n      if (/^[A-Za-z]+:\\/\\//.test(path)) {\n        throw 'Expected child path but got a URL, use refFromURL instead.';\n      }\n    }\n    args.validate('ref', [args.stringSpec(validator, true)], arguments);\n    if (this.bucket_ == null) {\n      throw new Error('No Storage Bucket defined in Firebase Options.');\n    }\n\n    let ref = new Reference(this.authWrapper_, this.bucket_);\n    if (path != null) {\n      return ref.child(path);\n    } else {\n      return ref;\n    }\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\n   * which must be a gs:// or http[s]:// URL.\n   */\n  refFromURL(url: string): Reference {\n    function validator(p: string) {\n      if (!/^[A-Za-z]+:\\/\\//.test(p)) {\n        throw 'Expected full URL but got a child path, use ref instead.';\n      }\n      try {\n        Location.makeFromUrl(p);\n      } catch (e) {\n        throw 'Expected valid full URL but got an invalid one.';\n      }\n    }\n    args.validate('refFromURL', [args.stringSpec(validator, false)], arguments);\n    return new Reference(this.authWrapper_, url);\n  }\n\n  get maxUploadRetryTime(): number {\n    return this.authWrapper_.maxUploadRetryTime();\n  }\n\n  setMaxUploadRetryTime(time: number) {\n    args.validate(\n        'setMaxUploadRetryTime', [args.nonNegativeNumberSpec()], arguments);\n    this.authWrapper_.setMaxUploadRetryTime(time);\n  }\n\n  get maxOperationRetryTime(): number {\n    return this.authWrapper_.maxOperationRetryTime();\n  }\n\n  setMaxOperationRetryTime(time: number) {\n    args.validate(\n        'setMaxOperationRetryTime', [args.nonNegativeNumberSpec()], arguments);\n    this.authWrapper_.setMaxOperationRetryTime(time);\n  }\n\n  get app(): FirebaseApp {\n    return this.app_;\n  }\n\n  get INTERNAL(): ServiceInternals {\n    return this.internals_;\n  }\n}\n\n/**\n * @struct\n */\nexport class ServiceInternals {\n  service_: Service;\n\n  constructor(service: Service) {\n    this.service_ = service;\n  }\n\n  /**\n   * Called when the associated app is deleted.\n   * @see {!fbs.AuthWrapper.prototype.deleteApp}\n   */\n  delete(): Promise<void> {\n    this.service_.authWrapper_.deleteApp();\n    return fbsPromiseImpl.resolve<void>(undefined);\n  }\n}\n"]}