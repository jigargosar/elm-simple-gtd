var _jigargosar$elm_simple_gtd$Main$onFirebaseDatabaseChange = _elm_lang$core$Native_Platform.incomingPort(
	'onFirebaseDatabaseChange',
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (x0) {
			return A2(
				_elm_lang$core$Json_Decode$andThen,
				function (x1) {
					return _elm_lang$core$Json_Decode$succeed(
						{ctor: '_Tuple2', _0: x0, _1: x1});
				},
				A2(_elm_lang$core$Json_Decode$index, 1, _elm_lang$core$Json_Decode$value));
		},
		A2(_elm_lang$core$Json_Decode$index, 0, _elm_lang$core$Json_Decode$string)));
var _jigargosar$elm_simple_gtd$Main$onFirebaseDatabaseChangeSub = function (tagger) {
	return _jigargosar$elm_simple_gtd$Main$onFirebaseDatabaseChange(
		_elm_lang$core$Basics$uncurry(tagger));
};
var _jigargosar$elm_simple_gtd$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: A2(
				_elm_lang$core$Platform_Sub$map,
				_jigargosar$elm_simple_gtd$Model$OnSubMsg,
				_elm_lang$core$Platform_Sub$batch(
					{
						ctor: '::',
						_0: A2(_elm_lang$core$Time$every, _elm_lang$core$Time$second * 1, _jigargosar$elm_simple_gtd$Model$OnNowChanged),
						_1: {
							ctor: '::',
							_0: _jigargosar$elm_simple_gtd$X_Keyboard$subscription(_jigargosar$elm_simple_gtd$Model$OnKeyboardMsg),
							_1: {
								ctor: '::',
								_0: _jigargosar$elm_simple_gtd$X_Keyboard$ups(_jigargosar$elm_simple_gtd$Model$OnGlobalKeyUp),
								_1: {
									ctor: '::',
									_0: _jigargosar$elm_simple_gtd$Store$onChange(_jigargosar$elm_simple_gtd$Model$OnPouchDBChange),
									_1: {
										ctor: '::',
										_0: _jigargosar$elm_simple_gtd$Main$onFirebaseDatabaseChangeSub(_jigargosar$elm_simple_gtd$Model$OnFirebaseDatabaseChange),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					})),
			_1: {
				ctor: '::',
				_0: _scottcorgan$keyboard_combo$Keyboard_Combo$subscriptions(model.keyComboModel),
				_1: {
					ctor: '::',
					_0: _jigargosar$elm_simple_gtd$Todo_Main$subscriptions(model),
					_1: {
						ctor: '::',
						_0: _jigargosar$elm_simple_gtd$Firebase_Main$subscriptions(model),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _jigargosar$elm_simple_gtd$Main$main = _rgrempel$elm_route_url$RouteUrl$programWithFlags(
	{delta2url: _jigargosar$elm_simple_gtd$Routes$delta2hash, location2messages: _jigargosar$elm_simple_gtd$Routes$hash2messages, init: _jigargosar$elm_simple_gtd$Model$init, update: _jigargosar$elm_simple_gtd$Update$update, view: _jigargosar$elm_simple_gtd$View$init, subscriptions: _jigargosar$elm_simple_gtd$Main$subscriptions})(
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (appVersion) {
			return A2(
				_elm_lang$core$Json_Decode$andThen,
				function (config) {
					return A2(
						_elm_lang$core$Json_Decode$andThen,
						function (developmentMode) {
							return A2(
								_elm_lang$core$Json_Decode$andThen,
								function (deviceId) {
									return A2(
										_elm_lang$core$Json_Decode$andThen,
										function (encodedContextList) {
											return A2(
												_elm_lang$core$Json_Decode$andThen,
												function (encodedProjectList) {
													return A2(
														_elm_lang$core$Json_Decode$andThen,
														function (encodedTodoList) {
															return A2(
																_elm_lang$core$Json_Decode$andThen,
																function (localPref) {
																	return A2(
																		_elm_lang$core$Json_Decode$andThen,
																		function (now) {
																			return A2(
																				_elm_lang$core$Json_Decode$andThen,
																				function (pouchDBRemoteSyncURI) {
																					return _elm_lang$core$Json_Decode$succeed(
																						{appVersion: appVersion, config: config, developmentMode: developmentMode, deviceId: deviceId, encodedContextList: encodedContextList, encodedProjectList: encodedProjectList, encodedTodoList: encodedTodoList, localPref: localPref, now: now, pouchDBRemoteSyncURI: pouchDBRemoteSyncURI});
																				},
																				A2(_elm_lang$core$Json_Decode$field, 'pouchDBRemoteSyncURI', _elm_lang$core$Json_Decode$string));
																		},
																		A2(_elm_lang$core$Json_Decode$field, 'now', _elm_lang$core$Json_Decode$float));
																},
																A2(_elm_lang$core$Json_Decode$field, 'localPref', _elm_lang$core$Json_Decode$value));
														},
														A2(
															_elm_lang$core$Json_Decode$field,
															'encodedTodoList',
															_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$value)));
												},
												A2(
													_elm_lang$core$Json_Decode$field,
													'encodedProjectList',
													_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$value)));
										},
										A2(
											_elm_lang$core$Json_Decode$field,
											'encodedContextList',
											_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$value)));
								},
								A2(_elm_lang$core$Json_Decode$field, 'deviceId', _elm_lang$core$Json_Decode$string));
						},
						A2(_elm_lang$core$Json_Decode$field, 'developmentMode', _elm_lang$core$Json_Decode$bool));
				},
				A2(
					_elm_lang$core$Json_Decode$field,
					'config',
					A2(
						_elm_lang$core$Json_Decode$andThen,
						function (isFirstVisit) {
							return _elm_lang$core$Json_Decode$succeed(
								{isFirstVisit: isFirstVisit});
						},
						A2(_elm_lang$core$Json_Decode$field, 'isFirstVisit', _elm_lang$core$Json_Decode$bool))));
		},
		A2(_elm_lang$core$Json_Decode$field, 'appVersion', _elm_lang$core$Json_Decode$string)));
