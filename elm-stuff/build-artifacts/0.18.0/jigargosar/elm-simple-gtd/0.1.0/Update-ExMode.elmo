var _jigargosar$elm_simple_gtd$Update_ExMode$inboxEntity = _jigargosar$elm_simple_gtd$Entity_Types$createContextEntity(_jigargosar$elm_simple_gtd$Context$null);
var _jigargosar$elm_simple_gtd$Update_ExMode$saveAddTodoForm = F3(
	function (addMode, form, model) {
		return A2(
			_elm_lang$core$Basics$uncurry,
			function (todoId) {
				var referenceEntity = function () {
					var _p0 = addMode;
					switch (_p0.ctor) {
						case 'ATFM_AddToInbox':
							return _jigargosar$elm_simple_gtd$Update_ExMode$inboxEntity;
						case 'ATFM_SetupFirstTodo':
							return _jigargosar$elm_simple_gtd$Update_ExMode$inboxEntity;
						default:
							return model.focusInEntity;
					}
				}();
				return function (_p1) {
					return A2(
						_Fresheyeball$elm_return$Return$map,
						_jigargosar$elm_simple_gtd$Stores$setFocusInEntityWithTodoId(todoId),
						A3(
							_jigargosar$elm_simple_gtd$Stores$updateTodo,
							function () {
								var _p2 = referenceEntity;
								if (_p2.ctor === 'TodoEntity') {
									return _jigargosar$elm_simple_gtd$Todo_Types$TA_CopyProjectAndContextId(_p2._0);
								} else {
									var _p3 = _p2._0;
									if (_p3.ctor === 'ContextEntity') {
										return _jigargosar$elm_simple_gtd$Todo_Types$TA_SetContext(_p3._0);
									} else {
										return _jigargosar$elm_simple_gtd$Todo_Types$TA_SetProject(_p3._0);
									}
								}
							}(),
							todoId,
							_p1));
				};
			},
			A2(
				_elm_lang$core$Tuple$mapFirst,
				_jigargosar$elm_simple_gtd$Document_Types$getDocId,
				A2(
					_jigargosar$elm_simple_gtd$Stores$insertTodo,
					A2(_jigargosar$elm_simple_gtd$Todo$init, model.now, form.text),
					model)));
	});
var _jigargosar$elm_simple_gtd$Update_ExMode$saveExclusiveModeForm = function (exMode) {
	var _p4 = exMode;
	switch (_p4.ctor) {
		case 'XMGroupDocForm':
			var _p10 = _p4._0;
			var insert = F2(
				function (store, updateFn) {
					return _Fresheyeball$elm_return$Return$andThen(
						function (model) {
							return function (_p5) {
								var _p6 = _p5;
								return A3(
									updateFn,
									_jigargosar$elm_simple_gtd$Document_Types$getDocId(_p6._0),
									_elm_lang$core$Basics$identity,
									_p6._1);
							}(
								A3(
									_jigargosar$elm_simple_gtd$X_Record$overT2,
									store,
									_jigargosar$elm_simple_gtd$Store$insert(
										A2(_jigargosar$elm_simple_gtd$GroupDoc$init, _p10.name, model.now)),
									model));
						});
				});
			var update = function (fn) {
				return _Fresheyeball$elm_return$Return$andThen(
					A2(
						fn,
						_p10.id,
						_jigargosar$elm_simple_gtd$GroupDoc$setName(_p10.name)));
			};
			var _p7 = _p10.groupDocType;
			if (_p7.ctor === 'ContextGroupDoc') {
				var _p8 = _p10.mode;
				if (_p8.ctor === 'GDFM_Add') {
					return A2(insert, _jigargosar$elm_simple_gtd$Stores$contextStore, _jigargosar$elm_simple_gtd$Stores$updateContext);
				} else {
					return update(_jigargosar$elm_simple_gtd$Stores$updateContext);
				}
			} else {
				var _p9 = _p10.mode;
				if (_p9.ctor === 'GDFM_Add') {
					return A2(insert, _jigargosar$elm_simple_gtd$Stores$projectStore, _jigargosar$elm_simple_gtd$Stores$updateProject);
				} else {
					return update(_jigargosar$elm_simple_gtd$Stores$updateProject);
				}
			}
		case 'XMTodoForm':
			var _p13 = _p4._0;
			var _p11 = _p13.mode;
			if (_p11.ctor === 'TFM_Edit') {
				var updateTodo = function (action) {
					return _Fresheyeball$elm_return$Return$andThen(
						A2(_jigargosar$elm_simple_gtd$Stores$updateTodo, action, _p13.id));
				};
				var _p12 = _p11._0;
				switch (_p12.ctor) {
					case 'ETFM_EditTodoText':
						return updateTodo(
							_jigargosar$elm_simple_gtd$Todo_Types$TA_SetText(_p13.text));
					case 'ETFM_EditTodoReminder':
						return updateTodo(
							_jigargosar$elm_simple_gtd$Todo_Types$TA_SetScheduleFromMaybeTime(_p13.maybeComputedTime));
					default:
						return _elm_lang$core$Basics$identity;
				}
			} else {
				return _Fresheyeball$elm_return$Return$andThen(
					A2(_jigargosar$elm_simple_gtd$Update_ExMode$saveAddTodoForm, _p11._0, _p13));
			}
		case 'XMEditSyncSettings':
			return _Fresheyeball$elm_return$Return$map(
				function (model) {
					return _elm_lang$core$Native_Utils.update(
						model,
						{pouchDBRemoteSyncURI: _p4._0.uri});
				});
		default:
			return _elm_lang$core$Basics$identity;
	}
};
var _jigargosar$elm_simple_gtd$Update_ExMode$onSaveExclusiveModeForm = function (andThenUpdate) {
	return function (_p14) {
		return A2(
			andThenUpdate,
			_jigargosar$elm_simple_gtd$XMMsg$onSetExclusiveModeToNoneAndTryRevertingFocus,
			A3(
				_jigargosar$elm_simple_gtd$X_Return$with,
				function (_) {
					return _.editMode;
				},
				_jigargosar$elm_simple_gtd$Update_ExMode$saveExclusiveModeForm,
				_p14));
	};
};
