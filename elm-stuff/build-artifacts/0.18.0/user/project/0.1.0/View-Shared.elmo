var _user$project$View_Shared$deleteButton = function (msg) {
	return A2(
		_edvail$elm_polymer$Polymer_Paper$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(msg),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('Delete'),
			_1: {ctor: '[]'}
		});
};
var _user$project$View_Shared$cancelButton = function (msg) {
	return A2(
		_edvail$elm_polymer$Polymer_Paper$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(msg),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('Cancel'),
			_1: {ctor: '[]'}
		});
};
var _user$project$View_Shared$okButton = function (msg) {
	return A2(
		_edvail$elm_polymer$Polymer_Paper$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(msg),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('Ok'),
			_1: {ctor: '[]'}
		});
};
var _user$project$View_Shared$okCancelButtonsWith = F3(
	function (okMsg, cancelMsg, list) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('layout horizontal-reverse'),
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: _user$project$View_Shared$okButton(okMsg),
					_1: {
						ctor: '::',
						_0: _user$project$View_Shared$cancelButton(cancelMsg),
						_1: {ctor: '[]'}
					}
				},
				list));
	});
var _user$project$View_Shared$defaultOkCancelDeleteButtons = function (deleteMsg) {
	return A3(
		_user$project$View_Shared$okCancelButtonsWith,
		_user$project$Model$OnSaveCurrentForm,
		_user$project$Model$OnDeactivateEditingMode,
		{
			ctor: '::',
			_0: _user$project$View_Shared$deleteButton(deleteMsg),
			_1: {ctor: '[]'}
		});
};
var _user$project$View_Shared$defaultOkCancelButtonsWith = function (list) {
	return A3(_user$project$View_Shared$okCancelButtonsWith, _user$project$Model$OnSaveCurrentForm, _user$project$Model$OnDeactivateEditingMode, list);
};
var _user$project$View_Shared$defaultOkCancelButtons = _user$project$View_Shared$defaultOkCancelButtonsWith(
	{ctor: '[]'});
var _user$project$View_Shared$badge = F2(
	function (name, count) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('layout horizontal center'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('font-nowrap'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(name),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$style(
								{
									ctor: '::',
									_0: A2(_user$project$Ext_Function_Infix_ops['=>'], 'padding', '0 0 1rem 0.1rem '),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('text-secondary'),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								A2(
									_elm_lang$core$Basics_ops['++'],
									' ',
									A2(
										_elm_lang$core$Basics_ops['++'],
										_elm_lang$core$Basics$toString(count),
										''))),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$View_Shared$defaultBadge = function (vm) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('layout horizontal center'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('font-nowrap'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(vm.name),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: A2(_user$project$Ext_Function_Infix_ops['=>'], 'padding', '0 0 1rem 0.1rem '),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('text-secondary'),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							A2(
								_elm_lang$core$Basics_ops['++'],
								' ',
								A2(
									_elm_lang$core$Basics_ops['++'],
									_elm_lang$core$Basics$toString(vm.count),
									''))),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
