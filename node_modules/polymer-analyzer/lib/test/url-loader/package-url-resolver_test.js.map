{"version":3,"sources":["test/url-loader/package-url-resolver_test.ts"],"names":[],"mappings":"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","file":"package-url-resolver_test.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {assert} from 'chai';\n\nimport {PackageUrlResolver} from '../../url-loader/package-url-resolver';\n\nsuite('PackageUrlResolver', function() {\n\n  suite('canResolve', () => {\n\n    test('is true an in-package URL', () => {\n      const r = new PackageUrlResolver();\n      assert.isTrue(r.canResolve('foo.html'));\n      assert.isTrue(r.canResolve('/foo.html'));\n      assert.isTrue(r.canResolve('./foo.html'));\n    });\n\n    test('is true for a sibling URL', () => {\n      assert.isTrue(new PackageUrlResolver().canResolve('../foo/foo.html'));\n    });\n\n    test('is false for a cousin URL', () => {\n      assert.isFalse(new PackageUrlResolver().canResolve('../../foo/foo.html'));\n    });\n\n    test('is false for URL with a hostname', () => {\n      const r = new PackageUrlResolver();\n      assert.isFalse(r.canResolve('http://abc.xyz/foo.html'));\n      assert.isFalse(r.canResolve('//abc.xyz/foo.html'));\n    });\n\n    test('is true for a URL with the right hostname', () => {\n      const r = new PackageUrlResolver({\n        hostname: 'abc.xyz',\n      });\n      assert.isTrue(r.canResolve('http://abc.xyz/foo.html'));\n      assert.isTrue(r.canResolve('http://abc.xyz/./foo.html'));\n      assert.isTrue(r.canResolve('http://abc.xyz/../foo.html'));\n      assert.isTrue(r.canResolve('http://abc.xyz/foo/../foo.html'));\n      assert.isTrue(r.canResolve('//abc.xyz/foo.html'));\n    });\n\n    test('is false for an undecodable URL', () => {\n      const r = new PackageUrlResolver();\n      assert.isFalse(r.canResolve('%><><%='));\n    });\n  });\n\n  suite('resolve', () => {\n\n    test('resolves an in-package URL', () => {\n      const r = new PackageUrlResolver();\n      assert.equal('foo.html', r.resolve('foo.html'));\n      assert.equal('foo.html', r.resolve('/foo.html'));\n      assert.equal('foo.html', r.resolve('./foo.html'));\n    });\n\n    test('resolves a sibling URL', () => {\n      assert.equal(\n          'bower_components/foo/foo.html',\n          new PackageUrlResolver().resolve('../foo/foo.html'));\n    });\n\n    test('throws for a cousin URL', () => {\n      assert.throws(\n          () => new PackageUrlResolver().resolve('../../foo/foo.html'));\n    });\n\n    test('throws for a URL with a hostname', () => {\n      assert.throws(\n          () => new PackageUrlResolver().resolve('http://abc.xyz/foo.html'));\n    });\n\n    test('resolves a URL with the right hostname', () => {\n      const r = new PackageUrlResolver({\n        componentDir: 'components',\n        hostname: 'abc.xyz',\n      });\n      assert.equal('foo.html', r.resolve('http://abc.xyz/foo.html'));\n      assert.equal('foo.html', r.resolve('http://abc.xyz/./foo.html'));\n      assert.equal('foo.html', r.resolve('http://abc.xyz/../foo.html'));\n      assert.equal('foo.html', r.resolve('http://abc.xyz/foo/../foo.html'));\n\n      assert.equal('foo.html', r.resolve('foo.html'));\n      assert.equal('foo.html', r.resolve('./foo.html'));\n      assert.equal('components/foo/foo.html', r.resolve('../foo/foo.html'));\n      assert.equal('foo.html', r.resolve('foo/../foo.html'));\n\n      assert.equal('foo.html', r.resolve('/foo.html'));\n      assert.equal('foo.html', r.resolve('/./foo.html'));\n      assert.equal('foo/foo.html', r.resolve('/../foo/foo.html'));\n      assert.equal('foo.html', r.resolve('/foo/../foo.html'));\n\n    });\n\n    test('resolves a URL with spaces', () => {\n      const r = new PackageUrlResolver();\n      assert.equal(r.resolve('spaced name.html'), 'spaced%20name.html');\n    });\n  });\n\n});\n"]}