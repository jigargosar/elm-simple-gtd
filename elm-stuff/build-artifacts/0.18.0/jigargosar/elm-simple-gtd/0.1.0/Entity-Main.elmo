var _jigargosar$elm_simple_gtd$Entity_Main$getTodoGotoGroupView = F2(
	function (todo, prevView) {
		var projectView = _jigargosar$elm_simple_gtd$Entity_Types$ProjectView(
			_jigargosar$elm_simple_gtd$Todo$getProjectId(todo));
		var contextView = _jigargosar$elm_simple_gtd$Entity_Types$ContextView(
			_jigargosar$elm_simple_gtd$Todo$getContextId(todo));
		var _p0 = prevView;
		switch (_p0.ctor) {
			case 'ProjectsView':
				return contextView;
			case 'ProjectView':
				return contextView;
			case 'ContextsView':
				return projectView;
			case 'ContextView':
				return projectView;
			case 'BinView':
				return _jigargosar$elm_simple_gtd$Entity_Types$ContextsView;
			case 'DoneView':
				return _jigargosar$elm_simple_gtd$Entity_Types$ContextsView;
			default:
				return _jigargosar$elm_simple_gtd$Entity_Types$ContextsView;
		}
	});
var _jigargosar$elm_simple_gtd$Entity_Main$toViewType = F3(
	function (appModel, maybeCurrentEntityListViewType, entityId) {
		var _p1 = entityId;
		switch (_p1.ctor) {
			case 'ContextId':
				return _jigargosar$elm_simple_gtd$Entity_Types$ContextView(_p1._0);
			case 'ProjectId':
				return _jigargosar$elm_simple_gtd$Entity_Types$ProjectView(_p1._0);
			default:
				var getViewTypeForTodo = function (todo) {
					return A2(
						_danielnarey$elm_toolkit$Toolkit_Operators_ops['?='],
						A2(
							_danielnarey$elm_toolkit$Toolkit_Operators_ops['?|>'],
							maybeCurrentEntityListViewType,
							_jigargosar$elm_simple_gtd$Entity_Main$getTodoGotoGroupView(todo)),
						_jigargosar$elm_simple_gtd$Entity_Types$ContextView(
							_jigargosar$elm_simple_gtd$Todo$getContextId(todo)));
				};
				return A2(
					_danielnarey$elm_toolkit$Toolkit_Operators_ops['?='],
					A2(
						_elm_community$maybe_extra$Maybe_Extra$orElse,
						maybeCurrentEntityListViewType,
						A2(
							_danielnarey$elm_toolkit$Toolkit_Operators_ops['?|>'],
							A2(_jigargosar$elm_simple_gtd$Stores$findTodoById, _p1._0, appModel),
							getViewTypeForTodo)),
					_jigargosar$elm_simple_gtd$Entity_Types$ContextsView);
		}
	});
var _jigargosar$elm_simple_gtd$Entity_Main$startEditingEntity = F2(
	function (andThenUpdate, entityId) {
		var _p2 = entityId;
		switch (_p2.ctor) {
			case 'ContextId':
				return A2(
					_jigargosar$elm_simple_gtd$X_Return$withMaybe,
					_jigargosar$elm_simple_gtd$Stores$findContextById(_p2._0),
					function (_p3) {
						return andThenUpdate(
							_jigargosar$elm_simple_gtd$XMMsg$onSetExclusiveMode(
								_jigargosar$elm_simple_gtd$ExclusiveMode_Types$XMGroupDocForm(
									_jigargosar$elm_simple_gtd$GroupDoc_Form$createEditContextForm(_p3))));
					});
			case 'ProjectId':
				return A2(
					_jigargosar$elm_simple_gtd$X_Return$withMaybe,
					_jigargosar$elm_simple_gtd$Stores$findProjectById(_p2._0),
					function (_p4) {
						return andThenUpdate(
							_jigargosar$elm_simple_gtd$XMMsg$onSetExclusiveMode(
								_jigargosar$elm_simple_gtd$ExclusiveMode_Types$XMGroupDocForm(
									_jigargosar$elm_simple_gtd$GroupDoc_Form$createEditProjectForm(_p4))));
					});
			default:
				return A2(
					_jigargosar$elm_simple_gtd$X_Return$withMaybe,
					_jigargosar$elm_simple_gtd$Stores$findTodoById(_p2._0),
					function (_p5) {
						return andThenUpdate(
							_jigargosar$elm_simple_gtd$TodoMsg$onStartEditingTodo(_p5));
					});
		}
	});
var _jigargosar$elm_simple_gtd$Entity_Main$toggleDeleteEntity = function (entityId) {
	var _p6 = entityId;
	switch (_p6.ctor) {
		case 'ContextId':
			return A2(_jigargosar$elm_simple_gtd$Stores$updateContext, _p6._0, _jigargosar$elm_simple_gtd$Document$toggleDeleted);
		case 'ProjectId':
			return A2(_jigargosar$elm_simple_gtd$Stores$updateProject, _p6._0, _jigargosar$elm_simple_gtd$Document$toggleDeleted);
		default:
			return A2(_jigargosar$elm_simple_gtd$Stores$updateTodo, _jigargosar$elm_simple_gtd$Todo_Types$TA_ToggleDeleted, _p6._0);
	}
};
var _jigargosar$elm_simple_gtd$Entity_Main$switchToEntityListViewFromEntity = F2(
	function (entityId, model) {
		var maybeEntityListViewType = _jigargosar$elm_simple_gtd$Model_ViewType$maybeGetCurrentEntityListViewType(model);
		return A2(_danielnarey$elm_toolkit$Toolkit_Operators_ops['#'], _jigargosar$elm_simple_gtd$Model_ViewType$setEntityListViewType, model)(
			A3(_jigargosar$elm_simple_gtd$Entity_Main$toViewType, model, maybeEntityListViewType, entityId));
	});
var _jigargosar$elm_simple_gtd$Entity_Main$toggleSetMember = F2(
	function (item, set) {
		return A2(_elm_lang$core$Set$member, item, set) ? A2(_elm_lang$core$Set$remove, item, set) : A2(_elm_lang$core$Set$insert, item, set);
	});
var _jigargosar$elm_simple_gtd$Entity_Main$toggleEntitySelection = function (entityId) {
	return _jigargosar$elm_simple_gtd$Model_Selection$updateSelectedEntityIdSet(
		_jigargosar$elm_simple_gtd$Entity_Main$toggleSetMember(
			_jigargosar$elm_simple_gtd$Entity_Types$getDocIdFromEntityId(entityId)));
};
var _jigargosar$elm_simple_gtd$Entity_Main$onUpdate = F3(
	function (andThenUpdate, entityId, action) {
		var _p7 = action;
		switch (_p7.ctor) {
			case 'EUA_StartEditing':
				return function (_p8) {
					return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputRCmd(
						A3(_jigargosar$elm_simple_gtd$Entity_Main$startEditingEntity, andThenUpdate, entityId, _p8));
				};
			case 'EUA_SetFormText':
				return A2(
					_jigargosar$elm_simple_gtd$X_Return$returnWith,
					function (_) {
						return _.editMode;
					},
					function (xMode) {
						var _p9 = xMode;
						if (_p9.ctor === 'XMGroupDocForm') {
							return function (_p10) {
								return andThenUpdate(
									_jigargosar$elm_simple_gtd$XMMsg$onSetExclusiveMode(
										_jigargosar$elm_simple_gtd$ExclusiveMode_Types$XMGroupDocForm(_p10)));
							}(
								A2(_jigargosar$elm_simple_gtd$GroupDoc_Form$setName, _p7._0, _p9._0));
						} else {
							return _elm_lang$core$Basics$identity;
						}
					});
			case 'EUA_ToggleDeleted':
				return function (_p11) {
					return A2(
						andThenUpdate,
						_jigargosar$elm_simple_gtd$XMMsg$onSetExclusiveModeToNoneAndTryRevertingFocus,
						A2(
							_Fresheyeball$elm_return$Return$andThen,
							_jigargosar$elm_simple_gtd$Entity_Main$toggleDeleteEntity(entityId),
							_p11));
				};
			case 'EUA_ToggleArchived':
				var toggleArchivedEntity = function () {
					var _p12 = entityId;
					switch (_p12.ctor) {
						case 'ContextId':
							return _Fresheyeball$elm_return$Return$andThen(
								A2(_jigargosar$elm_simple_gtd$Stores$updateContext, _p12._0, _jigargosar$elm_simple_gtd$GroupDoc$toggleArchived));
						case 'ProjectId':
							return _Fresheyeball$elm_return$Return$andThen(
								A2(_jigargosar$elm_simple_gtd$Stores$updateProject, _p12._0, _jigargosar$elm_simple_gtd$GroupDoc$toggleArchived));
						default:
							return andThenUpdate(
								_jigargosar$elm_simple_gtd$Msg$OnTodoMsg(
									A2(_jigargosar$elm_simple_gtd$Todo_Msg$OnUpdateTodoAndMaybeSelectedAndDeactivateEditingMode, _p12._0, _jigargosar$elm_simple_gtd$Todo_Types$TA_ToggleDone)));
					}
				}();
				return function (_p13) {
					return A2(
						andThenUpdate,
						_jigargosar$elm_simple_gtd$XMMsg$onSetExclusiveModeToNoneAndTryRevertingFocus,
						toggleArchivedEntity(_p13));
				};
			case 'EUA_OnFocusIn':
				return _Fresheyeball$elm_return$Return$map(
					_jigargosar$elm_simple_gtd$Stores$setFocusInEntityWithEntityId(entityId));
			case 'EUA_ToggleSelection':
				return _Fresheyeball$elm_return$Return$map(
					_jigargosar$elm_simple_gtd$Entity_Main$toggleEntitySelection(entityId));
			default:
				return _Fresheyeball$elm_return$Return$map(
					_jigargosar$elm_simple_gtd$Entity_Main$switchToEntityListViewFromEntity(entityId));
		}
	});
var _jigargosar$elm_simple_gtd$Entity_Main$moveFocusBy = A2(
	_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>>'],
	_jigargosar$elm_simple_gtd$Entity$findEntityByOffsetIn,
	_jigargosar$elm_simple_gtd$X_Record$maybeOver(_jigargosar$elm_simple_gtd$Model$focusInEntity));
var _jigargosar$elm_simple_gtd$Entity_Main$map = _Fresheyeball$elm_return$Return$map;
var _jigargosar$elm_simple_gtd$Entity_Main$update = F2(
	function (andThenUpdate, msg) {
		var _p14 = msg;
		switch (_p14.ctor) {
			case 'EM_StartAddingContext':
				return function (_p15) {
					return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputRCmd(
						function (_p16) {
							return andThenUpdate(
								_jigargosar$elm_simple_gtd$XMMsg$onSetExclusiveMode(
									_jigargosar$elm_simple_gtd$ExclusiveMode_Types$XMGroupDocForm(_p16)));
						}(
							_jigargosar$elm_simple_gtd$GroupDoc_Form$createAddGroupDocForm(_jigargosar$elm_simple_gtd$GroupDoc_Types$ContextGroupDoc))(_p15));
				};
			case 'EM_StartAddingProject':
				return function (_p17) {
					return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputRCmd(
						function (_p18) {
							return andThenUpdate(
								_jigargosar$elm_simple_gtd$XMMsg$onSetExclusiveMode(
									_jigargosar$elm_simple_gtd$ExclusiveMode_Types$XMGroupDocForm(_p18)));
						}(
							_jigargosar$elm_simple_gtd$GroupDoc_Form$createAddGroupDocForm(_jigargosar$elm_simple_gtd$GroupDoc_Types$ProjectGroupDoc))(_p17));
				};
			case 'EM_Update':
				return A3(_jigargosar$elm_simple_gtd$Entity_Main$onUpdate, andThenUpdate, _p14._0, _p14._1);
			default:
				var _p22 = _p14._0;
				var _p19 = _p14._1.key;
				switch (_p19.ctor) {
					case 'ArrowUp':
						return function (_p20) {
							return A2(
								andThenUpdate,
								_jigargosar$elm_simple_gtd$Model$setDomFocusToFocusInEntityCmd,
								A2(
									_jigargosar$elm_simple_gtd$Entity_Main$map,
									A2(_jigargosar$elm_simple_gtd$Entity_Main$moveFocusBy, -1, _p22),
									_p20));
						};
					case 'ArrowDown':
						return function (_p21) {
							return A2(
								andThenUpdate,
								_jigargosar$elm_simple_gtd$Model$setDomFocusToFocusInEntityCmd,
								A2(
									_jigargosar$elm_simple_gtd$Entity_Main$map,
									A2(_jigargosar$elm_simple_gtd$Entity_Main$moveFocusBy, 1, _p22),
									_p21));
						};
					default:
						return _elm_lang$core$Basics$identity;
				}
		}
	});
