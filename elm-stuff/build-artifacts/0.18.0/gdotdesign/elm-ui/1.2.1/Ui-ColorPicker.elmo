var _gdotdesign$elm_ui$Ui_ColorPicker$onChange = F2(
	function (msg, model) {
		return A2(_gdotdesign$elm_ui$Ui_ColorPanel$onChange, msg, model.colorPanel);
	});
var _gdotdesign$elm_ui$Ui_ColorPicker$init = function (_p0) {
	return A2(
		_gdotdesign$elm_ui$Ui_Helpers_Dropdown$offset,
		5,
		{
			colorPanel: _gdotdesign$elm_ui$Ui_ColorPanel$init(
				{ctor: '_Tuple0'}),
			dropdown: _gdotdesign$elm_ui$Ui_Helpers_Dropdown$init,
			disabled: false,
			readonly: false,
			uid: _gdotdesign$elm_ui$Ui_Native_Uid$uid(
				{ctor: '_Tuple0'})
		});
};
var _gdotdesign$elm_ui$Ui_ColorPicker$Model = F5(
	function (a, b, c, d, e) {
		return {colorPanel: a, dropdown: b, disabled: c, readonly: d, uid: e};
	});
var _gdotdesign$elm_ui$Ui_ColorPicker$NoOp = {ctor: 'NoOp'};
var _gdotdesign$elm_ui$Ui_ColorPicker$Picker = function (a) {
	return {ctor: 'Picker', _0: a};
};
var _gdotdesign$elm_ui$Ui_ColorPicker$ColorPanel = function (a) {
	return {ctor: 'ColorPanel', _0: a};
};
var _gdotdesign$elm_ui$Ui_ColorPicker$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: A2(
				_elm_lang$core$Platform_Sub$map,
				_gdotdesign$elm_ui$Ui_ColorPicker$ColorPanel,
				_gdotdesign$elm_ui$Ui_ColorPanel$subscriptions(model.colorPanel)),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$core$Platform_Sub$map,
					_gdotdesign$elm_ui$Ui_ColorPicker$Picker,
					_gdotdesign$elm_ui$Ui_Helpers_Picker$subscriptions(model)),
				_1: {ctor: '[]'}
			}
		});
};
var _gdotdesign$elm_ui$Ui_ColorPicker$update = F2(
	function (action, model) {
		var _p1 = action;
		switch (_p1.ctor) {
			case 'NoOp':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'Picker':
				return {
					ctor: '_Tuple2',
					_0: A2(_gdotdesign$elm_ui$Ui_Helpers_Picker$update, _p1._0, model),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				var _p2 = A2(_gdotdesign$elm_ui$Ui_ColorPanel$update, _p1._0, model.colorPanel);
				var colorPanel = _p2._0;
				var effect = _p2._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{colorPanel: colorPanel}),
					_1: A2(_elm_lang$core$Platform_Cmd$map, _gdotdesign$elm_ui$Ui_ColorPicker$ColorPanel, effect)
				};
		}
	});
var _gdotdesign$elm_ui$Ui_ColorPicker$render = function (model) {
	var color = _gdotdesign$elm_ui$Ext_Color$toCSSRgba(model.colorPanel.value);
	return A2(
		_gdotdesign$elm_ui$Ui_Helpers_Picker$view,
		{
			address: _gdotdesign$elm_ui$Ui_ColorPicker$Picker,
			attributes: _gdotdesign$elm_ui$Ui_Styles$apply(_gdotdesign$elm_ui$Ui_Styles_ColorPicker$defaultStyle),
			keyActions: {ctor: '[]'},
			contents: {
				ctor: '::',
				_0: A3(
					_elm_lang$html$Html$node,
					'ui-color-picker-text',
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(color),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A3(
						_elm_lang$html$Html$node,
						'ui-color-picker-rect',
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A3(
								_elm_lang$html$Html$node,
								'ui-color-picker-background',
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$style(
										{
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'background-color', _1: color},
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			},
			dropdownContents: {
				ctor: '::',
				_0: A3(
					_elm_lang$html$Html$node,
					'ui-color-picker-panel',
					{
						ctor: '::',
						_0: A2(_gdotdesign$elm_ui$Html_Events_Extra$onPreventDefault, 'mousedown', _gdotdesign$elm_ui$Ui_ColorPicker$NoOp),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$map,
							_gdotdesign$elm_ui$Ui_ColorPicker$ColorPanel,
							_gdotdesign$elm_ui$Ui_ColorPanel$view(model.colorPanel)),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		},
		model);
};
var _gdotdesign$elm_ui$Ui_ColorPicker$view = function (model) {
	return A2(_elm_lang$html$Html_Lazy$lazy, _gdotdesign$elm_ui$Ui_ColorPicker$render, model);
};
var _gdotdesign$elm_ui$Ui_ColorPicker$setValue = F2(
	function (color, model) {
		var _p3 = A2(_gdotdesign$elm_ui$Ui_ColorPanel$setValue, color, model.colorPanel);
		var colorPanel = _p3._0;
		var cmd = _p3._1;
		return {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Native_Utils.update(
				model,
				{colorPanel: colorPanel}),
			_1: A2(_elm_lang$core$Platform_Cmd$map, _gdotdesign$elm_ui$Ui_ColorPicker$ColorPanel, cmd)
		};
	});
