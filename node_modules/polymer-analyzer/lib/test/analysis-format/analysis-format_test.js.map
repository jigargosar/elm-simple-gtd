{"version":3,"sources":["test/analysis-format/analysis-format_test.ts"],"names":[],"mappings":"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","file":"analysis-format_test.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2015 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Analysis, Element} from '../../analysis-format/analysis-format';\n\n// An example, the correct compilation thereof acts as a test.\nconst paperButtonElement: Element = {\n  path: 'paper-button.html',\n  tagname: 'paper-button',\n  superclass: 'HTMLElement',\n  demos: [{url: 'demo/index.html'}],\n  privacy: 'public',\n\n  attributes: [\n    {\n      name: 'raised',\n      description: 'If true, the button should be styled with a shadow.',\n      type: 'boolean',\n    },\n    {\n      name: 'elevation',\n      type: 'number',\n      description: `\nThe z-depth of this element, from 0-5. Setting to 0 will remove the\nshadow, and each increasing number greater than 0 will be \"deeper\"\nthan the last.`.trim()\n    },\n    {name: 'role', defaultValue: 'button'},\n    {name: 'tabindex', defaultValue: '0'},\n    {name: 'animated', defaultValue: 'true'}\n  ],\n  properties: [\n    {\n      name: 'raised',\n      description: 'If true, the button should be styled with a shadow.',\n      type: 'boolean',\n      defaultValue: 'false',\n      metadata: {\n        polymer: {reflectToAttribute: true, observer: '_calculateElevation'}\n      },\n      privacy: 'public',\n    },\n    {\n      name: 'elevation',\n      type: 'number',\n      description: `\n  The z-depth of this element, from 0-5. Setting to 0 will remove the\n  shadow, and each increasing number greater than 0 will be \"deeper\"\n  than the last.`.trim(),\n      defaultValue: '1',\n      metadata: {polymer: {reflectToAttribute: true, readOnly: true}},\n      privacy: 'public',\n    }\n  ],\n  events: [{\n    name: 'transitionend',\n    type: 'Event',\n    description: `\nFired when the animation finishes.\nThis is useful if you want to wait until\nthe ripple animation finishes to perform some action.`.trim(),\n    detail: {\n      properties: [{\n        name: 'node',\n        description: 'Contains the animated node.',\n        type: 'Object',\n        privacy: 'public',\n      }]\n    }\n  }],\n  slots: [{name: '', description: 'The body of the button.'}],\n  styling: {\n    selectors: [],\n    cssVariables: [\n      {\n        name: '--paper-button-ink-color',\n        description: 'Background color of the ripple',\n        fallbackBehavior: 'Based on the button\\'s color'\n      },\n      {\n        name: '--paper-button',\n        description: 'Mixin applied to the disabled button. Note that you ' +\n            'can also use the `paper-button[disabled]` selector',\n        fallbackBehavior: '{}'\n      },\n      {\n        name: '--paper-button-disabled',\n        description: '',\n        fallbackBehavior: '{}'\n      },\n      {\n        name: '--paper-button-flat-keyboard-focus',\n        description: 'Mixin applied to a flat button after ' +\n            'it\\'s been focused using the keyboard',\n        fallbackBehavior: '{}'\n      },\n      {\n        name: '--paper-button-raised-keyboard-focus',\n        description: 'Mixin applied to a raised button ' +\n            'after it\\'s been focused using the keyboard',\n        fallbackBehavior: '{}'\n      },\n      {name: '--layout-inline'},\n      {name: '--layout-center-center'},\n      {name: '--paper-font-common-base'},\n    ],\n\n    needsExplicitSize: false\n  },\n  metadata: {polymer: {behaviors: ['Polymer.PaperButtonBehavior']}},\n  summary: 'A Material design button',\n  description: `\nMaterial design: [Buttons](https://www.google.com/design/spec/components/buttons.html)\n\n\\`paper-button\\` is a button. When the user touches the button, a ripple effect emanates\nfrom the point of contact. It may be flat or raised. A raised button is styled with a\nshadow.\n\nExample:\n\n    <paper-button>Flat button</paper-button>\n    <paper-button raised>Raised button</paper-button>\n    <paper-button noink>No ripple effect</paper-button>\n    <paper-button toggles>Toggle-able button</paper-button>\n\nA button that has \\`toggles\\` true will remain \\`active\\` after being clicked (and\nwill have an \\`active\\` attribute set). For more information, see the \\`Polymer.IronButtonState\\`\nbehavior.\n\nYou may use custom DOM in the button body to create a variety of buttons. For example, to\ncreate a button with an icon and some text:\n\n    <paper-button>\n      <iron-icon icon=\"favorite\"></iron-icon>\n      custom button content\n    </paper-button>\n\nTo use \\`paper-button\\` as a link, wrap it in an anchor tag. Since \\`paper-button\\` will already\nreceive focus, you may want to prevent the anchor tag from receiving focus as well by setting\nits tabindex to -1.\n\n    <a href=\"https://www.polymer-project.org/\" tabindex=\"-1\">\n      <paper-button raised>Polymer Project</paper-button>\n    </a>\n\n### Styling\n\nStyle the button with CSS as you would a normal DOM element.\n\n    paper-button.fancy {\n      background: green;\n      color: yellow;\n    }\n\n    paper-button.fancy:hover {\n      background: lime;\n    }\n\n    paper-button[disabled],\n    paper-button[toggles][active] {\n      background: red;\n    }\n\nBy default, the ripple is the same color as the foreground at 25% opacity. You may\ncustomize the color using the \\`--paper-button-ink-color\\` custom property.\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n\\`--paper-button-ink-color\\` | Background color of the ripple | \\`Based on the button's color\\`\n\\`--paper-button\\` | Mixin applied to the button | \\`{}\\`\n\\`--paper-button-disabled\\` | Mixin applied to the disabled button. Note that you can also use the \\`paper-button[disabled]\\` selector | \\`{}\\`\n\\`--paper-button-flat-keyboard-focus\\` | Mixin applied to a flat button after it's been focused using the keyboard | \\`{}\\`\n\\`--paper-button-raised-keyboard-focus\\` | Mixin applied to a raised button after it's been focused using the keyboard | \\`{}\\`\n\n@demo demo/index.html\n`.trim()\n\n};\n\nconst paperButton: Analysis = {\n  schema_version: '1.0.0',\n  elements: [paperButtonElement]\n};\n\n// We want to keep these local values as is, because they serve as\n// documentation and compilation tests.\n// So there's this hack to prevent a warning about unused code.\nif (Math.random() > 1000) {\n  console.log(JSON.stringify(paperButton, null, 2));\n}\n"]}