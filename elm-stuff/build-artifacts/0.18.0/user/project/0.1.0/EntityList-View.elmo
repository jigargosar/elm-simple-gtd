var _user$project$EntityList_View$getFocusInId = F2(
	function (entityList, viewModel) {
		return A2(
			_danielnarey$elm_toolkit$Toolkit_Operators_ops['?='],
			A2(
				_danielnarey$elm_toolkit$Toolkit_Operators_ops['?|>'],
				A2(
					_elm_community$maybe_extra$Maybe_Extra$orElse,
					_elm_lang$core$List$head(entityList),
					A2(
						_elm_community$list_extra$List_Extra$find,
						function (_p0) {
							return A2(
								_user$project$Ext_Function$equals,
								viewModel.focusedEntityInfo.id,
								_user$project$Model$getEntityId(_p0));
						},
						entityList)),
				_user$project$Model$getEntityId),
			'');
	});
var _user$project$EntityList_View$listView = F3(
	function (viewType, model, appViewModel) {
		var entityList = A2(_user$project$Model$createViewEntityList, viewType, model);
		var focusInId = A2(_user$project$EntityList_View$getFocusInId, entityList, appViewModel);
		var getTabindexAV = function (entity) {
			var tabindexValue = _elm_lang$core$Native_Utils.eq(
				_user$project$Model$getEntityId(entity),
				focusInId) ? 0 : -1;
			return _elm_lang$html$Html_Attributes$tabindex(tabindexValue);
		};
		var createEntityView = F2(
			function (index, entity) {
				var tabIndexAV = getTabindexAV(entity);
				var _p1 = entity;
				switch (_p1.ctor) {
					case 'ContextEntity':
						return A3(
							_user$project$GroupEntity_View$initKeyed,
							tabIndexAV,
							appViewModel,
							_user$project$EntityList$createContextGroupViewModel(_p1._0));
					case 'ProjectEntity':
						return A3(
							_user$project$GroupEntity_View$initKeyed,
							tabIndexAV,
							appViewModel,
							_user$project$EntityList$createProjectGroupViewModel(_p1._0));
					default:
						return _user$project$Todo_View$initKeyed(
							A2(appViewModel.createTodoViewModel, tabIndexAV, _p1._0));
				}
			});
		return A3(
			_elm_lang$html$Html_Keyed$node,
			'div',
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('entity-list focusable-list'),
				_1: {
					ctor: '::',
					_0: _user$project$Ext_Keyboard$onKeyDown(
						_user$project$Msg$OnEntityListKeyDown(entityList)),
					_1: {ctor: '[]'}
				}
			},
			A2(_elm_lang$core$List$indexedMap, createEntityView, entityList));
	});
var _user$project$EntityList_View$isCursorAtEntityInEntityList = F2(
	function (entityList, viewModel) {
		var focusedId = A2(_user$project$EntityList_View$getFocusInId, entityList, viewModel);
		return function (_p2) {
			return A2(
				_user$project$Ext_Function$equals,
				focusedId,
				_user$project$Model$getEntityId(_p2));
		};
	});
var _user$project$EntityList_View$EntityViewModel = F8(
	function (a, b, c, d, e, f, g, h) {
		return {id: a, onFocusIn: b, onFocus: c, onBlur: d, startEditingMsg: e, toggleDeleteMsg: f, startEditingMsg: g, tabIndexAV: h};
	});
var _user$project$EntityList_View$Todo = function (a) {
	return {ctor: 'Todo', _0: a};
};
var _user$project$EntityList_View$Group = function (a) {
	return {ctor: 'Group', _0: a};
};
