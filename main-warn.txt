=================================== WARNINGS ===================================

-- missing type annotation ------------------------------------ src/elm/Main.elm

Top-level value `startSyncWithFirebase` does not have a type annotation.

562| startSyncWithFirebase user =
     ^^^^^^^^^^^^^^^^^^^^^
I inferred the type annotation so you can copy it into your code:

startSyncWithFirebase : b -> Return.ReturnF msg { a | user : Firebase.User }

-- missing type annotation ------------------------------------ src/elm/Main.elm

Top-level value `positionScheduleMenuCmd` does not have a type annotation.

558| positionScheduleMenuCmd todo =
     ^^^^^^^^^^^^^^^^^^^^^^^
I inferred the type annotation so you can copy it into your code:

positionScheduleMenuCmd : { b | id : String } -> Cmd msg

-- missing type annotation ------------------------------------ src/elm/Main.elm

Top-level value `positionProjectMenuCmd` does not have a type annotation.

554| positionProjectMenuCmd todo =
     ^^^^^^^^^^^^^^^^^^^^^^
I inferred the type annotation so you can copy it into your code:

positionProjectMenuCmd : { b | id : String } -> Cmd msg

-- missing type annotation ------------------------------------ src/elm/Main.elm

Top-level value `positionContextMenuCmd` does not have a type annotation.

550| positionContextMenuCmd todo =
     ^^^^^^^^^^^^^^^^^^^^^^
I inferred the type annotation so you can copy it into your code:

positionContextMenuCmd : { b | id : String } -> Cmd msg

-- missing type annotation ------------------------------------ src/elm/Main.elm

Top-level value `firebaseSetupOnDisconnectCmd` does not have a type annotation.

545| firebaseSetupOnDisconnectCmd model =
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
I inferred the type annotation so you can copy it into your code:

firebaseSetupOnDisconnectCmd
    : { b
          | firebaseClient : { a | id : Firebase.DeviceId }
          , user : Firebase.User
    }
    -> Maybe (Cmd msg)

-- missing type annotation ------------------------------------ src/elm/Main.elm

Top-level value `firebaseUpdateClientCmd` does not have a type annotation.

540| firebaseUpdateClientCmd model =
     ^^^^^^^^^^^^^^^^^^^^^^^
I inferred the type annotation so you can copy it into your code:

firebaseUpdateClientCmd
    : { b
          | firebaseClient :
                { a | connected : Bool, id : String, token : Maybe String }
          , user : Firebase.User
    }
    -> Maybe (Cmd msg)

-- missing type annotation ------------------------------------ src/elm/Main.elm

Top-level value `command` does not have a type annotation.

506| command =
     ^^^^^^^
I inferred the type annotation so you can copy it into your code:

command : Cmd msg -> Return.ReturnF msg model

-- missing type annotation ------------------------------------ src/elm/Main.elm

Top-level value `reminderOverlayAction` does not have a type annotation.

467| reminderOverlayAction action =
     ^^^^^^^^^^^^^^^^^^^^^
I inferred the type annotation so you can copy it into your code:

reminderOverlayAction
    : ReminderOverlay.Action
    -> Return.Return
           msg
           { appDrawerModel : AppDrawer.Model.Model
           , appVersion : String
           , config : Config
           , contextStore : Context.Store
           , developmentMode : Bool
           , deviceId : String
           , editMode : ExclusiveMode.ExclusiveMode
           , fcmToken : Firebase.FCMToken
           , firebaseClient : Firebase.Client
           , focusInEntity : Entity.Entity
           , keyComboModel : Keyboard.Combo.Model Msg
           , keyboardState : Keyboard.State
           , layout : Layout
           , mainViewType : ViewType
           , now : Time
           , pouchDBRemoteSyncURI : String
           , projectStore : Project.Store
           , reminderOverlay : ReminderOverlay.Model
           , selectedEntityIdSet : Set.Set Document.Id
           , showDeleted : Bool
           , signInModel : Firebase.SignIn.Model
           , timeTracker : Todo.TimeTracker.Model
           , todoStore : Todo.Store
           , user : Firebase.User
           }
    -> Return.Return msg Model

-- missing type annotation ------------------------------------ src/elm/Main.elm

Top-level value `maybeMapToCmd` does not have a type annotation.

463| maybeMapToCmd fn =
     ^^^^^^^^^^^^^
I inferred the type annotation so you can copy it into your code:

maybeMapToCmd : (a -> Cmd msg) -> Maybe a -> Cmd msg

-- missing type annotation ------------------------------------ src/elm/Main.elm

Top-level value `onUpdateNow` does not have a type annotation.

459| onUpdateNow now =
     ^^^^^^^^^^^
I inferred the type annotation so you can copy it into your code:

onUpdateNow : Time -> Return.Return msg Model -> Return.Return msg Model

-- missing type annotation ------------------------------------ src/elm/Main.elm

Top-level value `setDomFocusToFocusInEntityCmd` does not have a type annotation.

455| setDomFocusToFocusInEntityCmd =
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
I inferred the type annotation so you can copy it into your code:

setDomFocusToFocusInEntityCmd : Msg

-- missing type annotation ------------------------------------ src/elm/Main.elm

Top-level value `updateTodoAndMaybeAlsoSelected` does not have a type
annotation.

438| updateTodoAndMaybeAlsoSelected action todo =
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
I inferred the type annotation so you can copy it into your code:

updateTodoAndMaybeAlsoSelected
    : Todo.UpdateAction
    -> { b | id : String }
    -> Return.Return
           msg
           { appDrawerModel : AppDrawer.Model.Model
           , appVersion : String
           , config : Config
           , contextStore : Context.Store
           , developmentMode : Bool
           , deviceId : String
           , editMode : ExclusiveMode.ExclusiveMode
           , fcmToken : Firebase.FCMToken
           , firebaseClient : Firebase.Client
           , focusInEntity : Entity.Entity
           , keyComboModel : Keyboard.Combo.Model Msg
           , keyboardState : Keyboard.State
           , layout : Layout
           , mainViewType : ViewType
           , now : Time
           , pouchDBRemoteSyncURI : String
           , projectStore : Project.Store
           , reminderOverlay : ReminderOverlay.Model
           , selectedEntityIdSet : Set.Set Document.Id
           , showDeleted : Bool
           , signInModel : Firebase.SignIn.Model
           , timeTracker : Todo.TimeTracker.Model
           , todoStore : Todo.Store
           , user : Firebase.User
           }
    -> Return.Return msg Model

-- missing type annotation ------------------------------------ src/elm/Main.elm

Top-level value `modelTapLog` does not have a type annotation.

434| modelTapLog =
     ^^^^^^^^^^^
I inferred the type annotation so you can copy it into your code:

modelTapLog : (b -> a1) -> String -> Return.Return msg b -> Return.Return msg b

-- missing type annotation ------------------------------------ src/elm/Main.elm

Top-level value `map` does not have a type annotation.

430| map =
     ^^^
I inferred the type annotation so you can copy it into your code:

map : (a -> b) -> Return.Return msg a -> Return.Return msg b

-- missing type annotation ------------------------------------ src/elm/Main.elm

Top-level value `logMsg` does not have a type annotation.

407| logMsg msg model =
     ^^^^^^
I inferred the type annotation so you can copy it into your code:

logMsg : Msg -> a -> a

-- missing type annotation ------------------------------------ src/elm/Main.elm

Top-level value `welcomeEntitiesURL` does not have a type annotation.

96| welcomeEntitiesURL =
    ^^^^^^^^^^^^^^^^^^
I inferred the type annotation so you can copy it into your code:

welcomeEntitiesURL : String

-- missing type annotation ------------------------------------ src/elm/Main.elm

Top-level value `set` does not have a type annotation.

92| set =
    ^^^
I inferred the type annotation so you can copy it into your code:

set : X.Record.Field a b -> a -> Return.Return msg b -> Return.Return msg b

-- missing type annotation ------------------------------------ src/elm/Main.elm

Top-level value `over` does not have a type annotation.

88| over =
    ^^^^
I inferred the type annotation so you can copy it into your code:

over
    : X.Record.Field a b
    -> (a -> a)
    -> Return.Return msg b
    -> Return.Return msg b

-- missing type annotation ------------------------------------ src/elm/Main.elm

Top-level value `subscriptions` does not have a type annotation.

76| subscriptions m =
    ^^^^^^^^^^^^^
I inferred the type annotation so you can copy it into your code:

subscriptions : { a | keyComboModel : Keyboard.Combo.Model Msg } -> Sub Msg

-- missing type annotation ------------------------------------ src/elm/Main.elm

Top-level value `andThenTodoMsg` does not have a type annotation.

451| andThenTodoMsg =
     ^^^^^^^^^^^^^^
I inferred the type annotation so you can copy it into your code:

andThenTodoMsg
    : Todo.Msg.Msg
    -> Return.Return Msg Model
    -> Return.Return Msg Model

-- missing type annotation ------------------------------------ src/elm/Main.elm

Top-level value `andThenUpdate` does not have a type annotation.

447| andThenUpdate =
     ^^^^^^^^^^^^^
I inferred the type annotation so you can copy it into your code:

andThenUpdate : Msg -> Return.Return Msg Model -> Return.Return Msg Model

