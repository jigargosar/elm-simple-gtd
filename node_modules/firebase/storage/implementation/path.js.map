{"version":3,"sources":["src/storage/implementation/path.ts"],"names":["parent","child","lastComponent","path","length","index","lastIndexOf","newPath","slice","childPath","canonicalChildPath","split","filter","component","join"],"mappings":";;;;;QAuBMA,M,GAAAA,M;QAYAC,K,GAAAA,K;QAmBAC,a,GAAAA,a;AAtDN;;;;;;;;;;;;;;;AAgBA;;;AAIA;;;AApBA;;;;;;;;;;;;;;EAuBM,SAAAF,MAAA,CAAiBG,IAAjB,EAA6B;AACjC,QAAIA,KAAKC,MAAL,IAAe,CAAnB,EAAsB;AACpB,eAAO,IAAP;AACD;AACD,QAAIC,QAAQF,KAAKG,WAAL,CAAiB,GAAjB,CAAZ;AACA,QAAID,UAAU,CAAC,CAAf,EAAkB;AAChB,eAAO,EAAP;AACD;AACD,QAAIE,UAAUJ,KAAKK,KAAL,CAAW,CAAX,EAAcH,KAAd,CAAd;AACA,WAAOE,OAAP;AACD;AAEK,SAAAN,KAAA,CAAgBE,IAAhB,EAA8BM,SAA9B,EAA+C;AACnD,QAAIC,qBAAqBD,UAAUE,KAAV,CAAgB,GAAhB,EACKC,MADL,CACY,UAASC,SAAT,EAAkB;AACxB,eAAOA,UAAUT,MAAV,GAAmB,CAA1B;AACD,KAHL,EAIKU,IAJL,CAIU,GAJV,CAAzB;AAKA,QAAIX,KAAKC,MAAL,KAAgB,CAApB,EAAuB;AACrB,eAAOM,kBAAP;AACD,KAFD,MAEO;AACL,eAAOP,OAAO,GAAP,GAAaO,kBAApB;AACD;AACF;AAED;;;;;;AAMM,SAAAR,aAAA,CAAwBC,IAAxB,EAAoC;AACxC,QAAIE,QAAQF,KAAKG,WAAL,CAAiB,GAAjB,EAAsBH,KAAKC,MAAL,GAAc,CAApC,CAAZ;AACA,QAAIC,UAAU,CAAC,CAAf,EAAkB;AAChB,eAAOF,IAAP;AACD,KAFD,MAEO;AACL,eAAOA,KAAKK,KAAL,CAAWH,QAAQ,CAAnB,CAAP;AACD;AACF","file":"path.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/**\n * @fileoverview Contains helper methods for manipulating paths.\n */\n\n/**\n * @return Null if the path is already at the root.\n */\nexport function parent(path: string): string|null {\n  if (path.length == 0) {\n    return null;\n  }\n  let index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  let newPath = path.slice(0, index);\n  return newPath;\n}\n\nexport function child(path: string, childPath: string): string {\n  let canonicalChildPath = childPath.split('/')\n                               .filter(function(component) {\n                                 return component.length > 0;\n                               })\n                               .join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n\n/**\n * Returns the last component of a path.\n * '/foo/bar' -> 'bar'\n * '/foo/bar/baz/' -> 'baz/'\n * '/a' -> 'a'\n */\nexport function lastComponent(path: string): string {\n  let index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n"]}