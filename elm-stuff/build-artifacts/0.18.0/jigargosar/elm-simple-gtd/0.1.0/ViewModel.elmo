var _jigargosar$elm_simple_gtd$ViewModel$sgtdBlue = _jigargosar$elm_simple_gtd$AppColors$sgtdBlue;
var _jigargosar$elm_simple_gtd$ViewModel$getViewInfo = F4(
	function (mainViewType, projectsVM, contextsVM, model) {
		var entityById = function (id) {
			return _elm_community$list_extra$List_Extra$find(
				function (_p0) {
					return A2(
						_jigargosar$elm_simple_gtd$X_Function$equals,
						id,
						function (_) {
							return _.id;
						}(_p0));
				});
		};
		var appHeaderInfoById = F2(
			function (id, vm) {
				return function (_p1) {
					return function (_p2) {
						var _p3 = _p2;
						return {ctor: '_Tuple2', _0: _p3.name, _1: _p3.backgroundColor};
					}(
						A2(
							_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>?='],
							A2(
								_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>?'],
								_elm_community$maybe_extra$Maybe_Extra$orElseLazy(
									function (_p4) {
										return A2(entityById, id, vm.nullVMAsList);
									}),
								function (_) {
									return _.appHeader;
								}),
							{name: 'o_O', backgroundColor: _jigargosar$elm_simple_gtd$ViewModel$sgtdBlue})(_p1));
				}(
					A2(
						_elm_community$maybe_extra$Maybe_Extra$orElseLazy,
						function (_p5) {
							return A2(entityById, id, vm.archivedEntityList);
						},
						A2(entityById, id, vm.entityList)));
			});
		var _p6 = mainViewType;
		if (_p6.ctor === 'EntityListView') {
			var _p7 = _p6._0;
			switch (_p7.ctor) {
				case 'ContextsView':
					return {ctor: '_Tuple2', _0: contextsVM.title, _1: contextsVM.icon.color};
				case 'ContextView':
					return A2(appHeaderInfoById, _p7._0, contextsVM);
				case 'ProjectsView':
					return {ctor: '_Tuple2', _0: projectsVM.title, _1: projectsVM.icon.color};
				case 'ProjectView':
					return A2(appHeaderInfoById, _p7._0, projectsVM);
				case 'BinView':
					return {ctor: '_Tuple2', _0: 'Bin', _1: _jigargosar$elm_simple_gtd$ViewModel$sgtdBlue};
				case 'DoneView':
					return {ctor: '_Tuple2', _0: 'Done', _1: _jigargosar$elm_simple_gtd$ViewModel$sgtdBlue};
				default:
					return {ctor: '_Tuple2', _0: 'Recent', _1: _jigargosar$elm_simple_gtd$ViewModel$sgtdBlue};
			}
		} else {
			return {ctor: '_Tuple2', _0: 'Custom Sync', _1: _jigargosar$elm_simple_gtd$ViewModel$sgtdBlue};
		}
	});
var _jigargosar$elm_simple_gtd$ViewModel$create = function (model) {
	var now = _jigargosar$elm_simple_gtd$Model$getNow(model);
	var editMode = _jigargosar$elm_simple_gtd$Model$getEditMode(model);
	var mainViewType = model.mainViewType;
	var projectsVM = _jigargosar$elm_simple_gtd$AppDrawer_GroupViewModel$projects(model);
	var contextsVM = _jigargosar$elm_simple_gtd$AppDrawer_GroupViewModel$contexts(model);
	var _p8 = A4(_jigargosar$elm_simple_gtd$ViewModel$getViewInfo, mainViewType, projectsVM, contextsVM, model);
	var viewName = _p8._0;
	var headerBackgroundColor = _p8._1;
	return {
		contexts: contextsVM,
		projects: projectsVM,
		viewName: viewName,
		header: {backgroundColor: headerBackgroundColor},
		now: now,
		selectedEntityIdSet: model.selectedEntityIdSet,
		projectByIdDict: _jigargosar$elm_simple_gtd$Model$getProjectsAsIdDict(model),
		contextByIdDict: _jigargosar$elm_simple_gtd$Model$getContextsAsIdDict(model),
		mdl: model.mdl
	};
};
var _jigargosar$elm_simple_gtd$ViewModel$Model = F9(
	function (a, b, c, d, e, f, g, h, i) {
		return {contexts: a, projects: b, viewName: c, header: d, now: e, projectByIdDict: f, contextByIdDict: g, selectedEntityIdSet: h, mdl: i};
	});
