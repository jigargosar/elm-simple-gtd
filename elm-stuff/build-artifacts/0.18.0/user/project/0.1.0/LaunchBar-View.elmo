var _user$project$LaunchBar_View$formView = F2(
	function (form, m) {
		var fuzzyResults = A2(_user$project$LaunchBar$getFuzzyResults, form.input, m);
		var matchingEntity = A2(
			_danielnarey$elm_toolkit$Toolkit_Operators_ops['?='],
			A2(
				_danielnarey$elm_toolkit$Toolkit_Operators_ops['?|>'],
				_elm_lang$core$List$head(fuzzyResults),
				_elm_lang$core$Tuple$first),
			_user$project$LaunchBar$defaultEntity);
		var matchingEntityName = _user$project$LaunchBar$getName(matchingEntity);
		var keyHandler = function (_p0) {
			var _p1 = _p0;
			var _p2 = _p1.key;
			if (_p2.ctor === 'Enter') {
				return _user$project$Msg$OnLaunchBarAction(
					_user$project$LaunchBar$OnEnter(matchingEntity));
			} else {
				return _user$project$Msg$commonMsg.noOp;
			}
		};
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('modal-background'),
				_1: {
					ctor: '::',
					_0: _user$project$Ext_Keyboard$onKeyDownStopPropagation(keyHandler),
					_1: {
						ctor: '::',
						_0: _elm_community$html_extra$Html_Events_Extra$onClickStopPropagation(_user$project$Msg$DeactivateEditingMode),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$id('launch-bar-container'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('layout horizontal'),
							_1: {
								ctor: '::',
								_0: A2(_elm_lang$html$Html_Attributes$attribute, 'onclick', 'console.log(\'focusing\');document.getElementById(\'hidden-input\').focus(); event.stopPropagation(); event.preventDefault();'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onInput(
										function (_p3) {
											return _user$project$Msg$OnLaunchBarAction(
												A2(_user$project$LaunchBar$OnInputChanged, form, _p3));
										}),
									_1: {ctor: '[]'}
								}
							}
						}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('flex-auto ellipsis'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(matchingEntityName),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('no-wrap input typing'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(form.input),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$input,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$id('hidden-input'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('auto-focus'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$autofocus(true),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$value(form.input),
													_1: {ctor: '[]'}
												}
											}
										}
									},
									{ctor: '[]'}),
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {ctor: '[]'}
			});
	});
var _user$project$LaunchBar_View$init = function (m) {
	var _p4 = _user$project$Model$getEditMode(m);
	if (_p4.ctor === 'LaunchBar') {
		return A2(_user$project$LaunchBar_View$formView, _p4._0, m);
	} else {
		return A2(
			_elm_lang$html$Html$span,
			{ctor: '[]'},
			{ctor: '[]'});
	}
};
