{"version":3,"sources":["src/storage/implementation/xhrio.ts"],"names":["ErrorCode"],"mappings":";;;;;AAAA;;;;;;;;;;;;;;;AA8CA;;;AAGA,IAAYA,yCAAZ;AAAA,CAAA,UAAYA,SAAZ,EAAqB;AACnBA,cAAAA,UAAA,UAAA,IAAA,CAAA,IAAA,UAAA;AACAA,cAAAA,UAAA,eAAA,IAAA,CAAA,IAAA,eAAA;AACAA,cAAAA,UAAA,OAAA,IAAA,CAAA,IAAA,OAAA;AACD,CAJD,EAAYA,sBAAAA,SAAA,GAAAA,YAAS,EAAT,CAAZ","file":"xhrio.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/**\n * @fileoverview A lightweight wrapper around XMLHttpRequest with a\n * goog.net.XhrIo-like interface.\n */\n\nexport type Headers = {[name: string]: (string|number)};\n\nexport interface XhrIo {\n  send(\n      url: string, method: string, opt_body?: ArrayBufferView|Blob|string|null,\n      opt_headers?: Headers): Promise<XhrIo>;\n\n  getErrorCode(): ErrorCode;\n\n  getStatus(): number;\n\n  getResponseText(): string;\n\n  /**\n   * Abort the request.\n   */\n  abort(): void;\n\n  getResponseHeader(header: string): string|null;\n\n  addUploadProgressListener(listener: (p1: Event) => void): void;\n\n  removeUploadProgressListener(listener: (p1: Event) => void): void;\n}\n\n/**\n * @enum{number}\n */\nexport enum ErrorCode {\n  NO_ERROR = 0,\n  NETWORK_ERROR = 1,\n  ABORT = 2\n}\n"]}