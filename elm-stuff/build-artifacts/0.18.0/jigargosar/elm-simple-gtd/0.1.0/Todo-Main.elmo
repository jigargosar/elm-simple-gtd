var _jigargosar$elm_simple_gtd$Todo_Main$update = F3(
	function (andThenUpdate, now, todoMsg) {
		var _p0 = todoMsg;
		switch (_p0.ctor) {
			case 'ToggleRunning':
				return A2(
					_jigargosar$elm_simple_gtd$Todo_MainHelp$mapOver,
					_jigargosar$elm_simple_gtd$Todo_MainHelp$timeTracker,
					A2(_jigargosar$elm_simple_gtd$Todo_TimeTracker$toggleStartStop, _p0._0, now));
			case 'SwitchOrStartRunning':
				return A2(
					_jigargosar$elm_simple_gtd$Todo_MainHelp$mapOver,
					_jigargosar$elm_simple_gtd$Todo_MainHelp$timeTracker,
					A2(_jigargosar$elm_simple_gtd$Todo_TimeTracker$switchOrStartRunning, _p0._0, now));
			case 'OnStopRunningTodo':
				return A2(_jigargosar$elm_simple_gtd$Todo_MainHelp$mapSet, _jigargosar$elm_simple_gtd$Todo_MainHelp$timeTracker, _jigargosar$elm_simple_gtd$Todo_TimeTracker$none);
			case 'OnGotoRunningTodo':
				return function (_p1) {
					return A2(
						andThenUpdate,
						_jigargosar$elm_simple_gtd$Model$setDomFocusToFocusInEntityCmd,
						A2(_jigargosar$elm_simple_gtd$Todo_MainHelp$map, _jigargosar$elm_simple_gtd$Todo_MainHelp$gotoRunningTodo, _p1));
				};
			case 'UpdateTimeTracker':
				return _jigargosar$elm_simple_gtd$Todo_MainHelp$updateTimeTracker(now);
			case 'Upsert':
				return _jigargosar$elm_simple_gtd$Todo_MainHelp$onUpsertTodo(_p0._0);
			case 'OnReminderNotificationClicked':
				return A2(_jigargosar$elm_simple_gtd$Todo_MainHelp$onReminderNotificationClicked, andThenUpdate, _p0._0);
			case 'ShowReminderOverlayForTodoId':
				return _jigargosar$elm_simple_gtd$Todo_MainHelp$map(
					_jigargosar$elm_simple_gtd$Todo_MainHelp$showReminderOverlayForTodoId(_p0._0));
			case 'RunningNotificationResponse':
				return A2(_jigargosar$elm_simple_gtd$Todo_MainHelp$onRunningNotificationResponse, andThenUpdate, _p0._0);
			case 'OnProcessPendingNotificationCronTick':
				return _jigargosar$elm_simple_gtd$X_Return$rAndThenMaybe(
					A2(
						_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>?'],
						_jigargosar$elm_simple_gtd$Stores$findAndSnoozeOverDueTodo,
						_jigargosar$elm_simple_gtd$Todo_MainHelp$andThen(_jigargosar$elm_simple_gtd$Todo_MainHelp$showReminderNotificationCmd)));
			case 'OnUpdateTodoAndMaybeSelectedAndDeactivateEditingMode':
				return function (_p2) {
					return A2(
						andThenUpdate,
						_jigargosar$elm_simple_gtd$XMMsg$onSetExclusiveModeToNoneAndTryRevertingFocus,
						_jigargosar$elm_simple_gtd$Todo_MainHelp$andThen(
							A2(_jigargosar$elm_simple_gtd$Stores$updateTodoAndMaybeAlsoSelected, _p0._1, _p0._0))(_p2));
				};
			case 'OnTodoReminderOverlayAction':
				return _jigargosar$elm_simple_gtd$Todo_MainHelp$reminderOverlayAction(_p0._0);
			case 'OnStartAddingTodo':
				return A2(_jigargosar$elm_simple_gtd$Todo_MainHelp$onStartAddingTodo, andThenUpdate, _p0._0);
			case 'OnStartEditingTodo':
				return A3(_jigargosar$elm_simple_gtd$Todo_MainHelp$onStartEditingTodo, andThenUpdate, _p0._0, _p0._1);
			default:
				return A3(_jigargosar$elm_simple_gtd$Todo_MainHelp$onUpdateTodoFormAction, andThenUpdate, _p0._0, _p0._1);
		}
	});
var _jigargosar$elm_simple_gtd$Todo_Main$subscriptions = function (m) {
	return A2(
		_elm_lang$core$Platform_Sub$map,
		_jigargosar$elm_simple_gtd$Msg$OnTodoMsg,
		_elm_lang$core$Platform_Sub$batch(
			{
				ctor: '::',
				_0: _jigargosar$elm_simple_gtd$Todo_MainHelpPort$notificationClicked(_jigargosar$elm_simple_gtd$Todo_Msg$OnReminderNotificationClicked),
				_1: {
					ctor: '::',
					_0: _jigargosar$elm_simple_gtd$Todo_MainHelpPort$onRunningTodoNotificationClicked(_jigargosar$elm_simple_gtd$Todo_Msg$RunningNotificationResponse),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$core$Time$every,
							_elm_lang$core$Time$second * 1,
							function (_p3) {
								return _jigargosar$elm_simple_gtd$Todo_Msg$UpdateTimeTracker;
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$core$Time$every,
								_elm_lang$core$Time$second * 30,
								function (_p4) {
									return _jigargosar$elm_simple_gtd$Todo_Msg$OnProcessPendingNotificationCronTick;
								}),
							_1: {ctor: '[]'}
						}
					}
				}
			}));
};
