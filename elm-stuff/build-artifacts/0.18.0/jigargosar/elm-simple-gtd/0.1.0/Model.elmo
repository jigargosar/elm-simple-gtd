var _jigargosar$elm_simple_gtd$Model$getMaybeFocusInEntity = F2(
	function (entityList, model) {
		return A2(
			_elm_community$maybe_extra$Maybe_Extra$orElse,
			_elm_lang$core$List$head(entityList),
			A2(
				_elm_community$list_extra$List_Extra$find,
				_jigargosar$elm_simple_gtd$Entity$equalById(model.focusInEntity),
				entityList));
	});
var _jigargosar$elm_simple_gtd$Model$setKeyboardState = F2(
	function (keyboardState, model) {
		return _elm_lang$core$Native_Utils.update(
			model,
			{keyboardState: keyboardState});
	});
var _jigargosar$elm_simple_gtd$Model$getKeyboardState = function (_) {
	return _.keyboardState;
};
var _jigargosar$elm_simple_gtd$Model$updateKeyboardState = F2(
	function (updater, model) {
		return A2(
			_jigargosar$elm_simple_gtd$Model$setKeyboardState,
			updater(
				_jigargosar$elm_simple_gtd$Model$getKeyboardState(model)),
			model);
	});
var _jigargosar$elm_simple_gtd$Model$setNow = F2(
	function (now, model) {
		return _elm_lang$core$Native_Utils.update(
			model,
			{now: now});
	});
var _jigargosar$elm_simple_gtd$Model$getNow = function (_) {
	return _.now;
};
var _jigargosar$elm_simple_gtd$Model$getEditMode = function (_) {
	return _.editMode;
};
var _jigargosar$elm_simple_gtd$Model$createRemoteSyncForm = function (model) {
	return {uri: model.pouchDBRemoteSyncURI};
};
var _jigargosar$elm_simple_gtd$Model$getRemoteSyncForm = function (model) {
	var maybeForm = function () {
		var _p0 = model.editMode;
		if (_p0.ctor === 'XMEditSyncSettings') {
			return _elm_lang$core$Maybe$Just(_p0._0);
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	}();
	return A2(
		_danielnarey$elm_toolkit$Toolkit_Operators_ops['?='],
		maybeForm,
		_jigargosar$elm_simple_gtd$Model$createRemoteSyncForm(model));
};
var _jigargosar$elm_simple_gtd$Model$getMaybeEditTodoReminderForm = function (model) {
	var _p1 = model.editMode;
	if (_p1.ctor === 'XMEditTodoReminder') {
		return _elm_lang$core$Maybe$Just(_p1._0);
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _jigargosar$elm_simple_gtd$Model$setReminderOverlayToSnoozeView = F2(
	function (details, model) {
		return _elm_lang$core$Native_Utils.update(
			model,
			{
				reminderOverlay: _jigargosar$elm_simple_gtd$Todo_Notification_Model$snoozeView(details)
			});
	});
var _jigargosar$elm_simple_gtd$Model$removeReminderOverlay = function (model) {
	return _elm_lang$core$Native_Utils.update(
		model,
		{reminderOverlay: _jigargosar$elm_simple_gtd$Todo_Notification_Model$none});
};
var _jigargosar$elm_simple_gtd$Model$snoozeTodoWithOffset = F3(
	function (snoozeOffset, todoId, model) {
		var time = A2(_jigargosar$elm_simple_gtd$Todo_Notification_Model$addSnoozeOffset, model.now, snoozeOffset);
		return function (_p2) {
			return A2(
				_elm_lang$core$Tuple$mapFirst,
				_jigargosar$elm_simple_gtd$Model$removeReminderOverlay,
				A3(
					_jigargosar$elm_simple_gtd$Stores$updateTodo,
					_jigargosar$elm_simple_gtd$Todo_Types$TA_SnoozeTill(time),
					todoId,
					_p2));
		}(model);
	});
var _jigargosar$elm_simple_gtd$Model$keyComboModel = A2(
	_jigargosar$elm_simple_gtd$X_Record$field,
	function (_) {
		return _.keyComboModel;
	},
	F2(
		function (s, b) {
			return _elm_lang$core$Native_Utils.update(
				b,
				{keyComboModel: s});
		}));
var _jigargosar$elm_simple_gtd$Model$updateCombo = function (comboMsg) {
	return A2(
		_jigargosar$elm_simple_gtd$X_Record$overReturn,
		_jigargosar$elm_simple_gtd$Model$keyComboModel,
		_scottcorgan$keyboard_combo$Keyboard_Combo$update(comboMsg));
};
var _jigargosar$elm_simple_gtd$Model$focusInEntity = A2(
	_jigargosar$elm_simple_gtd$X_Record$field,
	function (_) {
		return _.focusInEntity;
	},
	F2(
		function (s, b) {
			return _elm_lang$core$Native_Utils.update(
				b,
				{focusInEntity: s});
		}));
var _jigargosar$elm_simple_gtd$Model$moveFocusBy = A2(
	_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>>'],
	_jigargosar$elm_simple_gtd$Entity$findEntityByOffsetIn,
	_jigargosar$elm_simple_gtd$X_Record$maybeOver(_jigargosar$elm_simple_gtd$Model$focusInEntity));
var _jigargosar$elm_simple_gtd$Model$now = A2(
	_jigargosar$elm_simple_gtd$X_Record$field,
	function (_) {
		return _.now;
	},
	F2(
		function (s, b) {
			return _elm_lang$core$Native_Utils.update(
				b,
				{now: s});
		}));
var _jigargosar$elm_simple_gtd$Model$keyboardState = A2(
	_jigargosar$elm_simple_gtd$X_Record$field,
	function (_) {
		return _.keyboardState;
	},
	F2(
		function (s, b) {
			return _elm_lang$core$Native_Utils.update(
				b,
				{keyboardState: s});
		}));
var _jigargosar$elm_simple_gtd$Model$signInModel = A2(
	_jigargosar$elm_simple_gtd$X_Record$field,
	function (_) {
		return _.signInModel;
	},
	F2(
		function (s, b) {
			return _elm_lang$core$Native_Utils.update(
				b,
				{signInModel: s});
		}));
var _jigargosar$elm_simple_gtd$Model$appDrawerModel = A2(
	_jigargosar$elm_simple_gtd$X_Record$field,
	function (_) {
		return _.appDrawerModel;
	},
	F2(
		function (s, b) {
			return _elm_lang$core$Native_Utils.update(
				b,
				{appDrawerModel: s});
		}));
var _jigargosar$elm_simple_gtd$Model$overAppDrawerModel = _jigargosar$elm_simple_gtd$X_Record$over(_jigargosar$elm_simple_gtd$Model$appDrawerModel);
var _jigargosar$elm_simple_gtd$Model$mapOverAppDrawerModel = function (_p3) {
	return _Fresheyeball$elm_return$Return$map(
		A2(_jigargosar$elm_simple_gtd$X_Record$over, _jigargosar$elm_simple_gtd$Model$appDrawerModel, _p3));
};
var _jigargosar$elm_simple_gtd$Model$commonMsg = function () {
	var _p4 = 1;
	return _jigargosar$elm_simple_gtd$CommonMsg$createHelper(_jigargosar$elm_simple_gtd$Msg$OnCommonMsg);
}();
var _jigargosar$elm_simple_gtd$Model$noop = _jigargosar$elm_simple_gtd$Model$commonMsg.noOp;
var _jigargosar$elm_simple_gtd$Model$logString = _jigargosar$elm_simple_gtd$Model$commonMsg.logString;
var _jigargosar$elm_simple_gtd$Model$setDomFocusToFocusInEntityCmd = _jigargosar$elm_simple_gtd$Model$commonMsg.focus('.entity-list .focusable-list-item[tabindex=0]');
