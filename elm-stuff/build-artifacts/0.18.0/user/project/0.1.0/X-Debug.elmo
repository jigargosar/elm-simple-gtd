var _user$project$X_Debug$toColor = function (logLevel) {
	var _p0 = logLevel;
	switch (_p0.ctor) {
		case 'Error':
			return 'red';
		case 'Warning':
			return 'orange';
		case 'Info':
			return 'green';
		case 'Debug':
			return 'purple';
		default:
			return 'LightBlue';
	}
};
var _user$project$X_Debug$nativeLog = F3(
	function (level, message, value) {
		return A4(
			_user$project$Native_Logger.log,
			_iosphere$elm_logger$Logger$levelString(level),
			_user$project$X_Debug$toColor(level),
			message,
			value);
	});
var _user$project$X_Debug$loggerConfig = A2(_iosphere$elm_logger$Logger$customConfig, _iosphere$elm_logger$Logger$Info, _user$project$X_Debug$nativeLog);
var _user$project$X_Debug$log = A2(_iosphere$elm_logger$Logger$log, _user$project$X_Debug$loggerConfig, _iosphere$elm_logger$Logger$Debug);
var _user$project$X_Debug$logVerbose = A2(_iosphere$elm_logger$Logger$log, _user$project$X_Debug$loggerConfig, _iosphere$elm_logger$Logger$Verbose);
var _user$project$X_Debug$logInfo = A2(_iosphere$elm_logger$Logger$log, _user$project$X_Debug$loggerConfig, _iosphere$elm_logger$Logger$Info);
var _user$project$X_Debug$logWarning = A2(_iosphere$elm_logger$Logger$log, _user$project$X_Debug$loggerConfig, _iosphere$elm_logger$Logger$Warning);
var _user$project$X_Debug$logError = A2(_iosphere$elm_logger$Logger$log, _user$project$X_Debug$loggerConfig, _iosphere$elm_logger$Logger$Error);
var _user$project$X_Debug$tap = F2(
	function (tapperFunction, value) {
		var _p1 = tapperFunction(value);
		return value;
	});
var _user$project$X_Debug$tapLog = F2(
	function (transformerFunction, logString) {
		return _user$project$X_Debug$tap(
			function (_p2) {
				return A2(
					_user$project$X_Debug$log,
					logString,
					transformerFunction(_p2));
			});
	});
