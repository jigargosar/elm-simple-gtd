{"version":3,"sources":["test/polymer/polymer2-element-scanner_test.ts"],"names":[],"mappings":"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","file":"polymer2-element-scanner_test.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\nimport {assert, use as chaiUse} from 'chai';\nimport * as path from 'path';\n\nimport {ClassScanner} from '../../javascript/class-scanner';\nimport {Visitor} from '../../javascript/estree-visitor';\nimport {JavaScriptParser} from '../../javascript/javascript-parser';\nimport {ScannedPolymerElement} from '../../polymer/polymer-element';\nimport {FSUrlLoader} from '../../url-loader/fs-url-loader';\nimport {CodeUnderliner} from '../test-utils';\n\nchaiUse(require('chai-subset'));\n\nsuite('Polymer2ElementScanner', () => {\n  const testFilesDir = path.resolve(__dirname, '../static/polymer2/');\n  const urlLoader = new FSUrlLoader(testFilesDir);\n  const underliner = new CodeUnderliner(urlLoader);\n\n  async function getElements(\n      filename: string): Promise<ScannedPolymerElement[]> {\n    const file = await urlLoader.load(filename);\n    const parser = new JavaScriptParser();\n    const document = parser.parse(file, filename);\n    const scanner = new ClassScanner();\n    const visit = (visitor: Visitor) =>\n        Promise.resolve(document.visit([visitor]));\n\n    const {features} = await scanner.scan(document, visit);\n    return features.filter(\n        (e) => e instanceof ScannedPolymerElement) as ScannedPolymerElement[];\n  };\n\n  async function getTestProps(element: ScannedPolymerElement):\n      Promise<any> {\n        const props: any = {\n          className: element.className,\n          superClass: element.superClass && element.superClass.identifier,\n          tagName: element.tagName,\n          description: element.description,\n          summary: element.summary,\n          properties: await Promise.all(\n              Array.from(element.properties.values()).map(async(p) => {\n                const result = {name: p.name,\n                                description: p.description} as any;\n                if (p.type) {\n                  result.type = p.type;\n                }\n                if (p.observerExpression) {\n                  result.propertiesInObserver =\n                      p.observerExpression.properties.map((p) => p.name);\n                }\n                if (p.computedExpression) {\n                  result.propertiesInComputed =\n                      p.computedExpression.properties.map((p) => p.name);\n                }\n                if (p.warnings.length > 0) {\n                  result.warningUnderlines =\n                      await underliner.underline(p.warnings);\n                }\n                return result;\n              })),\n          attributes:\n              Array.from(element.attributes.values()).map((a) => ({\n                                                            name: a.name,\n                                                          })),\n          methods: Array.from(element.methods.values())\n                       .map((m) => ({\n                              name: m.name,\n                              params: m.params, return: m.return,\n                              description: m.description\n                            })),\n\n          warningUnderlines: await underliner.underline(element.warnings),\n\n        };\n        if (element.observers.length > 0) {\n          props.observers = element.observers.map((o) => o.expression);\n          props.observerProperties =\n              element.observers.filter((o) => o.parsedExpression)\n                  .map(\n                      (o) => o.parsedExpression!.properties.map((p) => p.name));\n        }\n        if (element.mixins.length > 0) {\n          props.mixins = element.mixins.map((m) => m.identifier);\n        }\n        return props;\n      }\n\n  test('Finds two basic elements', async() => {\n    const elements = await getElements('test-element-1.js');\n    const elementData = await Promise.all(elements.map(getTestProps));\n    assert.deepEqual(elementData, [\n      {\n        tagName: 'test-element',\n        className: 'TestElement',\n        superClass: 'Polymer.Element',\n        description: '',\n        summary: '',\n        properties: [{\n          name: 'foo',\n          description: 'The foo prop.',\n          type: '(m-test|function)',\n        }],\n        attributes: [{\n          name: 'foo',\n        }],\n        methods: [],\n        warningUnderlines: [],\n      },\n      {\n        tagName: undefined,\n        className: 'BaseElement',\n        superClass: 'Polymer.Element',\n        description: 'A very basic element',\n        summary: 'A basic element',\n        properties:\n            [{name: 'foo', description: 'A base foo element.', type: 'string'}],\n        attributes: [{\n          name: 'foo',\n        }],\n        methods: [],\n        warningUnderlines: [],\n      },\n    ]);\n\n    const underlinedSource1 =\n        await underliner.underline(elements[0].sourceRange);\n    assert.equal(underlinedSource1, `\nclass TestElement extends Polymer.Element {\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  static get properties() {\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    return {\n~~~~~~~~~~~~\n      /**\n~~~~~~~~~\n       * The foo prop.\n~~~~~~~~~~~~~~~~~~~~~~\n       * @public\n~~~~~~~~~~~~~~~~\n       * @type {m-test|function}\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n       */\n~~~~~~~~~\n      foo: {\n~~~~~~~~~~~~\n        notify: true,\n~~~~~~~~~~~~~~~~~~~~~\n        type: String,\n~~~~~~~~~~~~~~~~~~~~~\n      }\n~~~~~~~\n    }\n~~~~~\n  }\n~~~\n}\n~`);\n\n    const underlinedSource2 =\n        await underliner.underline(elements[1].sourceRange);\n    assert.equal(underlinedSource2, `\nclass BaseElement extends Polymer.Element {\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  static get properties() {\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    return {\n~~~~~~~~~~~~\n      /** A base foo element. */\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      foo: {\n~~~~~~~~~~~~\n        notify: true,\n~~~~~~~~~~~~~~~~~~~~~\n        type: String,\n~~~~~~~~~~~~~~~~~~~~~\n      },\n~~~~~~~~\n    };\n~~~~~~\n  }\n~~~\n}\n~`);\n  });\n\n  test('Uses static is getter for tagName', async() => {\n    const elements = await getElements('test-element-2.js');\n    const elementData = await Promise.all(elements.map(getTestProps));\n    assert.deepEqual(elementData, [\n      {\n        tagName: 'test-element',\n        className: 'TestElement',\n        superClass: 'HTMLElement',\n        description: '',\n        summary: '',\n        properties: [],\n        attributes: [],\n        methods: [],\n        warningUnderlines: [],\n      },\n    ]);\n  });\n\n  test('Finds vanilla elements', async() => {\n    const elements = await getElements('test-element-4.js');\n    const elementData = await Promise.all(elements.map(getTestProps));\n    assert.deepEqual(elementData, [\n      {\n        tagName: 'test-element',\n        className: 'TestElement',\n        superClass: 'HTMLElement',\n        description: '',\n        summary: '',\n        properties: [],\n        attributes: [\n          {\n            name: 'a',\n          },\n          {\n            name: 'b',\n          }\n        ],\n        methods: [],\n        warningUnderlines: [],\n      },\n    ]);\n  });\n\n  test('Observed attributes override induced attributes', async() => {\n    const elements = await getElements('test-element-5.js');\n    const elementData = await Promise.all(elements.map(getTestProps));\n\n    assert.deepEqual(elementData, [\n      {\n        tagName: 'test-element',\n        className: 'TestElement',\n        superClass: 'Polymer.Element',\n        description: '',\n        summary: '',\n        properties: [{\n          name: 'foo',\n          description: '',\n          type: 'string',\n        }],\n        attributes: [\n          {\n            name: 'a',\n          },\n          {\n            name: 'b',\n          }\n        ],\n        methods: [],\n        warningUnderlines: [],\n      },\n    ]);\n  });\n\n  test('properly sets className for elements with the memberof tag', async() => {\n    const elements = await getElements('test-element-8.js');\n    const elementData = await Promise.all(elements.map(getTestProps));\n    assert.deepEqual(elementData, [\n      {\n        tagName: 'test-element-one',\n        className: 'Polymer.TestElementOne',\n        superClass: 'Polymer.Element',\n        description:\n            `This element is a member of Polymer namespace and is registered with its\nnamespaced name.`,\n        summary: '',\n        properties: [{\n          name: 'foo',\n          description: '',\n          type: 'string',\n        }],\n        attributes: [{\n          name: 'foo',\n        }],\n        methods: [],\n        warningUnderlines: [],\n      },\n      {\n        tagName: 'test-element-two',\n        className: 'Polymer.TestElementTwo',\n        superClass: 'Polymer.Element',\n        description:\n            `This element is a member of Polymer namespace and is registered without its\nnamespaced name.`,\n        summary: '',\n        properties: [{\n          name: 'foo',\n          description: '',\n          type: 'string',\n        }],\n        attributes: [{\n          name: 'foo',\n        }],\n        methods: [],\n        warningUnderlines: [],\n      }\n    ]);\n  });\n\n  test('Read @appliesMixin annotations', async() => {\n    const elements = await getElements('test-element-6.js');\n    const elementData = await Promise.all(elements.map(getTestProps));\n\n    assert.deepEqual(elementData, [\n      {\n        tagName: 'test-element',\n        className: 'TestElement',\n        superClass: 'Polymer.Element',\n        description: '',\n        summary: '',\n        properties: [],\n        attributes: [],\n        methods: [],\n        mixins: ['Mixin2', 'Mixin1'],\n        warningUnderlines: [],\n      },\n    ]);\n  });\n\n  test('Reads just @appliesMixin annotation', async() => {\n    const elements = await getElements('test-element-9.js');\n    const elementData = await Promise.all(elements.map(getTestProps));\n\n    assert.deepEqual(elementData, [\n      {\n        tagName: undefined,\n        className: 'BaseElement',\n        superClass: 'Polymer.Element',\n        description: '',\n        summary: '',\n        properties: [],\n        attributes: [],\n        methods: [],\n        warningUnderlines: [],\n      },\n      {\n        tagName: undefined,\n        className: 'SubElement',\n        superClass: 'BaseElement',\n        description: '',\n        summary: '',\n        properties: [],\n        attributes: [],\n        methods: [],\n        mixins: ['Mixin'],\n        warningUnderlines: [],\n      },\n      {\n        tagName: undefined,\n        className: 'SubElement2',\n        superClass: 'BaseElement',\n        description: '',\n        summary: '',\n        properties: [],\n        attributes: [],\n        methods: [],\n        mixins: ['Mixin'],\n        warningUnderlines: [],\n      },\n      {\n        tagName: undefined,\n        className: 'window.MyElement',\n        superClass: 'MixedElement',\n        description: '',\n        summary: '',\n        properties: [],\n        attributes: [],\n        methods: [],\n        mixins: ['MyMixin'],\n        warningUnderlines: [],\n      }\n    ]);\n  });\n\n  test(\n      'properly reads properties and methods of elements and element classes',\n      async() => {\n        const elements = await getElements('test-element-10.js');\n        const elementData = await Promise.all(elements.map(getTestProps));\n        assert.deepEqual(elementData, [\n          {\n            tagName: 'test-element',\n            className: 'TestElement',\n            superClass: 'Polymer.Element',\n            description: ``,\n            summary: '',\n            properties: [{\n              name: 'foo',\n              description: '',\n              type: 'string',\n            }],\n            attributes: [{\n              name: 'foo',\n            }],\n            methods: [\n              {\n                name: 'customInstanceFunction',\n                description: '',\n                params: [], return: undefined\n              },\n              {\n                name: 'customInstanceFunctionWithJSDoc',\n                description: 'This is the description for ' +\n                    'customInstanceFunctionWithJSDoc.',\n                params: [], return: {\n                  desc: 'The number 5, always.',\n                  type: 'Number',\n                },\n              },\n              {\n                name: 'customInstanceFunctionWithParams',\n                description: '',\n                params: [\n                  {name: 'a', type: undefined, description: undefined},\n                  {name: 'b', type: undefined, description: undefined},\n                  {name: 'c', type: undefined, description: undefined}\n                ],\n                return: undefined,\n              },\n              {\n                name: 'customInstanceFunctionWithParamsAndJSDoc',\n                description: 'This is the description for ' +\n                    'customInstanceFunctionWithParamsAndJSDoc.',\n                params: [\n                  {\n                    name: 'a',\n                    type: 'Number',\n                    description: 'The first argument',\n                  },\n                  {name: 'b', type: 'Number', description: undefined},\n                  {\n                    name: 'c',\n                    type: 'Number',\n                    description: 'The third argument',\n                  }\n                ],\n                return: {\n                  desc: 'The number 7, always.',\n                  type: 'Number',\n                },\n              },\n              {\n                name: 'customInstanceFunctionWithParamsAndPrivateJSDoc',\n                description: 'This is the description for\\n' +\n                    'customInstanceFunctionWithParamsAndPrivateJSDoc.',\n                params: [], return: undefined,\n              },\n            ],\n            warningUnderlines: [],\n          },\n        ]);\n      });\n\n  test('warns for bad observers and computed properties', async() => {\n    const elements = await getElements('test-element-12.js');\n    const elementData = await Promise.all(elements.map(getTestProps));\n    assert.deepEqual(\n        elementData, [{\n          attributes: [{name: 'parse-error'}, {name: 'bad-kind-of-expression'}],\n          className: 'TestElement',\n          description: '',\n          methods: [],\n          properties: [\n            {\n              name: 'parseError',\n              type: 'string',\n              description: '',\n              warningUnderlines: [\n                `\n        computed: 'let let let',\n                       ~`,\n                `\n        observer: 'let let let',\n                       ~`,\n              ]\n            },\n            {\n              name: 'badKindOfExpression',\n              type: 'string',\n              description: '',\n              propertiesInComputed: ['foo'],\n              propertiesInObserver: ['foo', 'bar', 'baz'],\n              warningUnderlines: [\n                `\n        computed: 'foo',\n                   ~~~`,\n                `\n        observer: 'foo(bar, baz)'\n                   ~~~~~~~~~~~~~`,\n              ]\n            }\n          ],\n          summary: '',\n          superClass: 'Polymer.Element',\n          tagName: 'test-element',\n          warningUnderlines: [\n            `\n      'let let let parseError',\n           ~`,\n            `\n      'foo',\n       ~~~`\n          ],\n          observers: [\n            'let let let parseError',\n            'foo',\n            'foo(bar)',\n          ],\n          observerProperties: [['foo'], ['foo', 'bar']],\n        }]);\n  });\n\n  test('can identify elements registered with ClassName.is', async() => {\n    const elements = await getElements('test-element-11.js');\n    const elementData = await Promise.all(elements.map(getTestProps));\n    assert.deepEqual(\n        elementData, [{\n          attributes: [{name: 'prop1'}],\n          className: 'MyElement',\n          description: '',\n          methods: [],\n          properties: [{name: 'prop1', description: '', type: 'string'}],\n          summary: '',\n          superClass: 'Polymer.Element',\n          tagName: 'my-app',\n          warningUnderlines: [],\n        }]);\n\n  });\n});\n"]}