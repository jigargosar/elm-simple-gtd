var _user$project$View$addTodoFab = function (m) {
	return A2(
		_edvail$elm_polymer$Polymer_Paper$fab,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$id('add-fab'),
			_1: {
				ctor: '::',
				_0: A2(_elm_lang$html$Html_Attributes$attribute, 'icon', 'add'),
				_1: {
					ctor: '::',
					_0: A2(_elm_lang$html$Html_Attributes$attribute, 'mini', ''),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$Model$NewTodo),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$tabindex(-1),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		},
		{ctor: '[]'});
};
var _user$project$View$mainContent = F2(
	function (viewModel, model) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$id('main-content'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: function () {
					var _p0 = _user$project$Model$getMainViewType(model);
					if (_p0.ctor === 'EntityListView') {
						return A3(_user$project$EntityList_View$listView, _p0._0, model, viewModel);
					} else {
						return _user$project$CustomSync$view(model);
					}
				}(),
				_1: {ctor: '[]'}
			});
	});
var _user$project$View$appDrawerLayoutView = function (m) {
	var forceNarrow = _user$project$Model$getLayoutForceNarrow(m);
	var viewModel = _user$project$ViewModel$create(m);
	return A2(
		_edvail$elm_polymer$Polymer_App$drawerLayout,
		{
			ctor: '::',
			_0: A2(_user$project$X_Html$boolProperty, 'forceNarrow', forceNarrow),
			_1: {
				ctor: '::',
				_0: A2(_user$project$WebComponents$onBoolPropertyChanged, 'narrow', _user$project$Model$OnLayoutNarrowChanged),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(_user$project$View_AppDrawer$view, viewModel, m),
			_1: {
				ctor: '::',
				_0: A2(
					_edvail$elm_polymer$Polymer_App$headerLayout,
					{
						ctor: '::',
						_0: A2(_elm_lang$html$Html_Attributes$attribute, 'has-scrolling-region', ''),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(_user$project$View_Header$init, viewModel, m),
						_1: {
							ctor: '::',
							_0: A2(_user$project$View$mainContent, viewModel, m),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$View$overlayViews = function (appModel) {
	var editModeOverlayView = function () {
		var _p1 = _user$project$Model$getEditMode(appModel);
		switch (_p1.ctor) {
			case 'LaunchBar':
				return A2(_user$project$LaunchBar_View$init, _p1._0, appModel);
			case 'TaskMoreMenu':
				return _user$project$Todo_MoreMenu$view(_p1._0);
			case 'EditTodoContext':
				return A2(_user$project$Todo_View$contextMenu, _p1._0, appModel);
			case 'EditTodoProject':
				return A2(_user$project$Todo_View$projectMenu, _p1._0, appModel);
			case 'EditTodoReminder':
				return _user$project$Todo_View$reminderPopup(_p1._0);
			case 'SignInOverlay':
				return _user$project$View_GetStarted$signInOverlay;
			case 'SetupOverlay':
				return _user$project$View_GetStarted$setupOverlay;
			case 'ActionList':
				return A2(_user$project$ActionList_View$init, appModel, _p1._0);
			case 'EditProject':
				return _user$project$GroupDoc_EditView$init(_p1._0);
			case 'EditContext':
				return _user$project$GroupDoc_EditView$init(_p1._0);
			case 'EditTask':
				return A2(_user$project$Todo_View$edit, _p1._0, appModel);
			case 'NewTodo':
				return _user$project$Todo_View$new(_p1._0);
			default:
				return A2(
					_elm_lang$html$Html$span,
					{ctor: '[]'},
					{ctor: '[]'});
		}
	}();
	return A2(
		_elm_lang$core$List$filterMap,
		_elm_lang$core$Basics$identity,
		{
			ctor: '::',
			_0: _elm_lang$core$Maybe$Just(editModeOverlayView),
			_1: {
				ctor: '::',
				_0: _user$project$View_ReminderOverlay$maybe(appModel),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$View$appView = function (model) {
	var children = A2(
		_elm_lang$core$Basics_ops['++'],
		{
			ctor: '::',
			_0: _user$project$View$appDrawerLayoutView(model),
			_1: {
				ctor: '::',
				_0: _user$project$View$addTodoFab(model),
				_1: {ctor: '[]'}
			}
		},
		_user$project$View$overlayViews(model));
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$id('app-view'),
			_1: {ctor: '[]'}
		},
		children);
};
var _user$project$View$init = function (m) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$id('root'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _user$project$Firebase_View$init(m),
			_1: {
				ctor: '::',
				_0: _user$project$View$appView(m),
				_1: {ctor: '[]'}
			}
		});
};
