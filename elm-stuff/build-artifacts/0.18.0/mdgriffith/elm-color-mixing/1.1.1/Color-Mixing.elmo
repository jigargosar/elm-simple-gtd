var _mdgriffith$elm_color_mixing$Color_Mixing$blend = F3(
	function (fn, color1, color2) {
		var rgba2 = _elm_lang$core$Color$toRgb(color2);
		var rgba1 = _elm_lang$core$Color$toRgb(color1);
		var newAlpha = rgba2.alpha + (rgba1.alpha * (1 - rgba2.alpha));
		var apply = F2(
			function (channel1, channel2) {
				var c2 = _elm_lang$core$Basics$toFloat(channel2) / 255;
				var c1 = _elm_lang$core$Basics$toFloat(channel1) / 255;
				var c_ = A2(fn, c1, c2);
				var newChannel = (!_elm_lang$core$Native_Utils.eq(newAlpha, 0.0)) ? (((rgba2.alpha * c2) + (rgba1.alpha * (c1 - (rgba2.alpha * ((c1 + c2) - c_))))) / newAlpha) : c_;
				return _elm_lang$core$Basics$round(newChannel * 255);
			});
		return A4(
			_elm_lang$core$Color$rgba,
			A2(apply, rgba1.red, rgba2.red),
			A2(apply, rgba1.green, rgba2.green),
			A2(apply, rgba1.blue, rgba2.blue),
			newAlpha);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$multiply = F2(
	function (color1, color2) {
		return A3(
			_mdgriffith$elm_color_mixing$Color_Mixing$blend,
			F2(
				function (x, y) {
					return x * y;
				}),
			color1,
			color2);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$screen = F2(
	function (color1, color2) {
		return A3(
			_mdgriffith$elm_color_mixing$Color_Mixing$blend,
			F2(
				function (c1, c2) {
					return (c1 + c2) - (c1 * c2);
				}),
			color1,
			color2);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$overlay = F2(
	function (color1, color2) {
		return A3(
			_mdgriffith$elm_color_mixing$Color_Mixing$blend,
			F2(
				function (c1, c2) {
					var newc1 = c1 * 2;
					if (_elm_lang$core$Native_Utils.cmp(newc1, 1) < 1) {
						return newc1 * c2;
					} else {
						var c1_ = newc1 - 1;
						return (c1_ + c2) - (c1_ * c2);
					}
				}),
			color1,
			color2);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$hardlight = F2(
	function (color1, color2) {
		return A2(_mdgriffith$elm_color_mixing$Color_Mixing$overlay, color2, color1);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$softlight = F2(
	function (color1, color2) {
		return A3(
			_mdgriffith$elm_color_mixing$Color_Mixing$blend,
			F2(
				function (c1, c2) {
					var _p0 = function () {
						if (_elm_lang$core$Native_Utils.cmp(c2, 0.5) > 0) {
							var d = (_elm_lang$core$Native_Utils.cmp(c1, 0.25) > 0) ? _elm_lang$core$Basics$sqrt(c1) : (((((16 * c1) - 12) * c1) + 4) * c1);
							return {ctor: '_Tuple2', _0: d, _1: 1};
						} else {
							return {ctor: '_Tuple2', _0: c1, _1: 1};
						}
					}();
					var e = _p0._0;
					var d = _p0._1;
					return c1 - (((1 - (2 * c2)) * e) * (d - c1));
				}),
			color1,
			color2);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$difference = F2(
	function (color1, color2) {
		return A3(
			_mdgriffith$elm_color_mixing$Color_Mixing$blend,
			F2(
				function (c1, c2) {
					return _elm_lang$core$Basics$abs(c1 - c2);
				}),
			color1,
			color2);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$exclusion = F2(
	function (color1, color2) {
		return A3(
			_mdgriffith$elm_color_mixing$Color_Mixing$blend,
			F2(
				function (c1, c2) {
					return (c1 + c2) - ((2 * c1) * c2);
				}),
			color1,
			color2);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$average = F2(
	function (color1, color2) {
		return A3(
			_mdgriffith$elm_color_mixing$Color_Mixing$blend,
			F2(
				function (c1, c2) {
					return (c1 + c2) / 2;
				}),
			color1,
			color2);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$negation = F2(
	function (color1, color2) {
		return A3(
			_mdgriffith$elm_color_mixing$Color_Mixing$blend,
			F2(
				function (c1, c2) {
					return 1 - _elm_lang$core$Basics$abs((c1 + c2) - 1);
				}),
			color1,
			color2);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$mix = F3(
	function (p, color1, color2) {
		var w = (p * 2) - 1;
		var rgba2 = _elm_lang$core$Color$toRgb(color2);
		var rgba1 = _elm_lang$core$Color$toRgb(color1);
		var a = rgba1.alpha - rgba2.alpha;
		var w1 = _elm_lang$core$Native_Utils.eq(w * a, -1) ? w : ((((w + a) / (1 + (w * a))) + 1) / 2.0);
		var w2 = 1 - w1;
		var r = (_elm_lang$core$Basics$toFloat(rgba1.red) * w1) + (_elm_lang$core$Basics$toFloat(rgba2.red) * w2);
		var g = (_elm_lang$core$Basics$toFloat(rgba1.green) * w1) + (_elm_lang$core$Basics$toFloat(rgba2.green) * w2);
		var b = (_elm_lang$core$Basics$toFloat(rgba1.blue) * w1) + (_elm_lang$core$Basics$toFloat(rgba2.blue) * w2);
		var alpha = (rgba1.alpha * p) + (rgba2.alpha * (1 - p));
		return A4(
			_elm_lang$core$Color$rgba,
			_elm_lang$core$Basics$round(r),
			_elm_lang$core$Basics$round(g),
			_elm_lang$core$Basics$round(b),
			alpha);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$tint = F2(
	function (x, color) {
		return A3(
			_mdgriffith$elm_color_mixing$Color_Mixing$mix,
			x,
			A3(_elm_lang$core$Color$rgb, 255, 255, 255),
			color);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$shade = F2(
	function (x, color) {
		return A3(
			_mdgriffith$elm_color_mixing$Color_Mixing$mix,
			x,
			A3(_elm_lang$core$Color$rgb, 0, 0, 0),
			color);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$spin = F2(
	function (x, color) {
		var precision = 1000000.0;
		var colorHSL = _elm_lang$core$Color$toHsl(color);
		var protoHue = _elm_lang$core$Basics$toFloat(
			A2(
				_elm_lang$core$Basics_ops['%'],
				_elm_lang$core$Basics$round((colorHSL.hue + x) * precision),
				_elm_lang$core$Basics$round(
					_elm_lang$core$Basics$degrees(360.0) * precision))) / precision;
		var hue = (_elm_lang$core$Native_Utils.cmp(protoHue, 0) < 0) ? (protoHue + _elm_lang$core$Basics$degrees(360.0)) : protoHue;
		return A4(_elm_lang$core$Color$hsla, hue, colorHSL.saturation, colorHSL.lightness, colorHSL.alpha);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$fade = F2(
	function (x, color) {
		var alpha = A3(_elm_lang$core$Basics$clamp, 0, 1, x);
		var colorHSL = _elm_lang$core$Color$toHsl(color);
		return A4(_elm_lang$core$Color$hsla, colorHSL.hue, colorHSL.saturation, colorHSL.lightness, alpha);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$fadeOut = F2(
	function (x, color) {
		var colorHSL = _elm_lang$core$Color$toHsl(color);
		var alpha = A3(_elm_lang$core$Basics$clamp, 0, 1, colorHSL.alpha - x);
		return A4(_elm_lang$core$Color$hsla, colorHSL.hue, colorHSL.saturation, colorHSL.lightness, alpha);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$fadeIn = F2(
	function (x, color) {
		var colorHSL = _elm_lang$core$Color$toHsl(color);
		var alpha = A3(_elm_lang$core$Basics$clamp, 0, 1, colorHSL.alpha + x);
		return A4(_elm_lang$core$Color$hsla, colorHSL.hue, colorHSL.saturation, colorHSL.lightness, alpha);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$darken = F2(
	function (x, color) {
		var colorHSL = _elm_lang$core$Color$toHsl(color);
		var lightness = A3(_elm_lang$core$Basics$clamp, 0, 1, colorHSL.lightness - x);
		return A4(_elm_lang$core$Color$hsla, colorHSL.hue, colorHSL.saturation, lightness, colorHSL.alpha);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$lighten = F2(
	function (x, color) {
		var colorHSL = _elm_lang$core$Color$toHsl(color);
		var lightness = A3(_elm_lang$core$Basics$clamp, 0, 1, colorHSL.lightness + x);
		return A4(_elm_lang$core$Color$hsla, colorHSL.hue, colorHSL.saturation, lightness, colorHSL.alpha);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$desaturate = F2(
	function (x, color) {
		var colorHSL = _elm_lang$core$Color$toHsl(color);
		var sat = A3(_elm_lang$core$Basics$clamp, 0, 1, colorHSL.saturation - x);
		return A4(_elm_lang$core$Color$hsla, colorHSL.hue, sat, colorHSL.lightness, colorHSL.alpha);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$saturate = F2(
	function (x, color) {
		var colorHSL = _elm_lang$core$Color$toHsl(color);
		var sat = A3(_elm_lang$core$Basics$clamp, 0, 1, colorHSL.saturation + x);
		return A4(_elm_lang$core$Color$hsla, colorHSL.hue, sat, colorHSL.lightness, colorHSL.alpha);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$percent = F3(
	function (fn, channel, factor) {
		return factor * fn(channel / factor);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$mapRedPercent = F2(
	function (fn, color) {
		var _p1 = _elm_lang$core$Color$toRgb(color);
		var red = _p1.red;
		var green = _p1.green;
		var blue = _p1.blue;
		var alpha = _p1.alpha;
		return A4(
			_elm_lang$core$Color$rgba,
			_elm_lang$core$Basics$round(
				A3(
					_mdgriffith$elm_color_mixing$Color_Mixing$percent,
					fn,
					_elm_lang$core$Basics$toFloat(red),
					255)),
			green,
			blue,
			alpha);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$mapGreenPercent = F2(
	function (fn, color) {
		var _p2 = _elm_lang$core$Color$toRgb(color);
		var red = _p2.red;
		var green = _p2.green;
		var blue = _p2.blue;
		var alpha = _p2.alpha;
		return A4(
			_elm_lang$core$Color$rgba,
			red,
			_elm_lang$core$Basics$round(
				A3(
					_mdgriffith$elm_color_mixing$Color_Mixing$percent,
					fn,
					_elm_lang$core$Basics$toFloat(green),
					255)),
			blue,
			alpha);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$mapBluePercent = F2(
	function (fn, color) {
		var _p3 = _elm_lang$core$Color$toRgb(color);
		var red = _p3.red;
		var green = _p3.green;
		var blue = _p3.blue;
		var alpha = _p3.alpha;
		return A4(
			_elm_lang$core$Color$rgba,
			red,
			green,
			_elm_lang$core$Basics$round(
				A3(
					_mdgriffith$elm_color_mixing$Color_Mixing$percent,
					fn,
					_elm_lang$core$Basics$toFloat(blue),
					255)),
			alpha);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$mapAlphaPercent = F2(
	function (fn, color) {
		var _p4 = _elm_lang$core$Color$toRgb(color);
		var red = _p4.red;
		var green = _p4.green;
		var blue = _p4.blue;
		var alpha = _p4.alpha;
		return A4(
			_elm_lang$core$Color$rgba,
			red,
			green,
			blue,
			A3(_mdgriffith$elm_color_mixing$Color_Mixing$percent, fn, alpha, 1.0));
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$mapSaturationPercent = F2(
	function (fn, color) {
		var _p5 = _elm_lang$core$Color$toHsl(color);
		var hue = _p5.hue;
		var saturation = _p5.saturation;
		var lightness = _p5.lightness;
		var alpha = _p5.alpha;
		return A4(
			_elm_lang$core$Color$hsla,
			hue,
			A3(_mdgriffith$elm_color_mixing$Color_Mixing$percent, fn, saturation, 1.0),
			lightness,
			alpha);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$mapHuePercent = F2(
	function (fn, color) {
		var _p6 = _elm_lang$core$Color$toHsl(color);
		var hue = _p6.hue;
		var saturation = _p6.saturation;
		var lightness = _p6.lightness;
		var alpha = _p6.alpha;
		return A4(
			_elm_lang$core$Color$hsla,
			A3(
				_mdgriffith$elm_color_mixing$Color_Mixing$percent,
				fn,
				hue,
				_elm_lang$core$Basics$degrees(360)),
			saturation,
			lightness,
			alpha);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$mapLightnessPercent = F2(
	function (fn, color) {
		var _p7 = _elm_lang$core$Color$toHsl(color);
		var hue = _p7.hue;
		var saturation = _p7.saturation;
		var lightness = _p7.lightness;
		var alpha = _p7.alpha;
		return A4(
			_elm_lang$core$Color$hsla,
			hue,
			saturation,
			A3(_mdgriffith$elm_color_mixing$Color_Mixing$percent, fn, lightness, 1.0),
			alpha);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$mapLightness = F2(
	function (fn, color) {
		var _p8 = _elm_lang$core$Color$toHsl(color);
		var hue = _p8.hue;
		var saturation = _p8.saturation;
		var lightness = _p8.lightness;
		var alpha = _p8.alpha;
		return A4(
			_elm_lang$core$Color$hsla,
			hue,
			saturation,
			fn(lightness),
			alpha);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$mapHue = F2(
	function (fn, color) {
		var _p9 = _elm_lang$core$Color$toHsl(color);
		var hue = _p9.hue;
		var saturation = _p9.saturation;
		var lightness = _p9.lightness;
		var alpha = _p9.alpha;
		return A4(
			_elm_lang$core$Color$hsla,
			fn(hue),
			saturation,
			lightness,
			alpha);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$mapSaturation = F2(
	function (fn, color) {
		var _p10 = _elm_lang$core$Color$toHsl(color);
		var hue = _p10.hue;
		var saturation = _p10.saturation;
		var lightness = _p10.lightness;
		var alpha = _p10.alpha;
		return A4(
			_elm_lang$core$Color$hsla,
			hue,
			fn(saturation),
			lightness,
			alpha);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$mapAlpha = F2(
	function (fn, color) {
		var _p11 = _elm_lang$core$Color$toRgb(color);
		var red = _p11.red;
		var green = _p11.green;
		var blue = _p11.blue;
		var alpha = _p11.alpha;
		return A4(
			_elm_lang$core$Color$rgba,
			red,
			green,
			blue,
			fn(alpha));
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$mapBlue = F2(
	function (fn, color) {
		var _p12 = _elm_lang$core$Color$toRgb(color);
		var red = _p12.red;
		var green = _p12.green;
		var blue = _p12.blue;
		var alpha = _p12.alpha;
		return A4(
			_elm_lang$core$Color$rgba,
			red,
			green,
			fn(blue),
			alpha);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$mapGreen = F2(
	function (fn, color) {
		var _p13 = _elm_lang$core$Color$toRgb(color);
		var red = _p13.red;
		var green = _p13.green;
		var blue = _p13.blue;
		var alpha = _p13.alpha;
		return A4(
			_elm_lang$core$Color$rgba,
			red,
			fn(green),
			blue,
			alpha);
	});
var _mdgriffith$elm_color_mixing$Color_Mixing$mapRed = F2(
	function (fn, color) {
		var _p14 = _elm_lang$core$Color$toRgb(color);
		var red = _p14.red;
		var green = _p14.green;
		var blue = _p14.blue;
		var alpha = _p14.alpha;
		return A4(
			_elm_lang$core$Color$rgba,
			fn(red),
			green,
			blue,
			alpha);
	});
