{"version":3,"sources":["test/javascript/jsdoc_test.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;AAEH,+BAA4B;AAG5B,mDAAmD;AAGnD,KAAK,CAAC,OAAO,EAAE;IAEb,KAAK,CAAC,YAAY,EAAE;QAElB,IAAI,CAAC,oBAAoB,EAAE;YACzB,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;YACpD,aAAM,CAAC,SAAS,CAAC,MAAM,EAAE;gBACvB,WAAW,EAAE,gBAAgB;gBAC7B,IAAI,EAAE,EAAE;aACT,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,EAAE;YACvB,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,wCAAwC,CAAC,CAAC;YAC1E,aAAM,CAAC,SAAS,CAAC,MAAM,EAAE;gBACvB,WAAW,EAAE,oCAAoC;gBACjD,IAAI,EAAE,EAAE;aACT,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,EAAE;YACtB,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;YAC3C,aAAM,CAAC,SAAS,CAAC,MAAM,EAAE;gBACvB,WAAW,EAAE,EAAE;gBACf,IAAI,EAAE;oBACJ,EAAC,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,IAAI,EAAC;iBACnC;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,EAAE;YACtB,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;YAC/C,aAAM,CAAC,SAAS,CAAC,MAAM,EAAE;gBACvB,WAAW,EAAE,EAAE;gBACf,IAAI,EAAE;oBACJ,EAAC,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAC;iBACpC;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,EAAE;YACtB,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;YACjD,aAAM,CAAC,SAAS,CAAC,MAAM,EAAE;gBACvB,WAAW,EAAE,EAAE;gBACf,IAAI,EAAE;oBACJ,EAAC,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAC;iBACtC;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,EAAE;YACxB,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,gCAAgC,CAAC,CAAC;YAClE,aAAM,CAAC,SAAS,CAAC,MAAM,EAAE;gBACvB,WAAW,EAAE,EAAE;gBACf,IAAI,EAAE;oBACJ;wBACE,KAAK,EAAE,OAAO;wBACd,IAAI,EAAE,EAAC,IAAI,EAAE,gBAAgB;4BACtB,IAAI,EAAE,MAAM,EAAiC;wBACpD,IAAI,EAAE,MAAM;wBACZ,WAAW,EAAE,WAAW;qBACzB;iBACF;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oCAAoC,EAAE;YACzC,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,8BAA8B,CAAC,CAAC;YAChE,aAAM,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,EAAE,0BAA0B,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,EAAE;YAC1B,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,6BAA6B,CAAC,CAAC;YAC/D,aAAM,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IAEL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,YAAY,EAAE;QAElB,IAAI,CAAC,4CAA4C,EAAE;YACjD,aAAM,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kCAAkC,EAAE;YACvC,aAAM,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,EAAC,WAAW,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,4BAA4B,EAAE;YACjC,aAAM,CAAC,KAAK,CACR,KAAK,CAAC,UAAU,CAAC;gBACf,WAAW,EAAE,EAAE;gBACf,IAAI,EAAE,CAAC;wBACL,KAAK,EAAE,QAAQ;wBACf,WAAW,EAAE,EAAE;qBAChB,CAAC;aACH,CAAC,EACF,QAAmB,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kCAAkC,EAAE;YACvC,aAAM,CAAC,KAAK,CACR,KAAK,CAAC,UAAU,CAAC;gBACf,WAAW,EAAE,EAAE;gBACf,IAAI,EAAE,CAAC;wBACL,KAAK,EAAE,WAAW;wBAClB,WAAW,EAAE,EAAE;qBAChB,CAAC;aACH,CAAC,EACF,WAAsB,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,8BAA8B,EAAE;YACnC,aAAM,CAAC,KAAK,CACR,KAAK,CAAC,UAAU,CAAC;gBACf,WAAW,EAAE,EAAE;gBACf,IAAI,EAAE,CAAC;wBACL,KAAK,EAAE,SAAS;wBAChB,WAAW,EAAE,EAAE;qBAChB,CAAC;aACH,CAAC;YACF,gEAAgE;YAChE,SAAoB,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IAEL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,mBAAmB,EAAE;QAEzB,IAAI,CAAC,4BAA4B,EAAE;YACjC,aAAM,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,0CAA0C,EAAE;YAC/C,aAAM,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAC,WAAW,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iCAAiC,EAAE;YACtC,aAAM,CAAC,OAAO,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAC,WAAW,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC;IAEL,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC","file":"jsdoc_test.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {assert} from 'chai';\nimport * as doctrine from 'doctrine';\n\nimport * as jsdoc from '../../javascript/jsdoc.js';\nimport {Privacy} from '../../model/model';\n\nsuite('jsdoc', () => {\n\n  suite('parseJsdoc', () => {\n\n    test('parses single-line', () => {\n      const parsed = jsdoc.parseJsdoc('* Just some text');\n      assert.deepEqual(parsed, {\n        description: 'Just some text',\n        tags: [],\n      });\n    });\n\n    test('parses body-only', () => {\n      const parsed = jsdoc.parseJsdoc('* Just some text\\n* in multiple lines.');\n      assert.deepEqual(parsed, {\n        description: 'Just some text\\nin multiple lines.',\n        tags: [],\n      });\n    });\n\n    test('parses tag-only', () => {\n      const parsed = jsdoc.parseJsdoc('* @atag');\n      assert.deepEqual(parsed, {\n        description: '',\n        tags: [\n          {title: 'atag', description: null},\n        ],\n      });\n    });\n\n    test('parses tag-name', () => {\n      const parsed = jsdoc.parseJsdoc('* @do stuff');\n      assert.deepEqual(parsed, {\n        description: '',\n        tags: [\n          {title: 'do', description: 'stuff'},\n        ],\n      });\n    });\n\n    test('parses tag-desc', () => {\n      const parsed = jsdoc.parseJsdoc('* @do a thing');\n      assert.deepEqual(parsed, {\n        description: '',\n        tags: [\n          {title: 'do', description: 'a thing'},\n        ],\n      });\n    });\n\n    test('parses param type', () => {\n      const parsed = jsdoc.parseJsdoc('* @param {Type} name desc desc');\n      assert.deepEqual(parsed, {\n        description: '',\n        tags: [\n          {\n            title: 'param',\n            type: {type: 'NameExpression',\n                   name: 'Type'} as doctrine.type.NameExpression,\n            name: 'name',\n            description: 'desc desc',\n          },\n        ],\n      });\n    });\n\n    test('preserves indentation for the body', () => {\n      const parsed = jsdoc.parseJsdoc('*     The desc.\\n*     thing');\n      assert.deepEqual(parsed.description, '    The desc.\\n    thing');\n    });\n\n    test('handles empty lines', () => {\n      const parsed = jsdoc.parseJsdoc('*\\n *\\n * Foo\\n   *\\n * Bar');\n      assert.deepEqual(parsed.description, 'Foo\\n\\nBar');\n    });\n\n  });\n\n  suite('getPrivacy', () => {\n\n    test('returns undefined for undefined annotation', () => {\n      assert.isUndefined(jsdoc.getPrivacy(undefined));\n    });\n\n    test('returns undefined for empty tags', () => {\n      assert.isUndefined(jsdoc.getPrivacy({description: '', tags: []}));\n    });\n\n    test('returns public for @public', () => {\n      assert.equal(\n          jsdoc.getPrivacy({\n            description: '',\n            tags: [{\n              title: 'public',\n              description: '',\n            }]\n          }),\n          'public' as Privacy);\n    });\n\n    test('returns protected for @protected', () => {\n      assert.equal(\n          jsdoc.getPrivacy({\n            description: '',\n            tags: [{\n              title: 'protected',\n              description: '',\n            }]\n          }),\n          'protected' as Privacy);\n    });\n\n    test('returns private for @private', () => {\n      assert.equal(\n          jsdoc.getPrivacy({\n            description: '',\n            tags: [{\n              title: 'private',\n              description: '',\n            }]\n          }),\n          // NOTE: This cast is necessary because of a crashing bug in tsc\n          'private' as Privacy);\n    });\n\n  });\n\n  suite('isAnnotationEmpty', () => {\n\n    test('returns true for undefined', () => {\n      assert.isTrue(jsdoc.isAnnotationEmpty(undefined));\n    });\n\n    test('returns true for no tags, no description', () => {\n      assert.isTrue(jsdoc.isAnnotationEmpty({description: ' \\t', tags: []}));\n    });\n\n    test('returns false for a description', () => {\n      assert.isFalse(jsdoc.isAnnotationEmpty({description: 'foo', tags: []}));\n    });\n\n  });\n\n});\n"]}