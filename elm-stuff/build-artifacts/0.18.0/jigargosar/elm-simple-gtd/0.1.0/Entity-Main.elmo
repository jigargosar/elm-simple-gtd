var _jigargosar$elm_simple_gtd$Entity_Main$getTodoGotoGroupView = F2(
	function (todo, prevView) {
		var projectView = _jigargosar$elm_simple_gtd$Entity_Types$ProjectView(
			_jigargosar$elm_simple_gtd$Todo$getProjectId(todo));
		var contextView = _jigargosar$elm_simple_gtd$Entity_Types$ContextView(
			_jigargosar$elm_simple_gtd$Todo$getContextId(todo));
		var _p0 = prevView;
		switch (_p0.ctor) {
			case 'ProjectsView':
				return contextView;
			case 'ProjectView':
				return contextView;
			case 'ContextsView':
				return projectView;
			case 'ContextView':
				return projectView;
			case 'BinView':
				return _jigargosar$elm_simple_gtd$Entity_Types$ContextsView;
			case 'DoneView':
				return _jigargosar$elm_simple_gtd$Entity_Types$ContextsView;
			default:
				return _jigargosar$elm_simple_gtd$Entity_Types$ContextsView;
		}
	});
var _jigargosar$elm_simple_gtd$Entity_Main$toViewType = F3(
	function (appModel, maybeCurrentEntityListViewType, entityId) {
		var _p1 = entityId;
		switch (_p1.ctor) {
			case 'ContextId':
				return _jigargosar$elm_simple_gtd$Entity_Types$ContextView(_p1._0);
			case 'ProjectId':
				return _jigargosar$elm_simple_gtd$Entity_Types$ProjectView(_p1._0);
			default:
				var getViewTypeForTodo = function (todo) {
					return A2(
						_danielnarey$elm_toolkit$Toolkit_Operators_ops['?='],
						A2(
							_danielnarey$elm_toolkit$Toolkit_Operators_ops['?|>'],
							maybeCurrentEntityListViewType,
							_jigargosar$elm_simple_gtd$Entity_Main$getTodoGotoGroupView(todo)),
						_jigargosar$elm_simple_gtd$Entity_Types$ContextView(
							_jigargosar$elm_simple_gtd$Todo$getContextId(todo)));
				};
				return A2(
					_danielnarey$elm_toolkit$Toolkit_Operators_ops['?='],
					A2(
						_elm_community$maybe_extra$Maybe_Extra$orElse,
						maybeCurrentEntityListViewType,
						A2(
							_danielnarey$elm_toolkit$Toolkit_Operators_ops['?|>'],
							A2(_jigargosar$elm_simple_gtd$Stores$findTodoById, _p1._0, appModel),
							getViewTypeForTodo)),
					_jigargosar$elm_simple_gtd$Entity_Types$ContextsView);
		}
	});
var _jigargosar$elm_simple_gtd$Entity_Main$startEditingEntity = F2(
	function (andThenUpdate, entityId) {
		var _p2 = entityId;
		switch (_p2.ctor) {
			case 'ContextId':
				return A2(
					_jigargosar$elm_simple_gtd$X_Return$mapModelWithMaybeF,
					_jigargosar$elm_simple_gtd$Stores$findContextById(_p2._0),
					function (_p3) {
						return _jigargosar$elm_simple_gtd$Model_Internal$setExclusiveMode(
							_jigargosar$elm_simple_gtd$ExclusiveMode_Types$XMEditContext(
								_jigargosar$elm_simple_gtd$GroupDoc_EditForm$createEditContextForm(_p3)));
					});
			case 'ProjectId':
				return A2(
					_jigargosar$elm_simple_gtd$X_Return$mapModelWithMaybeF,
					_jigargosar$elm_simple_gtd$Stores$findProjectById(_p2._0),
					function (_p4) {
						return _jigargosar$elm_simple_gtd$Model_Internal$setExclusiveMode(
							_jigargosar$elm_simple_gtd$ExclusiveMode_Types$XMEditContext(
								_jigargosar$elm_simple_gtd$GroupDoc_EditForm$createEditProjectForm(_p4)));
					});
			default:
				return A2(
					_jigargosar$elm_simple_gtd$X_Return$withMaybe,
					_jigargosar$elm_simple_gtd$Stores$findTodoById(_p2._0),
					function (_p5) {
						return andThenUpdate(
							_jigargosar$elm_simple_gtd$TodoMsg$onStartEditingTodo(_p5));
					});
		}
	});
var _jigargosar$elm_simple_gtd$Entity_Main$editContextSetName = A2(_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>>'], _jigargosar$elm_simple_gtd$GroupDoc_EditForm$setName, _jigargosar$elm_simple_gtd$ExclusiveMode_Types$XMEditContext);
var _jigargosar$elm_simple_gtd$Entity_Main$editProjectSetName = A2(_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>>'], _jigargosar$elm_simple_gtd$GroupDoc_EditForm$setName, _jigargosar$elm_simple_gtd$ExclusiveMode_Types$XMEditProject);
var _jigargosar$elm_simple_gtd$Entity_Main$updateEditModeTextChanged = F2(
	function (newName, model) {
		return function () {
			var _p6 = model.editMode;
			switch (_p6.ctor) {
				case 'XMEditContext':
					return _jigargosar$elm_simple_gtd$Model_Internal$setExclusiveMode(
						A2(_jigargosar$elm_simple_gtd$Entity_Main$editContextSetName, newName, _p6._0));
				case 'XMEditProject':
					return _jigargosar$elm_simple_gtd$Model_Internal$setExclusiveMode(
						A2(_jigargosar$elm_simple_gtd$Entity_Main$editProjectSetName, newName, _p6._0));
				default:
					return _elm_lang$core$Basics$identity;
			}
		}()(model);
	});
var _jigargosar$elm_simple_gtd$Entity_Main$createAndEditNewContext = F2(
	function (andThenUpdate, model) {
		return function (_p7) {
			var _p8 = _p7;
			var entity = _jigargosar$elm_simple_gtd$Entity_Types$createContextEntity(_p8._0);
			return A3(
				_jigargosar$elm_simple_gtd$Entity_Main$startEditingEntity,
				andThenUpdate,
				_jigargosar$elm_simple_gtd$Entity$toEntityId(entity),
				_Fresheyeball$elm_return$Return$singleton(_p8._1));
		}(
			A2(
				_Fresheyeball$elm_tuple_extra$Tuple2$mapSecond,
				A2(_danielnarey$elm_toolkit$Toolkit_Operators_ops['#'], _jigargosar$elm_simple_gtd$Stores$setContextStore, model),
				A2(
					_jigargosar$elm_simple_gtd$Store$insert,
					A2(_jigargosar$elm_simple_gtd$Context$init, '<New Context>', model.now),
					model.contextStore)));
	});
var _jigargosar$elm_simple_gtd$Entity_Main$createAndEditNewProject = F2(
	function (andThenUpdate, model) {
		return function (_p9) {
			var _p10 = _p9;
			var entity = _jigargosar$elm_simple_gtd$Entity_Types$createProjectEntity(_p10._0);
			return A3(
				_jigargosar$elm_simple_gtd$Entity_Main$startEditingEntity,
				andThenUpdate,
				_jigargosar$elm_simple_gtd$Entity$toEntityId(entity),
				_Fresheyeball$elm_return$Return$singleton(_p10._1));
		}(
			A2(
				_Fresheyeball$elm_tuple_extra$Tuple2$mapSecond,
				A2(_danielnarey$elm_toolkit$Toolkit_Operators_ops['#'], _jigargosar$elm_simple_gtd$Stores$setProjectStore, model),
				A2(
					_jigargosar$elm_simple_gtd$Store$insert,
					A2(_jigargosar$elm_simple_gtd$Project$init, '<New Project>', model.now),
					model.projectStore)));
	});
var _jigargosar$elm_simple_gtd$Entity_Main$toggleDeleteEntity = function (entityId) {
	var _p11 = entityId;
	switch (_p11.ctor) {
		case 'ContextId':
			return A2(_jigargosar$elm_simple_gtd$Stores$updateContext, _p11._0, _jigargosar$elm_simple_gtd$Document$toggleDeleted);
		case 'ProjectId':
			return A2(_jigargosar$elm_simple_gtd$Stores$updateProject, _p11._0, _jigargosar$elm_simple_gtd$Document$toggleDeleted);
		default:
			return A2(_jigargosar$elm_simple_gtd$Stores$updateTodo, _jigargosar$elm_simple_gtd$Todo_Types$TA_ToggleDeleted, _p11._0);
	}
};
var _jigargosar$elm_simple_gtd$Entity_Main$switchToEntityListViewFromEntity = F2(
	function (entityId, model) {
		var maybeEntityListViewType = _jigargosar$elm_simple_gtd$Model_ViewType$maybeGetCurrentEntityListViewType(model);
		return A2(_danielnarey$elm_toolkit$Toolkit_Operators_ops['#'], _jigargosar$elm_simple_gtd$Model_ViewType$setEntityListViewType, model)(
			A3(_jigargosar$elm_simple_gtd$Entity_Main$toViewType, model, maybeEntityListViewType, entityId));
	});
var _jigargosar$elm_simple_gtd$Entity_Main$toggleSetMember = F2(
	function (item, set) {
		return A2(_elm_lang$core$Set$member, item, set) ? A2(_elm_lang$core$Set$remove, item, set) : A2(_elm_lang$core$Set$insert, item, set);
	});
var _jigargosar$elm_simple_gtd$Entity_Main$toggleEntitySelection = function (entityId) {
	return _jigargosar$elm_simple_gtd$Model_Selection$updateSelectedEntityIdSet(
		_jigargosar$elm_simple_gtd$Entity_Main$toggleSetMember(
			_jigargosar$elm_simple_gtd$Entity_Types$getDocIdFromEntityId(entityId)));
};
var _jigargosar$elm_simple_gtd$Entity_Main$onUpdate = F3(
	function (andThenUpdate, entityId, msg) {
		var _p12 = msg;
		switch (_p12.ctor) {
			case 'OnStartEditingEntity':
				return function (_p13) {
					return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputRCmd(
						A3(_jigargosar$elm_simple_gtd$Entity_Main$startEditingEntity, andThenUpdate, entityId, _p13));
				};
			case 'OnEntityTextChanged':
				return _Fresheyeball$elm_return$Return$map(
					_jigargosar$elm_simple_gtd$Entity_Main$updateEditModeTextChanged(_p12._0));
			case 'OnEntityToggleDeleted':
				return function (_p14) {
					return A2(
						andThenUpdate,
						_jigargosar$elm_simple_gtd$Msg$OnDeactivateEditingMode,
						A2(
							_Fresheyeball$elm_return$Return$andThen,
							_jigargosar$elm_simple_gtd$Entity_Main$toggleDeleteEntity(entityId),
							_p14));
				};
			case 'OnEntityToggleArchived':
				var toggleArchivedEntity = function () {
					var _p15 = entityId;
					switch (_p15.ctor) {
						case 'ContextId':
							return _Fresheyeball$elm_return$Return$andThen(
								A2(_jigargosar$elm_simple_gtd$Stores$updateContext, _p15._0, _jigargosar$elm_simple_gtd$GroupDoc$toggleArchived));
						case 'ProjectId':
							return _Fresheyeball$elm_return$Return$andThen(
								A2(_jigargosar$elm_simple_gtd$Stores$updateProject, _p15._0, _jigargosar$elm_simple_gtd$GroupDoc$toggleArchived));
						default:
							return andThenUpdate(
								_jigargosar$elm_simple_gtd$Msg$OnTodoMsg(
									A2(_jigargosar$elm_simple_gtd$Todo_Msg$OnUpdateTodoAndMaybeSelectedAndDeactivateEditingMode, _p15._0, _jigargosar$elm_simple_gtd$Todo_Types$TA_ToggleDone)));
					}
				}();
				return function (_p16) {
					return A2(
						andThenUpdate,
						_jigargosar$elm_simple_gtd$Msg$OnDeactivateEditingMode,
						toggleArchivedEntity(_p16));
				};
			case 'OnFocusInEntity':
				return _Fresheyeball$elm_return$Return$map(
					_jigargosar$elm_simple_gtd$Stores$setFocusInEntityWithEntityId(entityId));
			case 'OnToggleSelectedEntity':
				return _Fresheyeball$elm_return$Return$map(
					_jigargosar$elm_simple_gtd$Entity_Main$toggleEntitySelection(entityId));
			default:
				return _Fresheyeball$elm_return$Return$map(
					_jigargosar$elm_simple_gtd$Entity_Main$switchToEntityListViewFromEntity(entityId));
		}
	});
var _jigargosar$elm_simple_gtd$Entity_Main$update = F2(
	function (andThenUpdate, msg) {
		var _p17 = msg;
		switch (_p17.ctor) {
			case 'OnNewProject':
				return function (_p18) {
					return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputRCmd(
						A2(
							_Fresheyeball$elm_return$Return$andThen,
							_jigargosar$elm_simple_gtd$Entity_Main$createAndEditNewProject(andThenUpdate),
							_p18));
				};
			case 'OnNewContext':
				return function (_p19) {
					return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputRCmd(
						A2(
							_Fresheyeball$elm_return$Return$andThen,
							_jigargosar$elm_simple_gtd$Entity_Main$createAndEditNewContext(andThenUpdate),
							_p19));
				};
			default:
				return A3(_jigargosar$elm_simple_gtd$Entity_Main$onUpdate, andThenUpdate, _p17._0, _p17._1);
		}
	});
var _jigargosar$elm_simple_gtd$Entity_Main$map = _Fresheyeball$elm_return$Return$map;
