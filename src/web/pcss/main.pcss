@import "polymer.pcss";

:root {
  --overlay: {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
  };

  --layout-vertical: {
    display: flex;
    align-items: stretch;
    flex-direction: column;
  };

  --layout-horizontal: {
    display: flex;
    align-items: center;
    flex-direction: row;
  };

  --font-nowrap: {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  };

  --ul-layout: {
    @nest & ul {
      @apply --layout-vertical;
      width: 100%;
      & li {
        @apply --layout-horizontal;
        padding-left: 1rem;
        width: 100%;
      }
    }
  };

}

* {
  box-sizing: border-box;
}

.default-color.material-icons{
  color: gray(30%);
}


/*
[tabindex="0"], [tabindex="1"]{
  outline: none!important;
}

[tabindex="0"]:focus, [tabindex="1"]:focus{
  outline: none!important;
  text-decoration: underline;
}

[tabindex="0"]:focus > * , [tabindex="1"]:focus > *{
  text-decoration: unset;
}
*/

.app-drawer-list-container {
  @apply --ul-layout;
}

.app-drawer-list-container li:not(.list-container) {
  cursor: pointer;
  min-height: 2.5rem;
  padding-right: 1rem;
}

.app-drawer-list-container li:not(.list-container) > * {
  &:nth-child(1), &:nth-child(3) {
    margin-right: 1rem;
    flex: 0 0 auto;
  }
}

.done-icon {
  &.is-done .material-icons, &:not(.is-done) .material-icons:hover {
    color: #4caf50;
  }

  &.is-done .material-icons:hover {
    color: unset;
  }

}

.done-icon a .material-icons, .done-icon a {
  line-height: 2rem;
  height: 2rem;
  width: 2rem;
  font-size: 1.5rem;
}

.app-drawer-list-container li:not(.list-container) > * {
  flex: 1 1 auto;
}

.app-drawer-list-container li.list-container:not(.expanded) {
  display: none;
}

a {
  cursor: pointer;
}

.hidden {
  visibility: hidden !important;
}

.display-none {
  display: none;
}

.w100 {
  width: 100%;
}

/*mat css*/
.collection > .collection-item, .entity-list > .entity-item {
  outline: none;

  &[tabindex="0"]:not(.active):focus {
    background-color: gray(95%);
  }
}

i {
  user-select: none;
}

.btn-floating i {
  color: black;
}

#left-header {
  width: 100%;
}

#left-header a {
  color: white;
  /*text-decoration: underline;*/
  outline: none;
  margin-right: 1em;
}

app-toolbar .btn-floating i {
  color: white;
}

.btn-floating.x24, .btn-floating.x24 i {
  width: 24px;
  height: 24px;
  font-size: 18px;
  line-height: 24px;
}

/*mat css END*/

.overlay {
  @apply --overlay;
  background-color: rgba(0, 0, 0, 0.3);
}

.overlay .modal {
  display: block;
}

.fixed-center {
  position: fixed;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

.fixed-top-20p {
  position: fixed;
  left: 50%;
  top: 20%;
  transform: translate(-50%, 0);
}

#welcome {

}

iron-icon.account {
  border-radius: 50%;
  overflow: hidden;
}

#main-header {

}

.focusable-list .focusable-list-item {
  outline: none;
  position: relative;

  &:before {
    position: absolute;
    left: 0;
    top: 0;
    content: "";
    width: 100%;
    height: 100%;
    background-color: transparent;
    pointer-events: none;
  }

  &.selected:before {
    background-color: rgb(255, 255, 0);
    opacity: 0.1;
  }

  &[tabindex="0"]:before {
    background-color: black;
    opacity: 0.1;
  }

}

.ellipsis {
  @apply --font-nowrap;
}

.small {
  font-size: 0.7rem;
  line-height: 1.2em;
}

.flex11 {
  flex: 1 1 auto;
}

.dim {
  opacity: 0.5;
}

.active-task-view {
  padding: 16px 16px 0;
  & .title {

  }

  & .elapsed-time {
    display: inline-block;

  }
}

#add-fab {
  position: fixed;
  right: 10px;
  bottom: 10px;
}

.flex-expand {
  flex: 1 1 auto;
}

paper-item, .has-hover-elements {
  & > .show-on-hover {
    display: none;
  }

  /*
  &[selected] > .show-on-hover{
    display: flex;
  }
  */

  & > .hide-on-hover {
    display: flex;
  }

  &:hover > .show-on-hover {
    display: flex;
  }
  &:hover > .hide-on-hover {
    display: none;
  }
}

paper-listbox {
  background-color: transparent;
}

.focusable-list .entity-item {
  /*&[tabindex="0"] .title {
    font-weight: bolder;
    color: rgba(0, 0, 172, 0.44);
  }

  &:focus[tabindex="0"] .title {
    font-weight: bolder;
    color: rgba(0, 0, 172, 0.77)
  }
  &.edit[tabindex="0"]:before {
      background-color: transparent;
      opacity: 1;
  }*/
  padding: 0.5rem 1rem;
  border-left: 2px solid transparent;
  background-color: white;

  &:not(.selected):before {
    background-color: transparent;
  }

  &[tabindex="0"] {
    border-left: 2px solid rgba(0, 0, 172, 0.44);
  }

  &:focus[tabindex="0"] {
    border-left: 2px solid rgba(0, 0, 172, 0.77);
  }

}

#popup-menu {
  position: absolute;
//left: 100px; //top: 100px; background-color: white; overflow-y: scroll; overflow-x: hidden; max-height: 100vh; min-width: 20vw; max-width: 80vw;
}

.entity-list > .collection {
  margin-left: 1rem;
  margin-right: 1rem;
}

.entity-list > .entity-item:first-child {
  margin-bottom: 1rem;
  border-bottom: 1px solid gray(90%);
  border-right: 1px solid gray(90%);
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

.entity-list > .todo-list {
  margin-left: 1rem;
  margin-right: 1rem;
}

.focusable-list .todo-item {
  & .display-text-container {
    cursor: default;
  }
  &.can-be-focused .display-text-container {
    cursor: pointer;
  }
}

.focusable-list .todo-item {
  border-left: 2px solid transparent;

  &:not(.selected):before {
    background-color: transparent;
  }

  & paper-button.small .title {
    text-transform: none;
    font-size: 14px;
    line-height: 20px;
  }

  &[tabindex="0"] {
    border-left: 2px solid rgba(0, 0, 172, 0.44);
  }

  &:focus[tabindex="0"] {
    border-left: 2px solid rgba(0, 0, 172, 0.77);
  }

  &.editing {
    flex-direction: column;
    align-items: stretch;
  }

  & paper-icon-button {
    width: 24px;
    height: 24px;
    padding: 2px;
    /*transform: scale(0.7);*/
  }

  & .display-text {
    padding: 0 8px;
    flex: 1 1;
    /*white-space: pre-line; !*sequences of whitespace are collapsed*!*/
    /* when indenting items using star, whitespace should not be lost*/
  //overflow-wrap: break-word; white-space: pre-wrap; /*sequences of whitespace are preserved*/ //word-break: normal; hyphens: auto;
  }

  & .reminder-text.overdue {
    text-decoration: underline red;
  }

  & .reminder-text {
    text-decoration: underline black;
  }

}

.big-dialog {
  position: absolute;
  width: 300px;
  height: 300px;
  background-color: rgba(0, 0, 0, 0.64);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 100000;
}

.text-left {
  text-align: left;
}

.padding-0 {
  padding: 0;
}

.margin-0 {
  margin: 0;
}

app-drawer-layout:not([narrow]) .hide-when-wide {
  display: none;
}

#main-content {
  margin: 0 0 5rem 0;
  max-width: 600px;
  position: relative;
  min-height: 70vh;
}

textarea.materialize-textarea {
//min-height: 2em; //padding-bottom: 0.5rem;
}

#launch-bar-container {
  position: fixed;
  top: 30vh;
  left: 10vw;
  max-width: 80vw;
  width: 600px;
  background-color: rgba(128, 128, 128, 0.99);
  color: white;
  border-radius: 5px;
  box-shadow: 1rem 1rem 3rem gray;
  padding: 1rem;
  font-size: 1.4rem;
  line-height: 1.2em;

  & input {
    background-color: transparent;
    border: none;
    outline: none;
  //visibility: hidden; height: 0; width: 0;
  }

  & .input {
    text-decoration: underline;
    text-decoration-color: cornflowerblue;
    font-size: 1rem;
    max-width: 10rem;
    overflow-x: hidden;
  }
}
