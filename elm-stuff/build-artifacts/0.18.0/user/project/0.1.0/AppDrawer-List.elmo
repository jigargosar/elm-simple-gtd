var _user$project$AppDrawer_List$onSetEntityListViewItem = F3(
	function (iconName, viewType, title) {
		return A2(
			_elm_lang$html$Html$li,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(''),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_user$project$Model$OnSetEntityListView(viewType)),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: _user$project$Material$icon(iconName),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$h5,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(title),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$AppDrawer_List$switchViewItem = F3(
	function (iconName, viewType, title) {
		return A2(
			_elm_lang$html$Html$li,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(''),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_user$project$Model$SwitchView(viewType)),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: _user$project$Material$icon(iconName),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$h5,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(title),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$AppDrawer_List$entityListItem = function (vm) {
	return A2(
		_elm_lang$html$Html$li,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(
				vm.onActiveStateChanged(true)),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_user$project$Material$iconA,
				vm.icon.name,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: A2(_user$project$Ext_Function_Infix_ops['=>'], 'color', vm.icon.color),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('font-nowrap'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _user$project$View_Shared$defaultBadge(vm),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$AppDrawer_List$archivedItems = function (vm) {
	var _p0 = vm.showArchived ? {
		ctor: '_Tuple3',
		_0: 'visibility_off',
		_1: 'Hide Archived',
		_2: A2(_elm_lang$core$List$map, _user$project$AppDrawer_List$entityListItem, vm.archivedEntityList)
	} : {
		ctor: '_Tuple3',
		_0: 'visibility',
		_1: ' Show Archived',
		_2: {ctor: '[]'}
	};
	var iconName = _p0._0;
	var buttonText = _p0._1;
	var viewItems = _p0._2;
	return {
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$li,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(''),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(vm.onToggleShowArchived),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: _user$project$Material$icon(iconName),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(buttonText),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$li,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$classList(
						{
							ctor: '::',
							_0: A2(_user$project$Ext_Function_Infix_ops['=>'], 'list-container', true),
							_1: {
								ctor: '::',
								_0: A2(_user$project$Ext_Function_Infix_ops['=>'], 'expanded', vm.showArchived),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$ul,
						{ctor: '[]'},
						viewItems),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		}
	};
};
var _user$project$AppDrawer_List$entityListView = F2(
	function (vm, mainViewType) {
		var _p1 = vm;
		var entityList = _p1.entityList;
		var viewType = _p1.viewType;
		var title = _p1.title;
		var showDeleted = _p1.showDeleted;
		var onAddClicked = _p1.onAddClicked;
		var icon = _p1.icon;
		var onToggleExpanded = _p1.onToggleExpanded;
		var isExpanded = _p1.isExpanded;
		var isCurrentView = _elm_lang$core$Native_Utils.eq(
			_user$project$Model$EntityListView(viewType),
			mainViewType);
		var fireSwitchView = _user$project$Model$SwitchView(
			_user$project$Model$EntityListView(viewType));
		var fireSmart = isCurrentView ? onToggleExpanded : fireSwitchView;
		var _p2 = isExpanded ? {ctor: '_Tuple2', _0: 'expand_less', _1: _elm_community$html_extra$Html_Events_Extra$onClickStopPropagation} : {ctor: '_Tuple2', _0: 'expand_more', _1: _elm_community$html_extra$Html_Events_Extra$onClickStopPropagation};
		var expandIconName = _p2._0;
		var expandButtonClickType = _p2._1;
		return {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$li,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(fireSmart),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_user$project$Material$iconA,
						icon.name,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$style(
								{
									ctor: '::',
									_0: A2(_user$project$Ext_Function_Infix_ops['=>'], 'color', icon.color),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$h5,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(title),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_user$project$Material$iconButton,
								expandIconName,
								{
									ctor: '::',
									_0: expandButtonClickType(onToggleExpanded),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$li,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$classList(
							{
								ctor: '::',
								_0: A2(_user$project$Ext_Function_Infix_ops['=>'], 'list-container', true),
								_1: {
									ctor: '::',
									_0: A2(_user$project$Ext_Function_Infix_ops['=>'], 'expanded', isExpanded),
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$ul,
							{ctor: '[]'},
							A2(
								_elm_lang$core$Basics_ops['++'],
								{ctor: '[]'},
								A2(
									_elm_lang$core$Basics_ops['++'],
									A2(_elm_lang$core$List$map, _user$project$AppDrawer_List$entityListItem, entityList),
									A2(
										_elm_lang$core$Basics_ops['++'],
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$li,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class(''),
													_1: {
														ctor: '::',
														_0: _elm_community$html_extra$Html_Events_Extra$onClickPreventDefaultAndStopPropagation(onAddClicked),
														_1: {ctor: '[]'}
													}
												},
												{
													ctor: '::',
													_0: _user$project$Material$icon('add'),
													_1: {
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$div,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text('Add New'),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}),
											_1: {ctor: '[]'}
										},
										A2(
											_elm_lang$core$Basics_ops['++'],
											_user$project$AppDrawer_List$archivedItems(vm),
											{
												ctor: '::',
												_0: _user$project$Material$divider,
												_1: {ctor: '[]'}
											}))))),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		};
	});
var _user$project$AppDrawer_List$toggleDeletedItem = function (model) {
	return A2(
		_elm_lang$html$Html$li,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(_user$project$Model$ToggleShowDeletedEntity),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('switch'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$label,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$type_('checkbox'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$checked(model.showDeleted),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$tabindex(-1),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Events$onClick(_user$project$Model$ToggleShowDeletedEntity),
												_1: {ctor: '[]'}
											}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$span,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('lever'),
										_1: {ctor: '[]'}
									},
									{ctor: '[]'}),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Show/Hide Deleted Contexts/Projects'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$AppDrawer_List$view = F2(
	function (appVM, model) {
		var _p3 = appVM;
		var contexts = _p3.contexts;
		var projects = _p3.projects;
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('app-drawer-list-container'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$ul,
					{ctor: '[]'},
					A2(
						_elm_lang$core$Basics_ops['++'],
						{ctor: '[]'},
						A2(
							_elm_lang$core$Basics_ops['++'],
							A2(_user$project$AppDrawer_List$entityListView, contexts, model.mainViewType),
							A2(
								_elm_lang$core$Basics_ops['++'],
								A2(_user$project$AppDrawer_List$entityListView, projects, model.mainViewType),
								A2(
									_elm_lang$core$Basics_ops['++'],
									{
										ctor: '::',
										_0: A3(_user$project$AppDrawer_List$onSetEntityListViewItem, 'delete', _user$project$Entity$BinView, 'Bin'),
										_1: {
											ctor: '::',
											_0: A3(_user$project$AppDrawer_List$onSetEntityListViewItem, 'done', _user$project$Entity$DoneView, 'Done'),
											_1: {
												ctor: '::',
												_0: A3(_user$project$AppDrawer_List$switchViewItem, 'sync', _user$project$Model$SyncView, 'Custom Sync'),
												_1: {ctor: '[]'}
											}
										}
									},
									{
										ctor: '::',
										_0: _user$project$Material$divider,
										_1: {ctor: '[]'}
									}))))),
				_1: {ctor: '[]'}
			});
	});
