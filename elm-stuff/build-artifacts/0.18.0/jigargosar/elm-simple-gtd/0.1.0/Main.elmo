var _jigargosar$elm_simple_gtd$Main$positionScheduleMenuCmd = function (todo) {
	return _jigargosar$elm_simple_gtd$DomPorts$positionPopupMenu(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'#edit-schedule-button-',
			_jigargosar$elm_simple_gtd$Document$getId(todo)));
};
var _jigargosar$elm_simple_gtd$Main$positionProjectMenuCmd = function (todo) {
	return _jigargosar$elm_simple_gtd$DomPorts$positionPopupMenu(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'#edit-project-button-',
			_jigargosar$elm_simple_gtd$Document$getId(todo)));
};
var _jigargosar$elm_simple_gtd$Main$positionContextMenuCmd = function (todo) {
	return _jigargosar$elm_simple_gtd$DomPorts$positionPopupMenu(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'#edit-context-button-',
			_jigargosar$elm_simple_gtd$Document$getId(todo)));
};
var _jigargosar$elm_simple_gtd$Main$command = _Fresheyeball$elm_return$Return$command;
var _jigargosar$elm_simple_gtd$Main$reminderOverlayAction = function (action) {
	return _Fresheyeball$elm_return$Return$andThen(
		function (model) {
			return function () {
				var _p0 = model.reminderOverlay;
				if (_p0.ctor === 'Active') {
					var _p7 = _p0._1;
					var todoId = _p7.id;
					var _p1 = action;
					switch (_p1.ctor) {
						case 'Dismiss':
							return function (_p2) {
								return A2(
									_Fresheyeball$elm_return$Return$command,
									_jigargosar$elm_simple_gtd$Notification$closeNotification(todoId),
									A2(
										_elm_lang$core$Tuple$mapFirst,
										_jigargosar$elm_simple_gtd$Model$removeReminderOverlay,
										A3(_jigargosar$elm_simple_gtd$Model$updateTodo, _jigargosar$elm_simple_gtd$Todo$TurnReminderOff, todoId, _p2)));
							};
						case 'ShowSnoozeOptions':
							return function (_p3) {
								return _Fresheyeball$elm_return$Return$singleton(
									A2(_jigargosar$elm_simple_gtd$Model$setReminderOverlayToSnoozeView, _p7, _p3));
							};
						case 'SnoozeTill':
							return function (_p4) {
								return A2(
									_Fresheyeball$elm_return$Return$command,
									_jigargosar$elm_simple_gtd$Notification$closeNotification(todoId),
									A2(
										_Fresheyeball$elm_return$Return$andThen,
										A2(_jigargosar$elm_simple_gtd$Model$snoozeTodoWithOffset, _p1._0, todoId),
										_Fresheyeball$elm_return$Return$singleton(_p4)));
							};
						case 'Close':
							return function (_p5) {
								return _Fresheyeball$elm_return$Return$singleton(
									_jigargosar$elm_simple_gtd$Model$removeReminderOverlay(_p5));
							};
						default:
							return function (_p6) {
								return A2(
									_Fresheyeball$elm_return$Return$command,
									_jigargosar$elm_simple_gtd$Notification$closeNotification(todoId),
									A2(
										_elm_lang$core$Tuple$mapFirst,
										_jigargosar$elm_simple_gtd$Model$removeReminderOverlay,
										A3(_jigargosar$elm_simple_gtd$Model$updateTodo, _jigargosar$elm_simple_gtd$Todo$MarkDone, todoId, _p6)));
							};
					}
				} else {
					return _Fresheyeball$elm_return$Return$singleton;
				}
			}()(model);
		});
};
var _jigargosar$elm_simple_gtd$Main$maybeMapToCmd = function (fn) {
	return A2(
		_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>?='],
		_elm_lang$core$Maybe$map(fn),
		_elm_lang$core$Platform_Cmd$none);
};
var _jigargosar$elm_simple_gtd$Main$onUpdateNow = function (now) {
	return _Fresheyeball$elm_return$Return$map(
		_jigargosar$elm_simple_gtd$Model$setNow(now));
};
var _jigargosar$elm_simple_gtd$Main$updateTodoAndMaybeAlsoSelected = F2(
	function (action, todo) {
		return _Fresheyeball$elm_return$Return$andThen(
			A2(
				_jigargosar$elm_simple_gtd$Model$updateTodoAndMaybeAlsoSelected,
				action,
				_jigargosar$elm_simple_gtd$Document$getId(todo)));
	});
var _jigargosar$elm_simple_gtd$Main$map = _Fresheyeball$elm_return$Return$map;
var _jigargosar$elm_simple_gtd$Main$logMsg = F2(
	function (msg, model) {
		var _p8 = function () {
			var _p9 = msg;
			_v2_3:
			do {
				switch (_p9.ctor) {
					case 'OnNowChanged':
						return _elm_lang$core$Maybe$Nothing;
					case 'OnTodoMsg':
						if (_p9._0.ctor === 'UpdateTimeTracker') {
							return _elm_lang$core$Maybe$Nothing;
						} else {
							break _v2_3;
						}
					case 'OnTodoMsgWithTime':
						if (_p9._0.ctor === 'UpdateTimeTracker') {
							return _elm_lang$core$Maybe$Nothing;
						} else {
							break _v2_3;
						}
					default:
						break _v2_3;
				}
			} while(false);
			var _p10 = 1;
			return _elm_lang$core$Maybe$Nothing;
		}();
		return model;
	});
var _jigargosar$elm_simple_gtd$Main$withNow = function (toMsg) {
	return _jigargosar$elm_simple_gtd$Main$command(
		A2(_elm_lang$core$Task$perform, toMsg, _elm_lang$core$Time$now));
};
var _jigargosar$elm_simple_gtd$Main$welcomeEntitiesURL = 'https://firebasestorage.googleapis.com/v0/b/simple-gtd-prod.appspot.com/o/public%2Fwelcome-entities.json?alt=media';
var _jigargosar$elm_simple_gtd$Main$set = A2(_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>>'], _jigargosar$elm_simple_gtd$X_Record$set, _jigargosar$elm_simple_gtd$Main$map);
var _jigargosar$elm_simple_gtd$Main$over = A2(_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>>'], _jigargosar$elm_simple_gtd$X_Record$over, _jigargosar$elm_simple_gtd$Main$map);
var _jigargosar$elm_simple_gtd$Main$subscriptions = function (m) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: A2(_elm_lang$core$Time$every, _elm_lang$core$Time$second * 1, _jigargosar$elm_simple_gtd$Model$OnNowChanged),
			_1: {
				ctor: '::',
				_0: _jigargosar$elm_simple_gtd$X_Keyboard$subscription(_jigargosar$elm_simple_gtd$Model$OnKeyboardMsg),
				_1: {
					ctor: '::',
					_0: _jigargosar$elm_simple_gtd$X_Keyboard$ups(_jigargosar$elm_simple_gtd$Model$OnGlobalKeyUp),
					_1: {
						ctor: '::',
						_0: _jigargosar$elm_simple_gtd$Store$onChange(_jigargosar$elm_simple_gtd$Model$OnPouchDBChange),
						_1: {
							ctor: '::',
							_0: _jigargosar$elm_simple_gtd$Firebase$onChange(_jigargosar$elm_simple_gtd$Model$OnFirebaseDatabaseChange),
							_1: {
								ctor: '::',
								_0: _scottcorgan$keyboard_combo$Keyboard_Combo$subscriptions(m.keyComboModel),
								_1: {
									ctor: '::',
									_0: _jigargosar$elm_simple_gtd$Todo_Main$subscriptions(m),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		});
};
var _jigargosar$elm_simple_gtd$Main$syncWithRemotePouch = _elm_lang$core$Native_Platform.outgoingPort(
	'syncWithRemotePouch',
	function (v) {
		return v;
	});
var _jigargosar$elm_simple_gtd$Main$persistLocalPref = _elm_lang$core$Native_Platform.outgoingPort(
	'persistLocalPref',
	function (v) {
		return v;
	});
var _jigargosar$elm_simple_gtd$Main$updateInner = function (msg) {
	var _p11 = msg;
	switch (_p11.ctor) {
		case 'OnCommonMsg':
			return _jigargosar$elm_simple_gtd$CommonMsg$update(_p11._0);
		case 'OnPouchDBChange':
			return _jigargosar$elm_simple_gtd$X_Return$andThenMaybe(
				A2(
					_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>?'],
					A2(
						_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>?'],
						A2(_jigargosar$elm_simple_gtd$Model$upsertEncodedDocOnPouchDBChange, _p11._0, _p11._1),
						_elm_lang$core$Tuple$mapFirst(_jigargosar$elm_simple_gtd$Model$OnEntityUpsert)),
					_elm_lang$core$Basics$uncurry(_jigargosar$elm_simple_gtd$Main$update)));
		case 'OnEntityUpsert':
			var _p12 = _p11._0;
			if (_p12.ctor === 'Todo') {
				return _jigargosar$elm_simple_gtd$Main$andThenTodoMsg(
					_jigargosar$elm_simple_gtd$Todo_Msg$Upsert(_p12._0));
			} else {
				return _elm_lang$core$Basics$identity;
			}
		case 'OnFirebaseDatabaseChange':
			return _Fresheyeball$elm_return$Return$effect_(
				A2(_jigargosar$elm_simple_gtd$Model$upsertEncodedDocOnFirebaseChange, _p11._0, _p11._1));
		case 'OnSwitchToNewUserSetupModeIfNeeded':
			return _Fresheyeball$elm_return$Return$map(_jigargosar$elm_simple_gtd$Model$switchToNewUserSetupModeIfNeeded);
		case 'OnEntityListKeyDown':
			var _p16 = _p11._0;
			var _p13 = _p11._1.key;
			switch (_p13.ctor) {
				case 'ArrowUp':
					return function (_p14) {
						return A2(
							_jigargosar$elm_simple_gtd$Main$andThenUpdate,
							_jigargosar$elm_simple_gtd$Model$setDomFocusToFocusInEntityCmd,
							A2(
								_Fresheyeball$elm_return$Return$map,
								A2(_jigargosar$elm_simple_gtd$Model$moveFocusBy, -1, _p16),
								_p14));
					};
				case 'ArrowDown':
					return function (_p15) {
						return A2(
							_jigargosar$elm_simple_gtd$Main$andThenUpdate,
							_jigargosar$elm_simple_gtd$Model$setDomFocusToFocusInEntityCmd,
							A2(
								_Fresheyeball$elm_return$Return$map,
								A2(_jigargosar$elm_simple_gtd$Model$moveFocusBy, 1, _p16),
								_p15));
					};
				default:
					return _elm_lang$core$Basics$identity;
			}
		case 'RemotePouchSync':
			return function (_p17) {
				return A2(
					_Fresheyeball$elm_return$Return$effect_,
					function (_p18) {
						return _jigargosar$elm_simple_gtd$Main$syncWithRemotePouch(
							function (_) {
								return _.pouchDBRemoteSyncURI;
							}(_p18));
					},
					A2(_jigargosar$elm_simple_gtd$Main$andThenUpdate, _jigargosar$elm_simple_gtd$Model$OnSaveCurrentForm, _p17));
			};
		case 'ToggleShowDeletedEntity':
			return _Fresheyeball$elm_return$Return$map(
				function (m) {
					return _elm_lang$core$Native_Utils.update(
						m,
						{showDeleted: !m.showDeleted});
				});
		case 'ReminderOverlayAction':
			return _jigargosar$elm_simple_gtd$Main$reminderOverlayAction(_p11._0);
		case 'OnDeactivateEditingMode':
			return function (_p19) {
				return A2(
					_jigargosar$elm_simple_gtd$Main$andThenUpdate,
					_jigargosar$elm_simple_gtd$Model$setDomFocusToFocusInEntityCmd,
					A2(_Fresheyeball$elm_return$Return$map, _jigargosar$elm_simple_gtd$Model$deactivateEditingMode, _p19));
			};
		case 'StartEditingContext':
			var _p21 = _p11._0;
			return function (_p20) {
				return A2(
					_Fresheyeball$elm_return$Return$command,
					_jigargosar$elm_simple_gtd$Main$positionContextMenuCmd(_p21),
					A2(
						_Fresheyeball$elm_return$Return$map,
						_jigargosar$elm_simple_gtd$Model$startEditingTodoContext(_p21),
						_p20));
			};
		case 'StartEditingProject':
			var _p23 = _p11._0;
			return function (_p22) {
				return A2(
					_Fresheyeball$elm_return$Return$command,
					_jigargosar$elm_simple_gtd$Main$positionProjectMenuCmd(_p23),
					A2(
						_Fresheyeball$elm_return$Return$map,
						_jigargosar$elm_simple_gtd$Model$startEditingTodoProject(_p23),
						_p22));
			};
		case 'ToggleTodoDone':
			return _Fresheyeball$elm_return$Return$andThen(
				A2(_jigargosar$elm_simple_gtd$Model$updateTodo, _jigargosar$elm_simple_gtd$Todo$ToggleDone, _p11._0));
		case 'SetTodoContext':
			return function (_p24) {
				return A2(
					_jigargosar$elm_simple_gtd$Main$andThenUpdate,
					_jigargosar$elm_simple_gtd$Model$OnDeactivateEditingMode,
					A3(
						_jigargosar$elm_simple_gtd$Main$updateTodoAndMaybeAlsoSelected,
						_jigargosar$elm_simple_gtd$Todo$SetContext(_p11._0),
						_p11._1,
						_p24));
			};
		case 'SetTodoProject':
			return function (_p25) {
				return A2(
					_jigargosar$elm_simple_gtd$Main$andThenUpdate,
					_jigargosar$elm_simple_gtd$Model$OnDeactivateEditingMode,
					A3(
						_jigargosar$elm_simple_gtd$Main$updateTodoAndMaybeAlsoSelected,
						_jigargosar$elm_simple_gtd$Todo$SetProject(_p11._0),
						_p11._1,
						_p25));
			};
		case 'NewTodoTextChanged':
			return _Fresheyeball$elm_return$Return$map(
				A2(_jigargosar$elm_simple_gtd$Model$updateNewTodoText, _p11._0, _p11._1));
		case 'StartEditingReminder':
			var _p27 = _p11._0;
			return function (_p26) {
				return A2(
					_Fresheyeball$elm_return$Return$command,
					_jigargosar$elm_simple_gtd$Main$positionScheduleMenuCmd(_p27),
					A2(
						_Fresheyeball$elm_return$Return$map,
						_jigargosar$elm_simple_gtd$Model$startEditingReminder(_p27),
						_p26));
			};
		case 'UpdateTodoForm':
			return _Fresheyeball$elm_return$Return$map(
				function (_p28) {
					return _jigargosar$elm_simple_gtd$Model$setEditMode(
						_jigargosar$elm_simple_gtd$ExclusiveMode$EditTodo(_p28));
				}(
					A2(_jigargosar$elm_simple_gtd$Todo_Form$set, _p11._1, _p11._0)));
		case 'OnEditTodoProjectMenuStateChanged':
			return function (_p29) {
				return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
					A2(
						_Fresheyeball$elm_return$Return$map,
						function (_p30) {
							return _jigargosar$elm_simple_gtd$Model$setEditMode(
								_jigargosar$elm_simple_gtd$ExclusiveMode$EditTodoProject(_p30));
						}(
							A2(_jigargosar$elm_simple_gtd$Todo_GroupForm$setMenuState, _p11._1, _p11._0)),
						_p29));
			};
		case 'OnEditTodoContextMenuStateChanged':
			return function (_p31) {
				return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
					A2(
						_Fresheyeball$elm_return$Return$map,
						function (_p32) {
							return _jigargosar$elm_simple_gtd$Model$setEditMode(
								_jigargosar$elm_simple_gtd$ExclusiveMode$EditTodoContext(_p32));
						}(
							A2(_jigargosar$elm_simple_gtd$Todo_GroupForm$setMenuState, _p11._1, _p11._0)),
						_p31));
			};
		case 'UpdateRemoteSyncFormUri':
			return _Fresheyeball$elm_return$Return$map(
				function (_p33) {
					return _jigargosar$elm_simple_gtd$Model$setEditMode(
						_jigargosar$elm_simple_gtd$ExclusiveMode$EditSyncSettings(_p33));
				}(
					_elm_lang$core$Native_Utils.update(
						_p11._0,
						{uri: _p11._1})));
		case 'OnSetViewType':
			return _Fresheyeball$elm_return$Return$map(
				_jigargosar$elm_simple_gtd$Model$switchToView(_p11._0));
		case 'OnSetEntityListView':
			return _Fresheyeball$elm_return$Return$map(
				_jigargosar$elm_simple_gtd$Model$setEntityListViewType(_p11._0));
		case 'OnNowChanged':
			return _jigargosar$elm_simple_gtd$Main$onUpdateNow(_p11._0);
		case 'OnKeyboardMsg':
			return function (_p34) {
				return A2(
					_jigargosar$elm_simple_gtd$DomPorts$focusSelectorIfNoFocusCmd,
					'.entity-list .focusable-list-item[tabindex=0]',
					A2(
						_Fresheyeball$elm_return$Return$map,
						_jigargosar$elm_simple_gtd$Model$updateKeyboardState(
							_jigargosar$elm_simple_gtd$X_Keyboard$update(_p11._0)),
						_p34));
			};
		case 'OnSaveCurrentForm':
			return function (_p35) {
				return A2(
					_jigargosar$elm_simple_gtd$Main$andThenUpdate,
					_jigargosar$elm_simple_gtd$Model$OnDeactivateEditingMode,
					A2(_Fresheyeball$elm_return$Return$andThen, _jigargosar$elm_simple_gtd$Model$saveCurrentForm, _p35));
			};
		case 'NewTodo':
			return function (_p36) {
				return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
					A2(_Fresheyeball$elm_return$Return$map, _jigargosar$elm_simple_gtd$Model$activateNewTodoModeWithFocusInEntityAsReference, _p36));
			};
		case 'NewTodoForInbox':
			return function (_p37) {
				return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
					A2(_Fresheyeball$elm_return$Return$map, _jigargosar$elm_simple_gtd$Model$activateNewTodoModeWithInboxAsReference, _p37));
			};
		case 'NewProject':
			return function (_p38) {
				return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
					A2(_Fresheyeball$elm_return$Return$map, _jigargosar$elm_simple_gtd$Model$createAndEditNewProject, _p38));
			};
		case 'NewContext':
			return function (_p39) {
				return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
					A2(_Fresheyeball$elm_return$Return$map, _jigargosar$elm_simple_gtd$Model$createAndEditNewContext, _p39));
			};
		case 'OnEntityAction':
			var _p44 = _p11._0;
			var _p40 = _p11._1;
			switch (_p40.ctor) {
				case 'StartEditing':
					return function (_p41) {
						return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
							A2(
								_Fresheyeball$elm_return$Return$map,
								_jigargosar$elm_simple_gtd$Model$startEditingEntity(_p44),
								_p41));
					};
				case 'NameChanged':
					return _Fresheyeball$elm_return$Return$map(
						A2(_jigargosar$elm_simple_gtd$Model$updateEditModeNameChanged, _p40._0, _p44));
				case 'Save':
					return _jigargosar$elm_simple_gtd$Main$andThenUpdate(_jigargosar$elm_simple_gtd$Model$OnSaveCurrentForm);
				case 'ToggleDeleted':
					return function (_p42) {
						return A2(
							_jigargosar$elm_simple_gtd$Main$andThenUpdate,
							_jigargosar$elm_simple_gtd$Model$OnDeactivateEditingMode,
							A2(
								_Fresheyeball$elm_return$Return$andThen,
								_jigargosar$elm_simple_gtd$Model$toggleDeleteEntity(_p44),
								_p42));
					};
				case 'ToggleArchived':
					return function (_p43) {
						return A2(
							_jigargosar$elm_simple_gtd$Main$andThenUpdate,
							_jigargosar$elm_simple_gtd$Model$OnDeactivateEditingMode,
							A2(
								_Fresheyeball$elm_return$Return$andThen,
								_jigargosar$elm_simple_gtd$Model$toggleArchiveEntity(_p44),
								_p43));
					};
				case 'OnFocusIn':
					return _Fresheyeball$elm_return$Return$map(
						_jigargosar$elm_simple_gtd$Model$setFocusInEntity(_p44));
				case 'ToggleSelected':
					return _Fresheyeball$elm_return$Return$map(
						_jigargosar$elm_simple_gtd$Model$toggleEntitySelection(_p44));
				default:
					return _Fresheyeball$elm_return$Return$map(
						_jigargosar$elm_simple_gtd$Model$switchToEntityListViewFromEntity(_p44));
			}
		case 'OnLaunchBarMsgWithNow':
			var _p49 = _p11._1;
			var _p45 = _p11._0;
			switch (_p45.ctor) {
				case 'OnEnter':
					return function (_p46) {
						return function () {
							var _p47 = _p45._0;
							switch (_p47.ctor) {
								case 'Project':
									return _jigargosar$elm_simple_gtd$Main$map(
										_jigargosar$elm_simple_gtd$Model$switchToProjectView(_p47._0));
								case 'Projects':
									return _jigargosar$elm_simple_gtd$Main$map(
										_jigargosar$elm_simple_gtd$Model$setEntityListViewType(_jigargosar$elm_simple_gtd$Entity$ProjectsView));
								case 'Context':
									return _jigargosar$elm_simple_gtd$Main$map(
										_jigargosar$elm_simple_gtd$Model$switchToContextView(_p47._0));
								default:
									return _jigargosar$elm_simple_gtd$Main$map(
										_jigargosar$elm_simple_gtd$Model$setEntityListViewType(_jigargosar$elm_simple_gtd$Entity$ContextsView));
							}
						}()(
							A2(_jigargosar$elm_simple_gtd$Main$andThenUpdate, _jigargosar$elm_simple_gtd$Model$OnDeactivateEditingMode, _p46));
					};
				case 'OnInputChanged':
					return _jigargosar$elm_simple_gtd$Main$map(
						A3(_jigargosar$elm_simple_gtd$Model$updateLaunchBarInput, _p49, _p45._1, _p45._0));
				default:
					return function (_p48) {
						return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
							A2(
								_jigargosar$elm_simple_gtd$Main$map,
								_jigargosar$elm_simple_gtd$Model$activateLaunchBar(_p49),
								_p48));
					};
			}
		case 'OnLaunchBarMsg':
			return _jigargosar$elm_simple_gtd$Main$withNow(
				_jigargosar$elm_simple_gtd$Model$OnLaunchBarMsgWithNow(_p11._0));
		case 'OnCloseNotification':
			return _jigargosar$elm_simple_gtd$Main$command(
				_jigargosar$elm_simple_gtd$Notification$closeNotification(_p11._0));
		case 'OnGlobalKeyUp':
			return _jigargosar$elm_simple_gtd$Main$onGlobalKeyUp(_p11._0);
		case 'OnKeyCombo':
			return _Fresheyeball$elm_return$Return$andThen(
				_jigargosar$elm_simple_gtd$Model$updateCombo(_p11._0));
		case 'OnTodoMsg':
			return _jigargosar$elm_simple_gtd$Main$withNow(
				_jigargosar$elm_simple_gtd$Model$OnTodoMsgWithTime(_p11._0));
		case 'OnTodoMsgWithTime':
			return A3(_jigargosar$elm_simple_gtd$Todo_Main$update, _jigargosar$elm_simple_gtd$Main$andThenUpdate, _p11._1, _p11._0);
		case 'OnFirebaseMsg':
			return _jigargosar$elm_simple_gtd$Main$withNow(
				_jigargosar$elm_simple_gtd$Model$OnFirebaseMsgWithTime(_p11._0));
		case 'OnFirebaseMsgWithTime':
			return A3(_jigargosar$elm_simple_gtd$Firebase_Main$update, _jigargosar$elm_simple_gtd$Main$andThenUpdate, _p11._1, _p11._0);
		case 'OnAppDrawerMsg':
			return A2(_jigargosar$elm_simple_gtd$AppDrawer_Main$update, _jigargosar$elm_simple_gtd$Main$andThenUpdate, _p11._0);
		default:
			return _Fresheyeball$elm_return$Return$effect_(
				function (_p50) {
					return _jigargosar$elm_simple_gtd$Main$persistLocalPref(
						_jigargosar$elm_simple_gtd$Model$encodeLocalPref(_p50));
				});
	}
};
var _jigargosar$elm_simple_gtd$Main$andThenTodoMsg = function (_p51) {
	return _jigargosar$elm_simple_gtd$Main$andThenUpdate(
		_jigargosar$elm_simple_gtd$Model$OnTodoMsg(_p51));
};
var _jigargosar$elm_simple_gtd$Main$andThenUpdate = function (_p52) {
	return _Fresheyeball$elm_return$Return$andThen(
		_jigargosar$elm_simple_gtd$Main$update(_p52));
};
var _jigargosar$elm_simple_gtd$Main$update = function (msg) {
	return function (_p53) {
		return A2(
			_Fresheyeball$elm_return$Return$map,
			_jigargosar$elm_simple_gtd$Main$logMsg(msg),
			A2(
				_jigargosar$elm_simple_gtd$Main$updateInner,
				msg,
				_Fresheyeball$elm_return$Return$singleton(_p53)));
	};
};
var _jigargosar$elm_simple_gtd$Main$onGlobalKeyUp = function (key) {
	return A2(
		_jigargosar$elm_simple_gtd$X_Return$with,
		_jigargosar$elm_simple_gtd$Model$getEditMode,
		function (editMode) {
			var _p54 = {ctor: '_Tuple2', _0: key, _1: editMode};
			_v9_2:
			do {
				if (_p54.ctor === '_Tuple2') {
					if (_p54._1.ctor === 'None') {
						var _p55 = _p54._0;
						switch (_p55.ctor) {
							case 'Escape':
								return _Fresheyeball$elm_return$Return$map(_jigargosar$elm_simple_gtd$Model$clearSelection);
							case 'CharQ':
								return _jigargosar$elm_simple_gtd$Main$andThenUpdate(_jigargosar$elm_simple_gtd$Model$NewTodo);
							case 'CharI':
								return _jigargosar$elm_simple_gtd$Main$andThenUpdate(_jigargosar$elm_simple_gtd$Model$NewTodoForInbox);
							case 'Slash':
								return _jigargosar$elm_simple_gtd$Main$andThenUpdate(
									_jigargosar$elm_simple_gtd$Model$OnLaunchBarMsg(_jigargosar$elm_simple_gtd$LaunchBar$Open));
							default:
								return _elm_lang$core$Basics$identity;
						}
					} else {
						if (_p54._0.ctor === 'Escape') {
							return _jigargosar$elm_simple_gtd$Main$andThenUpdate(_jigargosar$elm_simple_gtd$Model$OnDeactivateEditingMode);
						} else {
							break _v9_2;
						}
					}
				} else {
					break _v9_2;
				}
			} while(false);
			return _elm_lang$core$Basics$identity;
		});
};
var _jigargosar$elm_simple_gtd$Main$main = _rgrempel$elm_route_url$RouteUrl$programWithFlags(
	{delta2url: _jigargosar$elm_simple_gtd$Routes$delta2hash, location2messages: _jigargosar$elm_simple_gtd$Routes$hash2messages, init: _jigargosar$elm_simple_gtd$Model$init, update: _jigargosar$elm_simple_gtd$Main$update, view: _jigargosar$elm_simple_gtd$View$init, subscriptions: _jigargosar$elm_simple_gtd$Main$subscriptions})(
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (appVersion) {
			return A2(
				_elm_lang$core$Json_Decode$andThen,
				function (config) {
					return A2(
						_elm_lang$core$Json_Decode$andThen,
						function (developmentMode) {
							return A2(
								_elm_lang$core$Json_Decode$andThen,
								function (deviceId) {
									return A2(
										_elm_lang$core$Json_Decode$andThen,
										function (encodedContextList) {
											return A2(
												_elm_lang$core$Json_Decode$andThen,
												function (encodedProjectList) {
													return A2(
														_elm_lang$core$Json_Decode$andThen,
														function (encodedTodoList) {
															return A2(
																_elm_lang$core$Json_Decode$andThen,
																function (localPref) {
																	return A2(
																		_elm_lang$core$Json_Decode$andThen,
																		function (now) {
																			return A2(
																				_elm_lang$core$Json_Decode$andThen,
																				function (pouchDBRemoteSyncURI) {
																					return _elm_lang$core$Json_Decode$succeed(
																						{appVersion: appVersion, config: config, developmentMode: developmentMode, deviceId: deviceId, encodedContextList: encodedContextList, encodedProjectList: encodedProjectList, encodedTodoList: encodedTodoList, localPref: localPref, now: now, pouchDBRemoteSyncURI: pouchDBRemoteSyncURI});
																				},
																				A2(_elm_lang$core$Json_Decode$field, 'pouchDBRemoteSyncURI', _elm_lang$core$Json_Decode$string));
																		},
																		A2(_elm_lang$core$Json_Decode$field, 'now', _elm_lang$core$Json_Decode$float));
																},
																A2(_elm_lang$core$Json_Decode$field, 'localPref', _elm_lang$core$Json_Decode$value));
														},
														A2(
															_elm_lang$core$Json_Decode$field,
															'encodedTodoList',
															_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$value)));
												},
												A2(
													_elm_lang$core$Json_Decode$field,
													'encodedProjectList',
													_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$value)));
										},
										A2(
											_elm_lang$core$Json_Decode$field,
											'encodedContextList',
											_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$value)));
								},
								A2(_elm_lang$core$Json_Decode$field, 'deviceId', _elm_lang$core$Json_Decode$string));
						},
						A2(_elm_lang$core$Json_Decode$field, 'developmentMode', _elm_lang$core$Json_Decode$bool));
				},
				A2(
					_elm_lang$core$Json_Decode$field,
					'config',
					A2(
						_elm_lang$core$Json_Decode$andThen,
						function (isFirstVisit) {
							return _elm_lang$core$Json_Decode$succeed(
								{isFirstVisit: isFirstVisit});
						},
						A2(_elm_lang$core$Json_Decode$field, 'isFirstVisit', _elm_lang$core$Json_Decode$bool))));
		},
		A2(_elm_lang$core$Json_Decode$field, 'appVersion', _elm_lang$core$Json_Decode$string)));
