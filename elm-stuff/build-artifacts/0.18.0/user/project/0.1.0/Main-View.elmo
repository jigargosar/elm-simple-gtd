var _user$project$Main_View$projectDropdown = function (model) {
	var createListItem = F2(
		function (onItemClick, project) {
			return A2(
				_edvail$elm_polymer$Polymer_Paper$item,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						onItemClick(project)),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: function (_p0) {
						return _elm_lang$html$Html$text(
							_user$project$Project$getName(_p0));
					}(project),
					_1: {ctor: '[]'}
				});
		});
	var view = function (todo) {
		var onItemClick = A2(_danielnarey$elm_toolkit$Toolkit_Operators_ops['#'], _user$project$Msg$SetTodoProject, todo);
		return A2(
			_edvail$elm_polymer$Polymer_Paper$material,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$id('project-dropdown'),
				_1: {
					ctor: '::',
					_0: A2(_elm_lang$html$Html_Attributes$attribute, 'data-prevent-default-keys', 'Tab'),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_edvail$elm_polymer$Polymer_Paper$listbox,
					{ctor: '[]'},
					A2(
						_danielnarey$elm_toolkit$Toolkit_Operators_ops['.|>'],
						_user$project$Model$getActiveProjects(model),
						createListItem(onItemClick))),
				_1: {ctor: '[]'}
			});
	};
	return _elm_community$maybe_extra$Maybe_Extra$toList(
		A2(
			_danielnarey$elm_toolkit$Toolkit_Operators_ops['?|>'],
			_user$project$Model$getMaybeEditTodoProjectForm(model),
			view));
};
var _user$project$Main_View$contextDropdown = function (model) {
	var createListItem = F2(
		function (onItemClick, context) {
			return A2(
				_edvail$elm_polymer$Polymer_Paper$item,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						onItemClick(context)),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: function (_p1) {
						return _elm_lang$html$Html$text(
							_user$project$Context$getName(_p1));
					}(context),
					_1: {ctor: '[]'}
				});
		});
	var view = function (todo) {
		var onItemClick = A2(_danielnarey$elm_toolkit$Toolkit_Operators_ops['#'], _user$project$Msg$SetTodoContext, todo);
		return A2(
			_edvail$elm_polymer$Polymer_Paper$material,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$id('context-dropdown'),
				_1: {
					ctor: '::',
					_0: A2(_elm_lang$html$Html_Attributes$attribute, 'data-prevent-default-keys', 'Tab'),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_edvail$elm_polymer$Polymer_Paper$listbox,
					{ctor: '[]'},
					A2(
						_danielnarey$elm_toolkit$Toolkit_Operators_ops['.|>'],
						_user$project$Model$getActiveContexts(model),
						createListItem(onItemClick))),
				_1: {ctor: '[]'}
			});
	};
	return _elm_community$maybe_extra$Maybe_Extra$toList(
		A2(
			_danielnarey$elm_toolkit$Toolkit_Operators_ops['?|>'],
			_user$project$Model$getMaybeEditTodoContextForm(model),
			view));
};
var _user$project$Main_View$overlayViews = function (m) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_user$project$Main_View$contextDropdown(m),
		_user$project$Main_View$projectDropdown(m));
};
var _user$project$Main_View$init = F2(
	function (viewModel, model) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$id('main-view'),
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: function () {
						var _p2 = _user$project$Model$getMainViewType(model);
						switch (_p2.ctor) {
							case 'EntityListView':
								return A2(_danielnarey$elm_toolkit$Toolkit_Operators_ops['#'], _user$project$View_TodoList$listView, viewModel)(
									A2(_user$project$Model$createViewEntityList, _p2._0, model));
							case 'BinView':
								return A2(_user$project$View_TodoList$filtered, viewModel, model);
							case 'DoneView':
								return A2(_user$project$View_TodoList$filtered, viewModel, model);
							default:
								var form = _user$project$Model$getRemoteSyncForm(model);
								return A2(
									_edvail$elm_polymer$Polymer_Paper$material,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('static layout vertical'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A2(
											_edvail$elm_polymer$Polymer_Paper$input,
											{
												ctor: '::',
												_0: A2(_elm_lang$html$Html_Attributes$attribute, 'label', 'Cloudant URL or any CouchDB URL'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$value(form.uri),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Events$onInput(
															_user$project$Msg$UpdateRemoteSyncFormUri(form)),
														_1: {ctor: '[]'}
													}
												}
											},
											{ctor: '[]'}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$div,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: A2(
														_edvail$elm_polymer$Polymer_Paper$button,
														{
															ctor: '::',
															_0: function (_p3) {
																return _elm_lang$html$Html_Events$onClick(
																	_user$project$Msg$RemotePouchSync(_p3));
															}(form),
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text('Start Sync'),
															_1: {ctor: '[]'}
														}),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										}
									});
						}
					}(),
					_1: {ctor: '[]'}
				},
				_user$project$Main_View$overlayViews(model)));
	});
