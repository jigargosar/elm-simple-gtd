var _gdotdesign$elm_ui$Html_Events_Extra$keysDecoder = function (mappings) {
	var dict = _elm_lang$core$Dict$fromList(mappings);
	var decode = function (value) {
		return A2(
			_elm_lang$core$Maybe$withDefault,
			_elm_lang$core$Json_Decode$fail('Key pressed not was no in mappings!'),
			A2(
				_elm_lang$core$Maybe$map,
				_elm_lang$core$Json_Decode$succeed,
				A2(_elm_lang$core$Dict$get, value, dict)));
	};
	return A2(_elm_lang$core$Json_Decode$andThen, decode, _elm_lang$html$Html_Events$keyCode);
};
var _gdotdesign$elm_ui$Html_Events_Extra$onError = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'error',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _gdotdesign$elm_ui$Html_Events_Extra$onLoad = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'load',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _gdotdesign$elm_ui$Html_Events_Extra$onKeys = F2(
	function (shouldPreventDefault, mappings) {
		var options = shouldPreventDefault ? _gdotdesign$elm_ui$Html_Events_Options$preventDefaultOptions : _elm_lang$html$Html_Events$defaultOptions;
		return A3(
			_elm_lang$html$Html_Events$onWithOptions,
			'keydown',
			options,
			_gdotdesign$elm_ui$Html_Events_Extra$keysDecoder(mappings));
	});
var _gdotdesign$elm_ui$Html_Events_Extra$onTransitionEnd = function (decoder) {
	return A2(_elm_lang$html$Html_Events$on, 'transitionend', decoder);
};
var _gdotdesign$elm_ui$Html_Events_Extra$onScroll = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'scroll',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _gdotdesign$elm_ui$Html_Events_Extra$onPreventDefault = F2(
	function (event, msg) {
		return A3(
			_elm_lang$html$Html_Events$onWithOptions,
			event,
			_gdotdesign$elm_ui$Html_Events_Options$preventDefaultOptions,
			_elm_lang$core$Json_Decode$succeed(msg));
	});
var _gdotdesign$elm_ui$Html_Events_Extra$onEnterPreventDefault = function (action) {
	var mappings = {
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 13, _1: action},
		_1: {ctor: '[]'}
	};
	return A3(
		_elm_lang$html$Html_Events$onWithOptions,
		'keydown',
		_gdotdesign$elm_ui$Html_Events_Options$preventDefaultOptions,
		_gdotdesign$elm_ui$Html_Events_Extra$keysDecoder(mappings));
};
var _gdotdesign$elm_ui$Html_Events_Extra$onEnter = F2(
	function (control, msg) {
		var decoder2 = function (pressed) {
			return pressed ? _gdotdesign$elm_ui$Html_Events_Extra$keysDecoder(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 13, _1: msg},
					_1: {ctor: '[]'}
				}) : _elm_lang$core$Json_Decode$fail('Control wasn\'t pressed!');
		};
		var decoder = control ? A2(
			_elm_lang$core$Json_Decode$andThen,
			decoder2,
			A2(_elm_lang$core$Json_Decode$field, 'ctrlKey', _elm_lang$core$Json_Decode$bool)) : decoder2(true);
		return A3(_elm_lang$html$Html_Events$onWithOptions, 'keyup', _gdotdesign$elm_ui$Html_Events_Options$stopOptions, decoder);
	});
var _gdotdesign$elm_ui$Html_Events_Extra$onFocusOut = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'focusout',
		_elm_lang$core$Json_Decode$succeed(msg));
};
var _gdotdesign$elm_ui$Html_Events_Extra$onWheel = F2(
	function (decoder, action) {
		return A2(
			_elm_lang$html$Html_Events$on,
			'wheel',
			A2(_elm_lang$core$Json_Decode$map, action, decoder));
	});
var _gdotdesign$elm_ui$Html_Events_Extra$decodeDelta = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'deltaY',
		_1: {ctor: '[]'}
	},
	_elm_lang$core$Json_Decode$float);
var _gdotdesign$elm_ui$Html_Events_Extra$unobtrusiveClick = function (msg) {
	var result = function (_p0) {
		var _p1 = _p0;
		return (_p1._0 || _elm_lang$core$Native_Utils.eq(_p1._1, 1)) ? _elm_lang$core$Json_Decode$fail('Control key or middle mouse button is pressed!') : _elm_lang$core$Json_Decode$succeed(msg);
	};
	var decoder = A2(
		_elm_lang$core$Json_Decode$andThen,
		result,
		A3(
			_elm_lang$core$Json_Decode$map2,
			F2(
				function (v0, v1) {
					return {ctor: '_Tuple2', _0: v0, _1: v1};
				}),
			A2(_elm_lang$core$Json_Decode$field, 'ctrlKey', _elm_lang$core$Json_Decode$bool),
			A2(_elm_lang$core$Json_Decode$field, 'button', _elm_lang$core$Json_Decode$int)));
	return A3(_elm_lang$html$Html_Events$onWithOptions, 'click', _gdotdesign$elm_ui$Html_Events_Options$stopOptions, decoder);
};
