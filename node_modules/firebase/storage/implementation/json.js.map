{"version":3,"sources":["src/storage/implementation/json.ts"],"names":["jsonObjectOrNull","type","s","obj","JSON","parse","e","isNonArrayObject"],"mappings":";;;;;QAqBMA,gB,GAAAA,gB;;AANN;;IAAYC,I;;;;AAEZ;;;;AAIM,SAAAD,gBAAA,CAA2BE,CAA3B,EAAoC;AACxC,QAAIC,YAAJ;AACA,QAAI;AACFA,cAAMC,KAAKC,KAAL,CAAWH,CAAX,CAAN;AACD,KAFD,CAEE,OAAOI,CAAP,EAAU;AACV,eAAO,IAAP;AACD;AACD,QAAIL,KAAKM,gBAAL,CAAsBJ,GAAtB,CAAJ,EAAgC;AAC9B,eAAOA,GAAP;AACD,KAFD,MAEO;AACL,eAAO,IAAP;AACD;AACF,C,CAjCD","file":"json.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nimport * as type from './type';\n\n/**\n * Returns the Object resulting from parsing the given JSON, or null if the\n * given string does not represent a JSON object.\n */\nexport function jsonObjectOrNull(s: string): {[name: string]: any}|null {\n  let obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (type.isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n"]}