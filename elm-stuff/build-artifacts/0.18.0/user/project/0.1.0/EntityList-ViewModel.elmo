var _user$project$EntityList_ViewModel$isEntityFocusedInEntityList = F2(
	function (entityList, viewModel) {
		var focusedId = A2(
			_danielnarey$elm_toolkit$Toolkit_Operators_ops['?='],
			A2(
				_danielnarey$elm_toolkit$Toolkit_Operators_ops['?|>'],
				A2(
					_elm_community$maybe_extra$Maybe_Extra$orElse,
					_elm_lang$core$List$head(entityList),
					A2(
						_elm_community$list_extra$List_Extra$find,
						function (_p0) {
							return A2(
								_user$project$Ext_Function$equals,
								viewModel.focusedEntityInfo.id,
								_user$project$Model$getEntityId(_p0));
						},
						entityList)),
				_user$project$Model$getEntityId),
			'');
		return function (_p1) {
			return A2(
				_user$project$Ext_Function$equals,
				focusedId,
				_user$project$Model$getEntityId(_p1));
		};
	});
var _user$project$EntityList_ViewModel$getTabindexAV = function (focused) {
	var tabindexValue = focused ? 0 : -1;
	return _elm_lang$html$Html_Attributes$tabindex(tabindexValue);
};
var _user$project$EntityList_ViewModel$list = F3(
	function (viewType, appViewModel, model) {
		var entityList = A2(_user$project$Model$createViewEntityList, viewType, model);
		var isFocused = A2(_user$project$EntityList_ViewModel$isEntityFocusedInEntityList, entityList, appViewModel);
		var create = function (entity) {
			var tabIndexAV = _user$project$EntityList_ViewModel$getTabindexAV(
				isFocused(entity));
			var _p2 = entity;
			switch (_p2.ctor) {
				case 'ContextEntity':
					return A3(
						_user$project$GroupEntity_View$initKeyed,
						tabIndexAV,
						appViewModel,
						_user$project$EntityList$createContextGroupViewModel(_p2._0));
				case 'ProjectEntity':
					return A3(
						_user$project$GroupEntity_View$initKeyed,
						tabIndexAV,
						appViewModel,
						_user$project$EntityList$createProjectGroupViewModel(_p2._0));
				default:
					return _user$project$Todo_View$initKeyed(
						A2(appViewModel.createTodoViewModel, tabIndexAV, _p2._0));
			}
		};
		return {ctor: '[]'};
	});
var _user$project$EntityList_ViewModel$EntityViewModel = F8(
	function (a, b, c, d, e, f, g, h) {
		return {id: a, onFocusIn: b, onFocus: c, onBlur: d, startEditingMsg: e, toggleDeleteMsg: f, startEditingMsg: g, tabIndexAV: h};
	});
var _user$project$EntityList_ViewModel$Todo = function (a) {
	return {ctor: 'Todo', _0: a};
};
var _user$project$EntityList_ViewModel$Group = function (a) {
	return {ctor: 'Group', _0: a};
};
