{"version":3,"sources":["src/storage/implementation/constants.ts"],"names":["setDomainBase","domainBase","downloadBase","apiBaseUrl","apiUploadBaseUrl","configOption","shortMaxOperationRetryTime","defaultMaxOperationRetryTime","defaultMaxUploadRetryTime","minSafeInteger"],"mappings":";;;;;QAuCMA,a,GAAAA,a;AAvCN;;;;;;;;;;;;;;;AAeA;;;AAIA;;;AAnBA;;;;;;;;;;;;;;EAsBO,IAAMC,kCAAqB,wCAA3B;AAEP;;;AAGO,IAAMC,sCAAuB,wCAA7B;AAEP;;;AAGO,IAAMC,kCAAqB,KAA3B;AAEP;;;AAGO,IAAMC,8CAA2B,KAAjC;AAED,SAAAJ,aAAA,CAAwBC,UAAxB,EAA0C;AAC9CA,eAAaA,UAAb;AACD;AAEM,IAAMI,sCAAuB,eAA7B;AAEP;;;AAGO,IAAMC,kEAAqC,IAAI,EAAJ,GAAS,IAApD;AAEP;;;AAGO,IAAMC,sEAAuC,IAAI,EAAJ,GAAS,IAAtD;AAEP;;;AAGO,IAAMC,gEAAoC,KAAK,EAAL,GAAU,GAApD;AAEP;;;;AAIO,IAAMC,0CAAyB,CAAC,gBAAhC","file":"constants.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * @fileoverview Constants used in the Firebase Storage library.\n */\n\n/**\n * Domain and scheme for API calls.\n */\nexport const domainBase: string = 'https://firebasestorage.googleapis.com';\n\n/**\n * Domain and scheme for object downloads.\n */\nexport const downloadBase: string = 'https://firebasestorage.googleapis.com';\n\n/**\n * Base URL for non-upload calls to the API.\n */\nexport const apiBaseUrl: string = '/v0';\n\n/**\n * Base URL for upload calls to the API.\n */\nexport const apiUploadBaseUrl: string = '/v0';\n\nexport function setDomainBase(domainBase: string) {\n  domainBase = domainBase;\n}\n\nexport const configOption: string = 'storageBucket';\n\n/**\n * 1 minute\n */\nexport const shortMaxOperationRetryTime: number = 1 * 60 * 1000;\n\n/**\n * 2 minutes\n */\nexport const defaultMaxOperationRetryTime: number = 2 * 60 * 1000;\n\n/**\n * 10 minutes\n */\nexport const defaultMaxUploadRetryTime: number = 10 * 60 * 100;\n\n/**\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to use it directly.\n */\nexport const minSafeInteger: number = -9007199254740991;\n"]}