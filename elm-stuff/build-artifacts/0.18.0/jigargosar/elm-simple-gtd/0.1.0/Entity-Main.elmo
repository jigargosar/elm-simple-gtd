var _jigargosar$elm_simple_gtd$Entity_Main$startEditingEntity = F2(
	function (entity, model) {
		return A2(
			_jigargosar$elm_simple_gtd$Model_ExMode$setEditMode,
			_jigargosar$elm_simple_gtd$ExclusiveMode$createEntityEditForm(entity),
			model);
	});
var _jigargosar$elm_simple_gtd$Entity_Main$setEditMode = _jigargosar$elm_simple_gtd$Model_ExMode$setEditMode;
var _jigargosar$elm_simple_gtd$Entity_Main$updateEditModeNameChanged = F3(
	function (newName, entity, model) {
		return function () {
			var _p0 = model.editMode;
			switch (_p0.ctor) {
				case 'XMEditContext':
					return _jigargosar$elm_simple_gtd$Entity_Main$setEditMode(
						A2(_jigargosar$elm_simple_gtd$ExclusiveMode$editContextSetName, newName, _p0._0));
				case 'XMEditProject':
					return _jigargosar$elm_simple_gtd$Entity_Main$setEditMode(
						A2(_jigargosar$elm_simple_gtd$ExclusiveMode$editProjectSetName, newName, _p0._0));
				default:
					return _elm_lang$core$Basics$identity;
			}
		}()(model);
	});
var _jigargosar$elm_simple_gtd$Entity_Main$createAndEditNewContext = function (model) {
	return function (_p1) {
		var _p2 = _p1;
		return A2(
			_jigargosar$elm_simple_gtd$Entity_Main$startEditingEntity,
			_jigargosar$elm_simple_gtd$Entity_Types$createContextEntity(_p2._0),
			_p2._1);
	}(
		A2(
			_Fresheyeball$elm_tuple_extra$Tuple2$mapSecond,
			A2(_danielnarey$elm_toolkit$Toolkit_Operators_ops['#'], _jigargosar$elm_simple_gtd$Stores$setContextStore, model),
			A2(
				_jigargosar$elm_simple_gtd$Store$insert,
				A2(_jigargosar$elm_simple_gtd$Context$init, '<New Context>', model.now),
				model.contextStore)));
};
var _jigargosar$elm_simple_gtd$Entity_Main$createAndEditNewProject = function (model) {
	return function (_p3) {
		var _p4 = _p3;
		return A2(
			_jigargosar$elm_simple_gtd$Entity_Main$startEditingEntity,
			_jigargosar$elm_simple_gtd$Entity_Types$createProjectEntity(_p4._0),
			_p4._1);
	}(
		A2(
			_Fresheyeball$elm_tuple_extra$Tuple2$mapSecond,
			A2(_danielnarey$elm_toolkit$Toolkit_Operators_ops['#'], _jigargosar$elm_simple_gtd$Stores$setProjectStore, model),
			A2(
				_jigargosar$elm_simple_gtd$Store$insert,
				A2(_jigargosar$elm_simple_gtd$Project$init, '<New Project>', model.now),
				model.projectStore)));
};
var _jigargosar$elm_simple_gtd$Entity_Main$toggleDeleteEntity = F2(
	function (entity, model) {
		var entityId = _jigargosar$elm_simple_gtd$Entity$getId(entity);
		return function () {
			var _p5 = entity;
			if (_p5.ctor === 'GroupEntity') {
				var _p6 = _p5._0;
				if (_p6.ctor === 'ContextEntity') {
					return A2(_jigargosar$elm_simple_gtd$Stores$updateContext, entityId, _jigargosar$elm_simple_gtd$Document$toggleDeleted);
				} else {
					return A2(_jigargosar$elm_simple_gtd$Stores$updateProject, entityId, _jigargosar$elm_simple_gtd$Document$toggleDeleted);
				}
			} else {
				return A2(_jigargosar$elm_simple_gtd$Stores$updateTodo, _jigargosar$elm_simple_gtd$Todo_Types$TA_ToggleDeleted, entityId);
			}
		}()(model);
	});
var _jigargosar$elm_simple_gtd$Entity_Main$switchToEntityListViewFromEntity = F2(
	function (entity, model) {
		var maybeEntityListViewType = _jigargosar$elm_simple_gtd$Model_ViewType$maybeGetCurrentEntityListViewType(model);
		return A2(_danielnarey$elm_toolkit$Toolkit_Operators_ops['#'], _jigargosar$elm_simple_gtd$Model_ViewType$setEntityListViewType, model)(
			A2(_jigargosar$elm_simple_gtd$Entity$toViewType, maybeEntityListViewType, entity));
	});
var _jigargosar$elm_simple_gtd$Entity_Main$toggleSetMember = F2(
	function (item, set) {
		return A2(_elm_lang$core$Set$member, item, set) ? A2(_elm_lang$core$Set$remove, item, set) : A2(_elm_lang$core$Set$insert, item, set);
	});
var _jigargosar$elm_simple_gtd$Entity_Main$toggleEntitySelection = function (entity) {
	return _jigargosar$elm_simple_gtd$Model_Selection$updateSelectedEntityIdSet(
		_jigargosar$elm_simple_gtd$Entity_Main$toggleSetMember(
			_jigargosar$elm_simple_gtd$Entity$getId(entity)));
};
var _jigargosar$elm_simple_gtd$Entity_Main$onUpdate = F3(
	function (andThenUpdate, entity, msg) {
		var _p7 = msg;
		switch (_p7.ctor) {
			case 'OnStartEditing':
				return function (_p8) {
					return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
						A2(
							_Fresheyeball$elm_return$Return$map,
							_jigargosar$elm_simple_gtd$Entity_Main$startEditingEntity(entity),
							_p8));
				};
			case 'OnNameChanged':
				return _Fresheyeball$elm_return$Return$map(
					A2(_jigargosar$elm_simple_gtd$Entity_Main$updateEditModeNameChanged, _p7._0, entity));
			case 'OnSave':
				return andThenUpdate(_jigargosar$elm_simple_gtd$Msg$OnSaveCurrentForm);
			case 'OnToggleDeleted':
				return function (_p9) {
					return A2(
						andThenUpdate,
						_jigargosar$elm_simple_gtd$Msg$OnDeactivateEditingMode,
						A2(
							_Fresheyeball$elm_return$Return$andThen,
							_jigargosar$elm_simple_gtd$Entity_Main$toggleDeleteEntity(entity),
							_p9));
				};
			case 'OnToggleArchived':
				var toggleArchivedEntity = function (entity) {
					var entityId = _jigargosar$elm_simple_gtd$Entity$getId(entity);
					var _p10 = entity;
					if (_p10.ctor === 'GroupEntity') {
						return _Fresheyeball$elm_return$Return$andThen(
							function () {
								var _p11 = _p10._0;
								if (_p11.ctor === 'ContextEntity') {
									return A2(_jigargosar$elm_simple_gtd$Stores$updateContext, entityId, _jigargosar$elm_simple_gtd$GroupDoc$toggleArchived);
								} else {
									return A2(_jigargosar$elm_simple_gtd$Stores$updateProject, entityId, _jigargosar$elm_simple_gtd$GroupDoc$toggleArchived);
								}
							}());
					} else {
						return andThenUpdate(
							_jigargosar$elm_simple_gtd$Msg$OnTodoMsg(
								A2(_jigargosar$elm_simple_gtd$Todo_Msg$OnUpdateTodoAndMaybeSelectedAndDeactivateEditingMode, entityId, _jigargosar$elm_simple_gtd$Todo_Types$TA_ToggleDone)));
					}
				};
				return function (_p12) {
					return A2(
						andThenUpdate,
						_jigargosar$elm_simple_gtd$Msg$OnDeactivateEditingMode,
						A2(toggleArchivedEntity, entity, _p12));
				};
			case 'OnOnFocusIn':
				return _Fresheyeball$elm_return$Return$map(
					_jigargosar$elm_simple_gtd$Stores$setFocusInEntity(entity));
			case 'OnToggleSelected':
				return _Fresheyeball$elm_return$Return$map(
					_jigargosar$elm_simple_gtd$Entity_Main$toggleEntitySelection(entity));
			default:
				return _Fresheyeball$elm_return$Return$map(
					_jigargosar$elm_simple_gtd$Entity_Main$switchToEntityListViewFromEntity(entity));
		}
	});
var _jigargosar$elm_simple_gtd$Entity_Main$map = _Fresheyeball$elm_return$Return$map;
var _jigargosar$elm_simple_gtd$Entity_Main$update = F2(
	function (andThenUpdate, msg) {
		var _p13 = msg;
		switch (_p13.ctor) {
			case 'OnNewProject':
				return function (_p14) {
					return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
						A2(_jigargosar$elm_simple_gtd$Entity_Main$map, _jigargosar$elm_simple_gtd$Entity_Main$createAndEditNewProject, _p14));
				};
			case 'OnNewContext':
				return function (_p15) {
					return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
						A2(_jigargosar$elm_simple_gtd$Entity_Main$map, _jigargosar$elm_simple_gtd$Entity_Main$createAndEditNewContext, _p15));
				};
			default:
				return A3(_jigargosar$elm_simple_gtd$Entity_Main$onUpdate, andThenUpdate, _p13._0, _p13._1);
		}
	});
