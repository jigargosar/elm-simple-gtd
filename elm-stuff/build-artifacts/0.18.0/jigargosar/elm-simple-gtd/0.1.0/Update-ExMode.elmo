var _jigargosar$elm_simple_gtd$Update_ExMode$inboxEntity = _jigargosar$elm_simple_gtd$Entity_Types$createContextEntity(_jigargosar$elm_simple_gtd$Context$null);
var _jigargosar$elm_simple_gtd$Update_ExMode$saveNewTodoForm = F2(
	function (form, model) {
		return A2(
			_elm_lang$core$Basics$uncurry,
			function (todoId) {
				var referenceEntity = function () {
					var _p0 = form.atfMode;
					switch (_p0.ctor) {
						case 'ATFM_AddToInbox':
							return _jigargosar$elm_simple_gtd$Update_ExMode$inboxEntity;
						case 'ATFM_SetupFirstTodo':
							return _jigargosar$elm_simple_gtd$Update_ExMode$inboxEntity;
						default:
							return model.focusInEntity;
					}
				}();
				return function (_p1) {
					return A2(
						_Fresheyeball$elm_return$Return$map,
						_jigargosar$elm_simple_gtd$Stores$setFocusInEntityFromTodoId(todoId),
						A3(
							_jigargosar$elm_simple_gtd$Stores$updateTodo,
							function () {
								var _p2 = referenceEntity;
								if (_p2.ctor === 'TodoEntity') {
									return _jigargosar$elm_simple_gtd$Todo_Types$TA_CopyProjectAndContextId(_p2._0);
								} else {
									var _p3 = _p2._0;
									if (_p3.ctor === 'ContextEntity') {
										return _jigargosar$elm_simple_gtd$Todo_Types$TA_SetContext(_p3._0);
									} else {
										return _jigargosar$elm_simple_gtd$Todo_Types$TA_SetProject(_p3._0);
									}
								}
							}(),
							todoId,
							_p1));
				};
			},
			A2(
				_elm_lang$core$Tuple$mapFirst,
				_jigargosar$elm_simple_gtd$Document_Types$getDocId,
				A2(
					_jigargosar$elm_simple_gtd$Stores$insertTodo,
					A2(_jigargosar$elm_simple_gtd$Todo$init, model.now, form.text),
					model)));
	});
var _jigargosar$elm_simple_gtd$Update_ExMode$saveCurrentForm = function (model) {
	var _p4 = model.editMode;
	switch (_p4.ctor) {
		case 'XMEditContext':
			var _p5 = _p4._0;
			return A3(
				_jigargosar$elm_simple_gtd$Stores$updateContext,
				_p5.id,
				_jigargosar$elm_simple_gtd$Context$setName(_p5.name),
				model);
		case 'XMEditProject':
			var _p6 = _p4._0;
			return A3(
				_jigargosar$elm_simple_gtd$Stores$updateProject,
				_p6.id,
				_jigargosar$elm_simple_gtd$Project$setName(_p6.name),
				model);
		case 'XMTodo':
			var _p7 = _p4._0;
			switch (_p7.ctor) {
				case 'EditTodoForm':
					var _p9 = _p7._0;
					var updateTodo = function (action) {
						return A3(_jigargosar$elm_simple_gtd$Stores$updateTodo, action, _p9.id, model);
					};
					var _p8 = _p9.etfMode;
					switch (_p8.ctor) {
						case 'ETFM_EditTodoText':
							return updateTodo(
								_jigargosar$elm_simple_gtd$Todo_Types$TA_SetText(_p9.text));
						case 'ETFM_EditTodoReminder':
							return updateTodo(
								_jigargosar$elm_simple_gtd$Todo_Types$TA_SetScheduleFromMaybeTime(
									_jigargosar$elm_simple_gtd$Todo_Form$computeMaybeTime(_p9)));
						default:
							return _Fresheyeball$elm_return$Return$singleton(model);
					}
				case 'NoTodoForm':
					return _Fresheyeball$elm_return$Return$singleton(model);
				default:
					return A2(_jigargosar$elm_simple_gtd$Update_ExMode$saveNewTodoForm, _p7._0, model);
			}
		case 'XMNewTodo':
			return A2(_jigargosar$elm_simple_gtd$Update_ExMode$saveNewTodoForm, _p4._0, model);
		case 'XMEditSyncSettings':
			return _Fresheyeball$elm_return$Return$singleton(
				_elm_lang$core$Native_Utils.update(
					model,
					{pouchDBRemoteSyncURI: _p4._0.uri}));
		case 'XMSetup':
			return A2(_jigargosar$elm_simple_gtd$Update_ExMode$saveNewTodoForm, _p4._0, model);
		default:
			return _Fresheyeball$elm_return$Return$singleton(model);
	}
};
