var _user$project$View$addTodoFab = function (m) {
	return A2(
		_edvail$elm_polymer$Polymer_Paper$fab,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$id('add-fab'),
			_1: {
				ctor: '::',
				_0: A2(_elm_lang$html$Html_Attributes$attribute, 'icon', 'add'),
				_1: {
					ctor: '::',
					_0: A2(_elm_lang$html$Html_Attributes$attribute, 'mini', ''),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$Model$NewTodo),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$tabindex(-1),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		},
		{ctor: '[]'});
};
var _user$project$View$appDrawerLayoutView = function (m) {
	var forceNarrow = _user$project$Model$getLayoutForceNarrow(m);
	var viewModel = _user$project$ViewModel$create(m);
	return A2(
		_edvail$elm_polymer$Polymer_App$drawerLayout,
		{
			ctor: '::',
			_0: A2(_elm_community$html_extra$Html_Attributes_Extra$boolProperty, 'forceNarrow', forceNarrow),
			_1: {
				ctor: '::',
				_0: A2(_user$project$WebComponents$onBoolPropertyChanged, 'narrow', _user$project$Model$OnLayoutNarrowChanged),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(_user$project$View_AppDrawer$view, viewModel, m),
			_1: {
				ctor: '::',
				_0: A2(
					_edvail$elm_polymer$Polymer_App$headerLayout,
					{
						ctor: '::',
						_0: A2(_elm_lang$html$Html_Attributes$attribute, 'has-scrolling-region', ''),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(_user$project$View_Header$init, viewModel, m),
						_1: {
							ctor: '::',
							_0: A2(_user$project$Main_View$init, viewModel, m),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$View$bottomSheet = A2(
	_elm_lang$html$Html$div,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$class('full-view'),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: A2(
			_edvail$elm_polymer$Polymer_Paper$material,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: A2(_user$project$Ext_Function_Infix_ops['=>'], 'background-color', 'white'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('fixed-bottom'),
					_1: {
						ctor: '::',
						_0: A2(_elm_lang$html$Html_Attributes$attribute, 'elevation', '5'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_edvail$elm_polymer$Polymer_Paper$item,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('bottom'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_edvail$elm_polymer$Polymer_Paper$item,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('bottom'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_edvail$elm_polymer$Polymer_Paper$item,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('bottom'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			}),
		_1: {ctor: '[]'}
	});
var _user$project$View$createContextMenuConfig = F2(
	function (model, todo) {
		return {
			onSelect: A2(_danielnarey$elm_toolkit$Toolkit_Operators_ops['#'], _user$project$Model$SetTodoContext, todo),
			isSelected: _user$project$Document$hasId(
				_user$project$Todo$getContextId(todo)),
			itemKey: function (_p0) {
				return A2(
					_elm_lang$core$String$append,
					'context-id-',
					_user$project$Document$getId(_p0));
			},
			domId: 'context-menu',
			itemView: function (_p1) {
				return _elm_lang$html$Html$text(
					_user$project$Context$getName(_p1));
			},
			maybeFocusKey: _elm_lang$core$Maybe$Nothing,
			onFocusIndexChanged: function (_p2) {
				return _user$project$Model$commonMsg.noOp;
			},
			noOp: _user$project$Model$commonMsg.noOp,
			onOutsideMouseDown: _user$project$Model$DeactivateEditingMode
		};
	});
var _user$project$View$createProjectMenuConfig = F2(
	function (model, _p3) {
		var _p4 = _p3;
		var _p7 = _p4.todo;
		return {
			onSelect: A2(_danielnarey$elm_toolkit$Toolkit_Operators_ops['#'], _user$project$Model$SetTodoProject, _p7),
			isSelected: _user$project$Document$hasId(
				_user$project$Todo$getProjectId(_p7)),
			itemKey: function (_p5) {
				return A2(
					_elm_lang$core$String$append,
					'project-id-',
					_user$project$Document$getId(_p5));
			},
			domId: 'project-menu',
			itemView: function (_p6) {
				return _elm_lang$html$Html$text(
					_user$project$Project$getName(_p6));
			},
			maybeFocusKey: _p4.maybeFocusKey,
			onFocusIndexChanged: _user$project$Model$UpdateEditTodoProjectMaybeFocusKey(_p4),
			noOp: _user$project$Model$commonMsg.noOp,
			onOutsideMouseDown: _user$project$Model$DeactivateEditingMode
		};
	});
var _user$project$View$overlayViews = function (model) {
	var editModeOverlayView = function () {
		var _p8 = _user$project$Model$getEditMode(model);
		switch (_p8.ctor) {
			case 'LaunchBar':
				return A2(_user$project$LaunchBar_View$init, _p8._0, model);
			case 'EditTodoContext':
				return A2(
					_user$project$Menu$view,
					_user$project$Model$getActiveContexts(model),
					A2(_user$project$View$createContextMenuConfig, model, _p8._0));
			case 'EditTodoProject':
				return A2(
					_user$project$Menu$view,
					_user$project$Model$getActiveProjects(model),
					A2(_user$project$View$createProjectMenuConfig, model, _p8._0));
			default:
				return A2(
					_elm_lang$html$Html$span,
					{ctor: '[]'},
					{ctor: '[]'});
		}
	}();
	return A2(
		_elm_lang$core$List$filterMap,
		_elm_lang$core$Basics$identity,
		{
			ctor: '::',
			_0: _elm_lang$core$Maybe$Just(editModeOverlayView),
			_1: {
				ctor: '::',
				_0: _user$project$View_ReminderOverlay$maybe(model),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$View$appView = function (model) {
	var children = A2(
		_elm_lang$core$Basics_ops['++'],
		{
			ctor: '::',
			_0: _user$project$View$appDrawerLayoutView(model),
			_1: {
				ctor: '::',
				_0: _user$project$View$addTodoFab(model),
				_1: {ctor: '[]'}
			}
		},
		_user$project$View$overlayViews(model));
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$id('app-view'),
			_1: {ctor: '[]'}
		},
		children);
};
var _user$project$View$init = function (m) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$id('root'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _user$project$Firebase_View$init(m),
			_1: {
				ctor: '::',
				_0: _user$project$View$appView(m),
				_1: {ctor: '[]'}
			}
		});
};
