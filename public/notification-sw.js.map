{"version":3,"sources":["webpack:///webpack/bootstrap 0e03e613c75aef55b701","webpack:///./src/web/notification-sw.js"],"names":["self","addEventListener","event","waitUntil","clients","matchAll","type","then","clientList","i","length","client","postMessage","focus","openWindow","setTimeout","console","log","action","data","notification"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AChEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEAA,KAAKC,gBAAL,CAAsB,mBAAtB,EAA2C,UAAUC,KAAV,EAAiB;AACxD;AACA;;AAEAA,UAAMC,SAAN,CACIC,QACKC,QADL,CACc,EAACC,MAAM,QAAP,EADd,EAEKC,IAFL,CAEU,UAAUC,UAAV,EAAsB;AACxB,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,WAAWE,MAA/B,EAAuCD,GAAvC,EAA4C;AACxC,gBAAME,SAASH,WAAWC,CAAX,CAAf;AACAG,wBAAYD,MAAZ,EAAoBT,KAApB;AACA,gBAAIS,OAAOE,KAAX,EAAkB;AACd,uBAAOF,OAAOE,KAAP,EAAP;AACH;AACJ;AACD,YAAIT,QAAQU,UAAZ,EAAwB;AACpB,mBAAOV;AACP;AADO,aAEFU,UAFE,CAES,GAFT,EAGFP,IAHE,CAGG,UAAUI,MAAV,EAAkB;AACpBI,2BAAW,YAAY;AACnBH,gCAAYD,MAAZ,EAAoBT,KAApB;AACH,iBAFD,EAEG,IAFH;AAGH,aAPE,CAAP;AAQH;AACJ,KApBL,CADJ;AAwBH,CA5BD,EA4BG,KA5BH;;AA8BA,SAASU,WAAT,CAAqBD,MAArB,EAA6BT,KAA7B,EAAoC;AAChCc,YAAQC,GAAR,CAAY,yCAAZ,EAAuDf,KAAvD;AACAS,WAAOC,WAAP,CAAmB;AACfN,cAAM,sBADS;AAEfY,gBAAQhB,MAAMgB,MAFC;AAGfC,cAAMjB,MAAMkB,YAAN,CAAmBD;AAHV,KAAnB;AAKH;;AAGD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,M","file":"notification-sw.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0e03e613c75aef55b701","// self.importScripts(\"./common.js\")\n\n// self.addEventListener('fetch', function (event) {\n//     // console.log(\"sw:fetch listener event\",event, event.request.url)\n// })\n\n// self.addEventListener('install', function (event) {\n//     // event.waitUntil(self.skipWaiting())\n// })\n\nself.addEventListener('notificationclick', function (event) {\n    // console.log(\"notification click\", event)\n    // event.notification.close();\n\n    event.waitUntil(\n        clients\n            .matchAll({type: \"window\"})\n            .then(function (clientList) {\n                for (var i = 0; i < clientList.length; i++) {\n                    const client = clientList[i]\n                    postMessage(client, event)\n                    if (client.focus) {\n                        return client.focus();\n                    }\n                }\n                if (clients.openWindow) {\n                    return clients\n                    // .openWindow(url)\n                        .openWindow(\"/\")\n                        .then(function (client) {\n                            setTimeout(function () {\n                                postMessage(client, event)\n                            }, 2000)\n                        })\n                }\n            })\n    );\n\n}, false);\n\nfunction postMessage(client, event) {\n    console.log(\"posting notification-clicked from event\", event)\n    client.postMessage({\n        type: \"notification-clicked\",\n        action: event.action,\n        data: event.notification.data\n    })\n}\n\n\n// Give the service worker access to Firebase Messaging.\n// Note that you can only use Firebase Messaging here, other Firebase libraries\n// are not available in the service worker.\n// importScripts('https://www.gstatic.com/firebasejs/3.9.0/firebase-app.js');\n// importScripts('https://www.gstatic.com/firebasejs/3.9.0/firebase-messaging.js');\n\n// Initialize the Firebase app in the service worker by passing in the\n// messagingSenderId.\n// firebase.initializeApp({\n//     'messagingSenderId': '476064436883'\n// });\n\n// Retrieve an instance of Firebase Messaging so that it can handle background\n// messages.\n// const messaging = firebase.messaging();\n\n// Handle incoming messages. Called when:\n// - a message is received while the app has focus\n// - the user clicks on an app notification created by a sevice worker\n//   `messaging.setBackgroundMessageHandler` handler.\n// messaging.onMessage(function(payload) {\n//     console.log(\"Message received. \", payload);\n//     // ...\n// });\n\n\n// self.addEventListener('push', function(event) {\n//     console.log('[Service Worker] Push Received.');\n//     console.log(`[Service Worker] Push had this data: \"${event.data.text()}\"`);\n//\n//     const title = 'Push Codelab';\n//     const options = {\n//         body: 'Yay it works.',\n//         sound: \"/alarm.ogg\",\n//         timestamp:0\n//     };\n//\n//     event.waitUntil(self.registration.showNotification(title, options));\n// });\n\n\n// messaging.setBackgroundMessageHandler(function (payload) {\n//     console.log('[firebase-messaging-sw.js] Received background message ', payload);\n//     // Customize notification here\n//     const notificationTitle = 'Hurray Custom notification';\n//     const notificationOptions = {\n//         requiresInteraction: true,\n//         sticky: true,\n//         renotify: true,\n//         tag: payload.data.id,\n//         vibrate: [500, 110, 500, 110, 450, 110, 200, 110, 170, 40, 450, 110, 200, 110, 170, 40, 500],\n//         sound: \"/alarm.ogg\",\n//         actions: [\n//             {title: \"Mark Done\", action: \"mark-done\"},\n//             {title: \"Snooze\", action: \"snooze\"},\n//         ],\n//         body: 'setting body: received data: ' + JSON.stringify(payload.data),\n//         data: payload.data\n//     };\n//\n//     return self.registration.showNotification(notificationTitle,\n//         notificationOptions);\n// });\n\n\n\n// WEBPACK FOOTER //\n// ./src/web/notification-sw.js"],"sourceRoot":""}