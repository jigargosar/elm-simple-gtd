{"version":3,"sources":["test/warning/warning-printer_test.ts"],"names":[],"mappings":"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","file":"warning-printer_test.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {assert} from 'chai';\nimport * as chalk from 'chalk';\nimport * as fs from 'fs';\nimport * as memoryStreams from 'memory-streams';\nimport * as path from 'path';\n\nimport {Analyzer} from '../../core/analyzer';\nimport {JavaScriptParser} from '../../javascript/javascript-parser';\nimport {Severity, Warning} from '../../model/model';\nimport {FSUrlLoader} from '../../url-loader/fs-url-loader';\nimport {WarningPrinter} from '../../warning/warning-printer';\n\nconst parser = new JavaScriptParser();\nconst staticTestDir = path.join(__dirname, '../static');\nconst vanillaSources =\n    fs.readFileSync(path.join(staticTestDir, 'vanilla-elements.js'), 'utf-8');\nconst parsedDocument = parser.parse(vanillaSources, 'vanilla-elements.js');\n\nconst dumbNameWarning = new Warning({\n  message: 'This is a dumb name for an element.',\n  code: 'dumb-element-name',\n  severity: Severity.WARNING,\n  sourceRange: {\n    file: 'vanilla-elements.js',\n    start: {column: 6, line: 0},\n    end: {column: 22, line: 0}\n  },\n  parsedDocument\n});\n\nconst goodJobWarning = new Warning({\n  message: 'Good job with this observedAttributes getter.',\n  code: 'cool-observed-attributes',\n  severity: Severity.INFO,\n  sourceRange: {\n    file: 'vanilla-elements.js',\n    start: {line: 22, column: 2},\n    end: {line: 29, column: 3}\n  },\n  parsedDocument\n});\n\nsuite('WarningPrinter', () => {\n  let output: NodeJS.WritableStream;\n  let printer: WarningPrinter;\n  let analyzer: Analyzer;\n  let originalChalkEnabled: boolean;\n\n  setup(() => {\n    output = new memoryStreams.WritableStream();\n    const urlLoader = new FSUrlLoader(staticTestDir);\n    analyzer = new Analyzer({urlLoader});\n    printer = new WarningPrinter(output, {color: false});\n    originalChalkEnabled = chalk.enabled;\n    (chalk as any).enabled = true;\n  });\n\n  teardown(() => {\n    (chalk as any).enabled = originalChalkEnabled;\n  });\n\n  test('can handle printing no warnings', async() => {\n    await printer.printWarnings([]);\n    assert.deepEqual(output.toString(), '');\n  });\n\n  test('can format and print a basic warning', async() => {\n    await printer.printWarnings([dumbNameWarning]);\n    const actual = output.toString();\n    const expected = `\n\nclass ClassDeclaration extends HTMLElement {}\n      ~~~~~~~~~~~~~~~~\n\nvanilla-elements.js(0,6) warning [dumb-element-name] - This is a dumb name for an element.\n`;\n    assert.deepEqual(actual, expected);\n  });\n\n  test('can format and print one-line warnings', async() => {\n    printer = new WarningPrinter(output, {verbosity: 'one-line', color: false});\n    await printer.printWarnings([dumbNameWarning]);\n    const actual = output.toString();\n    const expected =\n        `vanilla-elements.js(0,6) warning [dumb-element-name] - This is a dumb name for an element.\\n`;\n    assert.deepEqual(actual, expected);\n  });\n\n  test('it adds color if configured to do so', async() => {\n    printer = new WarningPrinter(output, {color: true});\n    await printer.printWarnings([dumbNameWarning]);\n    const actual = output.toString();\n    const expected = `\n\nclass ClassDeclaration extends HTMLElement {}\n\\u001b[33m      ~~~~~~~~~~~~~~~~\\u001b[39m\n\nvanilla-elements.js(0,6) \\u001b[33mwarning\\u001b[39m [dumb-element-name] - This is a dumb name for an element.\n`;\n    assert.deepEqual(actual, expected);\n  });\n\n  test('it can print a multiline range', async() => {\n    await printer.printWarnings([goodJobWarning]);\n    const actual = output.toString();\n    const expected = `\n\n  static get observedAttributes() {\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    return [\n~~~~~~~~~~~~\n      /** @type {boolean} When given the element is totally inactive */\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      'disabled',\n~~~~~~~~~~~~~~~~~\n      /** @type {boolean} When given the element is expanded */\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      'open', 'foo', 'bar'\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n    ];\n~~~~~~\n  }\n~~~\n\nvanilla-elements.js(22,2) info [cool-observed-attributes] - Good job with this observedAttributes getter.\n`;\n    assert.deepEqual(actual, expected);\n  });\n});\n"]}