var _user$project$EntityList_GroupView$initHeader = F2(
	function (appViewModel, vm) {
		var editButton = vm.isEditable ? A2(
			_user$project$WebComponents$iconButton,
			'create',
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('flex-none'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(vm.startEditingMsg),
					_1: {
						ctor: '::',
						_0: vm.tabindexAV,
						_1: {ctor: '[]'}
					}
				}
			}) : A2(
			_elm_lang$html$Html$span,
			{ctor: '[]'},
			{ctor: '[]'});
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: vm.tabindexAV,
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Events$onFocusIn(vm.onFocusIn),
					_1: {
						ctor: '::',
						_0: _user$project$Ext_Keyboard$onKeyDown(vm.onKeyDownMsg),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$classList(
								{
									ctor: '::',
									_0: A2(_user$project$Ext_Function_Infix_ops['=>'], 'entity-item group-item focusable-list-item', true),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('layout horizontal justified'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('title font-nowrap flex-auto'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _user$project$View_Shared$defaultBadge(vm),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: editButton,
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			});
	});
var _user$project$EntityList_GroupView$init = F2(
	function (appViewModel, vm) {
		var getTabIndexAVForTodo = function (_p0) {
			return vm.getTabIndexAVForEntity(
				_user$project$Entity$TodoEntity(_p0));
		};
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_user$project$EntityList_GroupView$initHeader, appViewModel, vm),
				_1: {
					ctor: '::',
					_0: A3(
						_elm_lang$html$Html_Keyed$node,
						'div',
						{ctor: '[]'},
						A2(
							_danielnarey$elm_toolkit$Toolkit_Operators_ops['.|>'],
							vm.todoList,
							function (todo) {
								return _user$project$Todo_View$initKeyed(
									A2(
										appViewModel.createTodoViewModel,
										getTabIndexAVForTodo(todo),
										todo));
							})),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$EntityList_GroupView$initHeaderKeyed = F2(
	function (appViewModel, vm) {
		return {
			ctor: '_Tuple2',
			_0: vm.id,
			_1: A2(_user$project$EntityList_GroupView$initHeader, appViewModel, vm)
		};
	});
var _user$project$EntityList_GroupView$initKeyed = F2(
	function (appViewModel, vm) {
		return {
			ctor: '_Tuple2',
			_0: vm.id,
			_1: A2(_user$project$EntityList_GroupView$init, appViewModel, vm)
		};
	});
