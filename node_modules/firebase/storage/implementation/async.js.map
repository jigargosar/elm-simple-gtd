{"version":3,"sources":["src/storage/implementation/async.ts"],"names":["async","promiseimpl","f","argsToForward","resolve","then","apply"],"mappings":";;;;;QA0BMA,K,GAAAA,K;;AAPN;;IAAYC,W;;;;AAEZ;;;;;AAKM,SAAAD,KAAA,CAAgBE,CAAhB,EAA2B;AAC/B,WAAO,YAAgC;AAAA,0CAApBC,aAAoB;AAApBA,yBAAoB;AAAA;;AACrCF,oBAAYG,OAAZ,CAAoB,IAApB,EAA0BC,IAA1B,CAA+B,YAAA;AAC7BH,cAAEI,KAAF,CAAQ,IAAR,EAAcH,aAAd;AACD,SAFD;AAGD,KAJD;AAKD,C,CAhCD;;;;;;;;;;;;;;;AAgBA","file":"async.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/**\n * @fileoverview Method for invoking a callback asynchronously.\n */\nimport * as promiseimpl from './promise_external';\n\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\nexport function async(f: Function): Function {\n  return function(...argsToForward: any[]) {\n    promiseimpl.resolve(true).then(function() {\n      f.apply(null, argsToForward);\n    });\n  };\n}\n"]}