{"version":3,"sources":["test/polymer/polymer-element-old-jsdoc_test.ts"],"names":[],"mappings":"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","file":"polymer-element-old-jsdoc_test.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\nimport {assert} from 'chai';\nimport * as path from 'path';\n\nimport {Analyzer} from '../../core/analyzer';\nimport {ClassScanner} from '../../javascript/class-scanner';\nimport {Document} from '../../model/model';\nimport {PolymerElement} from '../../polymer/polymer-element';\nimport {FSUrlLoader} from '../../url-loader/fs-url-loader';\n\nsuite('PolymerElement with old jsdoc annotations', () => {\n  const testFilesDir = path.resolve(__dirname, '../static/polymer2-old-jsdoc/');\n  const urlLoader = new FSUrlLoader(testFilesDir);\n  const analyzer = new Analyzer({\n    urlLoader: urlLoader,\n    scanners: new Map([[\n      'js',\n      [\n        new ClassScanner(),\n      ]\n    ]])\n  });\n\n  async function getElements(filename: string): Promise<Set<PolymerElement>> {\n    const document =\n        (await analyzer.analyze([filename])).getDocument(filename) as Document;\n    const elements = document.getFeatures({kind: 'polymer-element'});\n    return elements;\n  };\n\n  function getTestProps(element: PolymerElement): any {\n    return {\n      className: element.className,\n      superClass: element.superClass && element.superClass.identifier,\n      tagName: element.tagName,\n      description: element.description,\n      properties:\n          Array.from(element.properties.values()).map((p) => ({\n                                                        name: p.name,\n                                                        inheritedFrom:\n                                                            p.inheritedFrom,\n                                                      })),\n      attributes: Array.from(element.attributes.values()).map((a) => ({\n                                                                name: a.name,\n                                                              })),\n      methods: Array.from(element.methods.values())\n                   .map((m) => ({\n                          name: m.name,\n                          params: m.params, return: m.return,\n                          inheritedFrom: m.inheritedFrom\n                        })),\n    };\n  }\n\n  test('Scans and resolves base and sub-class', async() => {\n    const elements = await getElements('test-element-3.js');\n    const elementData = Array.from(elements).map(getTestProps);\n    assert.deepEqual(elementData, [\n      {\n        tagName: undefined,\n        className: 'BaseElement',\n        superClass: 'Polymer.Element',\n        description: '',\n        properties: [{\n          name: 'foo',\n          inheritedFrom: undefined,\n        }],\n        attributes: [{\n          name: 'foo',\n        }],\n        methods: [],\n      },\n      {\n        tagName: 'sub-element',\n        className: 'SubElement',\n        superClass: 'BaseElement',\n        description: '',\n        properties: [\n          {\n            name: 'foo',\n            inheritedFrom: 'BaseElement',\n          },\n          {\n            name: 'bar',\n            inheritedFrom: undefined,\n          },\n        ],\n        attributes: [\n          {\n            name: 'foo',\n          },\n          {\n            name: 'bar',\n          },\n        ],\n        methods: [],\n      },\n    ]);\n  });\n\n  test('Elements inherit from mixins and base classes', async() => {\n    const elements = await getElements('test-element-7.js');\n    const elementData = Array.from(elements).map(getTestProps);\n    assert.deepEqual(elementData, [\n      {\n        tagName: undefined,\n        className: 'BaseElement',\n        superClass: 'Polymer.Element',\n        description: '',\n        properties: [\n          {\n            name: 'one',\n            inheritedFrom: undefined,\n          },\n          {\n            name: 'two',\n            inheritedFrom: undefined,\n          }\n        ],\n        attributes: [\n          {\n            name: 'one',\n          },\n          {\n            name: 'two',\n          }\n        ],\n        methods: [{\n          name: 'customMethodOnBaseElement',\n          params: [], return: undefined,\n          inheritedFrom: undefined\n        }],\n      },\n      {\n        tagName: 'sub-element',\n        className: 'SubElement',\n        superClass: 'BaseElement',\n        description: '',\n        properties: [\n          {\n            name: 'one',\n            inheritedFrom: 'BaseElement',\n          },\n          {\n            name: 'two',\n            inheritedFrom: 'Mixin',\n          },\n          {\n            name: 'three',\n            inheritedFrom: 'Mixin',\n          },\n          {\n            name: 'four',\n            inheritedFrom: undefined,\n          },\n          {\n            inheritedFrom: undefined,\n            name: 'five',\n          },\n        ],\n        attributes: [\n          {\n            name: 'one',\n          },\n          {\n            name: 'two',\n          },\n          {\n            name: 'three',\n          },\n          {\n            name: 'four',\n          },\n          {\n            name: 'five',\n          },\n        ],\n        methods: [\n          {\n            name: 'customMethodOnBaseElement',\n            params: [], return: undefined,\n            inheritedFrom: 'BaseElement'\n          },\n          {\n            name: 'customMethodOnMixin',\n            params: [], return: undefined,\n            inheritedFrom: 'Mixin'\n          },\n          {\n            name: 'customMethodOnSubElement',\n            params: [], return: undefined,\n            inheritedFrom: undefined\n          },\n        ],\n      },\n    ]);\n  });\n});\n"]}