{"version":3,"sources":["../src/app/shared_promise.ts"],"names":["scope","global","self","Function","e","Error","PromiseImpl","Promise","require","local","GoogPromise"],"mappings":";;;;;AAAA;;;;;;;;;;;;;;;AAeA,IAAIA,cAAJ;AAEA,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAC/BD,YAAQC,MAAR;AACH,CAFD,MAEO,IAAI,OAAOC,IAAP,KAAgB,WAApB,EAAiC;AACpCF,YAAQE,IAAR;AACH,CAFM,MAEA;AACH,QAAI;AACAF,gBAAQG,SAAS,aAAT,GAAR;AACH,KAFD,CAEE,OAAOC,CAAP,EAAU;AACR,cAAM,IAAIC,KAAJ,CAAU,0EAAV,CAAN;AACH;AACJ;AAED,IAAIC,cAAcN,MAAMO,OAAN,IAAiBC,QAAQ,kBAAR,CAAnC;AAEO,IAAIC,wBAAY;AACrBF,aAASD,WADY;AAErBI,iBAAaJ;AAFQ,CAAhB","file":"shared_promise.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nlet scope;\n\nif (typeof global !== 'undefined') {\n    scope = global;\n} else if (typeof self !== 'undefined') {\n    scope = self;\n} else {\n    try {\n        scope = Function('return this')();\n    } catch (e) {\n        throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n}\n\nlet PromiseImpl = scope.Promise || require('promise-polyfill');\n\nexport let local:any = {\n  Promise: PromiseImpl,\n  GoogPromise: PromiseImpl\n};\n"]}