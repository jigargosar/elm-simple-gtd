var _jigargosar$elm_simple_gtd$Main$startSyncWithFirebase = function (user) {
	return _jigargosar$elm_simple_gtd$X_Return$maybeEffect(
		A2(_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>?'], _jigargosar$elm_simple_gtd$Model$getMaybeUserId, _jigargosar$elm_simple_gtd$Firebase$startSyncCmd));
};
var _jigargosar$elm_simple_gtd$Main$positionScheduleMenuCmd = function (todo) {
	return _jigargosar$elm_simple_gtd$DomPorts$positionPopupMenu(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'#edit-schedule-button-',
			_jigargosar$elm_simple_gtd$Document$getId(todo)));
};
var _jigargosar$elm_simple_gtd$Main$positionProjectMenuCmd = function (todo) {
	return _jigargosar$elm_simple_gtd$DomPorts$positionPopupMenu(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'#edit-project-button-',
			_jigargosar$elm_simple_gtd$Document$getId(todo)));
};
var _jigargosar$elm_simple_gtd$Main$positionContextMenuCmd = function (todo) {
	return _jigargosar$elm_simple_gtd$DomPorts$positionPopupMenu(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'#edit-context-button-',
			_jigargosar$elm_simple_gtd$Document$getId(todo)));
};
var _jigargosar$elm_simple_gtd$Main$firebaseSetupOnDisconnectCmd = function (model) {
	return A2(
		_danielnarey$elm_toolkit$Toolkit_Operators_ops['?|>'],
		_jigargosar$elm_simple_gtd$Model$getMaybeUserId(model),
		_jigargosar$elm_simple_gtd$Firebase$setupOnDisconnectCmd(model.firebaseClient));
};
var _jigargosar$elm_simple_gtd$Main$firebaseUpdateClientCmd = function (model) {
	return A2(
		_danielnarey$elm_toolkit$Toolkit_Operators_ops['?|>'],
		_jigargosar$elm_simple_gtd$Model$getMaybeUserId(model),
		_jigargosar$elm_simple_gtd$Firebase$updateClientCmd(model.firebaseClient));
};
var _jigargosar$elm_simple_gtd$Main$command = _Fresheyeball$elm_return$Return$command;
var _jigargosar$elm_simple_gtd$Main$reminderOverlayAction = function (action) {
	return _Fresheyeball$elm_return$Return$andThen(
		function (model) {
			return function () {
				var _p0 = model.reminderOverlay;
				if (_p0.ctor === 'Active') {
					var _p7 = _p0._1;
					var todoId = _p7.id;
					var _p1 = action;
					switch (_p1.ctor) {
						case 'Dismiss':
							return function (_p2) {
								return A2(
									_Fresheyeball$elm_return$Return$command,
									_jigargosar$elm_simple_gtd$Notification$closeNotification(todoId),
									A2(
										_elm_lang$core$Tuple$mapFirst,
										_jigargosar$elm_simple_gtd$Model$removeReminderOverlay,
										A3(_jigargosar$elm_simple_gtd$Model$updateTodo, _jigargosar$elm_simple_gtd$Todo$TurnReminderOff, todoId, _p2)));
							};
						case 'ShowSnoozeOptions':
							return function (_p3) {
								return _Fresheyeball$elm_return$Return$singleton(
									A2(_jigargosar$elm_simple_gtd$Model$setReminderOverlayToSnoozeView, _p7, _p3));
							};
						case 'SnoozeTill':
							return function (_p4) {
								return A2(
									_Fresheyeball$elm_return$Return$command,
									_jigargosar$elm_simple_gtd$Notification$closeNotification(todoId),
									A2(
										_Fresheyeball$elm_return$Return$andThen,
										A2(_jigargosar$elm_simple_gtd$Model$snoozeTodoWithOffset, _p1._0, todoId),
										_Fresheyeball$elm_return$Return$singleton(_p4)));
							};
						case 'Close':
							return function (_p5) {
								return _Fresheyeball$elm_return$Return$singleton(
									_jigargosar$elm_simple_gtd$Model$removeReminderOverlay(_p5));
							};
						default:
							return function (_p6) {
								return A2(
									_Fresheyeball$elm_return$Return$command,
									_jigargosar$elm_simple_gtd$Notification$closeNotification(todoId),
									A2(
										_elm_lang$core$Tuple$mapFirst,
										_jigargosar$elm_simple_gtd$Model$removeReminderOverlay,
										A3(_jigargosar$elm_simple_gtd$Model$updateTodo, _jigargosar$elm_simple_gtd$Todo$MarkDone, todoId, _p6)));
							};
					}
				} else {
					return _Fresheyeball$elm_return$Return$singleton;
				}
			}()(model);
		});
};
var _jigargosar$elm_simple_gtd$Main$maybeMapToCmd = function (fn) {
	return A2(
		_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>?='],
		_elm_lang$core$Maybe$map(fn),
		_elm_lang$core$Platform_Cmd$none);
};
var _jigargosar$elm_simple_gtd$Main$onUpdateNow = function (now) {
	return _Fresheyeball$elm_return$Return$map(
		_jigargosar$elm_simple_gtd$Model$setNow(now));
};
var _jigargosar$elm_simple_gtd$Main$setDomFocusToFocusInEntityCmd = _jigargosar$elm_simple_gtd$Model$commonMsg.focus('.entity-list .focusable-list-item[tabindex=0]');
var _jigargosar$elm_simple_gtd$Main$updateTodoAndMaybeAlsoSelected = F2(
	function (action, todo) {
		return _Fresheyeball$elm_return$Return$andThen(
			A2(
				_jigargosar$elm_simple_gtd$Model$updateTodoAndMaybeAlsoSelected,
				action,
				_jigargosar$elm_simple_gtd$Document$getId(todo)));
	});
var _jigargosar$elm_simple_gtd$Main$modelTapLog = A2(_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>>'], _jigargosar$elm_simple_gtd$X_Debug$tapLog, _Fresheyeball$elm_return$Return$map);
var _jigargosar$elm_simple_gtd$Main$map = _Fresheyeball$elm_return$Return$map;
var _jigargosar$elm_simple_gtd$Main$logMsg = F2(
	function (msg, model) {
		var _p8 = function () {
			var _p9 = msg;
			_v2_3:
			do {
				switch (_p9.ctor) {
					case 'OnNowChanged':
						return _elm_lang$core$Maybe$Nothing;
					case 'OnTaskMsg':
						if (_p9._0.ctor === 'UpdateTimeTracker') {
							return _elm_lang$core$Maybe$Nothing;
						} else {
							break _v2_3;
						}
					case 'OnTaskMsgWithTime':
						if (_p9._0.ctor === 'UpdateTimeTracker') {
							return _elm_lang$core$Maybe$Nothing;
						} else {
							break _v2_3;
						}
					default:
						break _v2_3;
				}
			} while(false);
			var _p10 = A2(_jigargosar$elm_simple_gtd$X_Debug$log, 'X.Debug.log', msg);
			return _elm_lang$core$Maybe$Nothing;
		}();
		return model;
	});
var _jigargosar$elm_simple_gtd$Main$withNow = function (toMsg) {
	return _jigargosar$elm_simple_gtd$Main$command(
		A2(_elm_lang$core$Task$perform, toMsg, _elm_lang$core$Time$now));
};
var _jigargosar$elm_simple_gtd$Main$welcomeEntitiesURL = 'https://firebasestorage.googleapis.com/v0/b/simple-gtd-prod.appspot.com/o/public%2Fwelcome-entities.json?alt=media';
var _jigargosar$elm_simple_gtd$Main$set = A2(_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>>'], _jigargosar$elm_simple_gtd$X_Record$set, _jigargosar$elm_simple_gtd$Main$map);
var _jigargosar$elm_simple_gtd$Main$over = A2(_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>>'], _jigargosar$elm_simple_gtd$X_Record$over, _jigargosar$elm_simple_gtd$Main$map);
var _jigargosar$elm_simple_gtd$Main$subscriptions = function (m) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: A2(_elm_lang$core$Time$every, _elm_lang$core$Time$second * 1, _jigargosar$elm_simple_gtd$Model$OnNowChanged),
			_1: {
				ctor: '::',
				_0: _jigargosar$elm_simple_gtd$X_Keyboard$subscription(_jigargosar$elm_simple_gtd$Model$OnKeyboardMsg),
				_1: {
					ctor: '::',
					_0: _jigargosar$elm_simple_gtd$X_Keyboard$ups(_jigargosar$elm_simple_gtd$Model$OnGlobalKeyUp),
					_1: {
						ctor: '::',
						_0: _jigargosar$elm_simple_gtd$Store$onChange(_jigargosar$elm_simple_gtd$Model$OnPouchDBChange),
						_1: {
							ctor: '::',
							_0: _jigargosar$elm_simple_gtd$Firebase$onChange(_jigargosar$elm_simple_gtd$Model$OnFirebaseChange),
							_1: {
								ctor: '::',
								_0: _scottcorgan$keyboard_combo$Keyboard_Combo$subscriptions(m.keyComboModel),
								_1: {
									ctor: '::',
									_0: _jigargosar$elm_simple_gtd$Task_Main$subscriptions(m),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		});
};
var _jigargosar$elm_simple_gtd$Main$syncWithRemotePouch = _elm_lang$core$Native_Platform.outgoingPort(
	'syncWithRemotePouch',
	function (v) {
		return v;
	});
var _jigargosar$elm_simple_gtd$Main$persistLocalPref = _elm_lang$core$Native_Platform.outgoingPort(
	'persistLocalPref',
	function (v) {
		return v;
	});
var _jigargosar$elm_simple_gtd$Main$update = function (msg) {
	return function (_p11) {
		return A2(
			_Fresheyeball$elm_return$Return$map,
			_jigargosar$elm_simple_gtd$Main$logMsg(msg),
			function () {
				var _p12 = msg;
				switch (_p12.ctor) {
					case 'NOOP':
						return _elm_lang$core$Basics$identity;
					case 'OnCommonMsg':
						return _jigargosar$elm_simple_gtd$CommonMsg$update(_p12._0);
					case 'OnPouchDBChange':
						return _jigargosar$elm_simple_gtd$X_Return$andThenMaybe(
							A2(
								_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>?'],
								A2(
									_jigargosar$elm_simple_gtd$X_Function_Infix_ops['>>?'],
									A2(_jigargosar$elm_simple_gtd$Model$upsertEncodedDocOnPouchDBChange, _p12._0, _p12._1),
									_elm_lang$core$Tuple$mapFirst(_jigargosar$elm_simple_gtd$Model$OnEntityUpsert)),
								_elm_lang$core$Basics$uncurry(_jigargosar$elm_simple_gtd$Main$update)));
					case 'OnEntityUpsert':
						var _p13 = _p12._0;
						if (_p13.ctor === 'Task') {
							return _jigargosar$elm_simple_gtd$Main$andThenTodoMsg(
								_jigargosar$elm_simple_gtd$Todo_Msg$Upsert(_p13._0));
						} else {
							return _elm_lang$core$Basics$identity;
						}
					case 'OnFirebaseChange':
						return _Fresheyeball$elm_return$Return$effect_(
							A2(_jigargosar$elm_simple_gtd$Model$upsertEncodedDocOnFirebaseChange, _p12._0, _p12._1));
					case 'OnSignIn':
						return _jigargosar$elm_simple_gtd$Main$andThenUpdate(
							_jigargosar$elm_simple_gtd$Model$OnFirebaseMsg(_jigargosar$elm_simple_gtd$Firebase$OnSignIn));
					case 'OnSignOut':
						return _jigargosar$elm_simple_gtd$Main$andThenUpdate(
							_jigargosar$elm_simple_gtd$Model$OnFirebaseMsg(_jigargosar$elm_simple_gtd$Firebase$OnSignOut));
					case 'OnSkipSignIn':
						return _jigargosar$elm_simple_gtd$Main$andThenUpdate(
							_jigargosar$elm_simple_gtd$Model$OnFirebaseMsg(_jigargosar$elm_simple_gtd$Firebase$OnSkipSignIn));
					case 'OnUserChanged':
						var _p15 = _p12._0;
						return function (_p14) {
							return A2(
								_jigargosar$elm_simple_gtd$Main$startSyncWithFirebase,
								_p15,
								A2(
									_jigargosar$elm_simple_gtd$X_Return$maybeEffect,
									_jigargosar$elm_simple_gtd$Main$firebaseSetupOnDisconnectCmd,
									A2(
										_jigargosar$elm_simple_gtd$X_Return$maybeEffect,
										_jigargosar$elm_simple_gtd$Main$firebaseUpdateClientCmd,
										A2(
											_jigargosar$elm_simple_gtd$Main$andThenUpdate,
											_jigargosar$elm_simple_gtd$Model$AfterUserChanged,
											A2(
												_Fresheyeball$elm_return$Return$map,
												_jigargosar$elm_simple_gtd$Model$setUser(_p15),
												_p14)))));
						};
					case 'OnCheckForFirstTimeSetup':
						return _Fresheyeball$elm_return$Return$map(_jigargosar$elm_simple_gtd$Model$checkAndUpdateSetupMode);
					case 'AfterUserChanged':
						return _jigargosar$elm_simple_gtd$Main$andThenUpdate(
							_jigargosar$elm_simple_gtd$Model$OnFirebaseMsg(_jigargosar$elm_simple_gtd$Firebase$AfterUserChanged));
					case 'OnFCMTokenChanged':
						return function (_p16) {
							return A2(
								_jigargosar$elm_simple_gtd$X_Return$maybeEffect,
								_jigargosar$elm_simple_gtd$Main$firebaseUpdateClientCmd,
								A2(
									_Fresheyeball$elm_return$Return$map,
									_jigargosar$elm_simple_gtd$Model$setFCMToken(_p12._0),
									_p16));
						};
					case 'OnFirebaseConnectionChanged':
						return function (_p17) {
							return A2(
								_jigargosar$elm_simple_gtd$X_Return$maybeEffect,
								_jigargosar$elm_simple_gtd$Main$firebaseUpdateClientCmd,
								A2(
									_Fresheyeball$elm_return$Return$map,
									_jigargosar$elm_simple_gtd$Model$updateFirebaseConnection(_p12._0),
									_p17));
						};
					case 'OnSetDomFocusToFocusInEntity':
						return _jigargosar$elm_simple_gtd$Main$andThenUpdate(_jigargosar$elm_simple_gtd$Main$setDomFocusToFocusInEntityCmd);
					case 'OnEntityListKeyDown':
						var _p21 = _p12._0;
						var _p18 = _p12._1.key;
						switch (_p18.ctor) {
							case 'ArrowUp':
								return function (_p19) {
									return A2(
										_jigargosar$elm_simple_gtd$Main$andThenUpdate,
										_jigargosar$elm_simple_gtd$Model$OnSetDomFocusToFocusInEntity,
										A2(
											_Fresheyeball$elm_return$Return$map,
											A2(_jigargosar$elm_simple_gtd$Model$moveFocusBy, -1, _p21),
											_p19));
								};
							case 'ArrowDown':
								return function (_p20) {
									return A2(
										_jigargosar$elm_simple_gtd$Main$andThenUpdate,
										_jigargosar$elm_simple_gtd$Model$OnSetDomFocusToFocusInEntity,
										A2(
											_Fresheyeball$elm_return$Return$map,
											A2(_jigargosar$elm_simple_gtd$Model$moveFocusBy, 1, _p21),
											_p20));
								};
							default:
								return _elm_lang$core$Basics$identity;
						}
					case 'ToggleDrawer':
						return _Fresheyeball$elm_return$Return$map(_jigargosar$elm_simple_gtd$Model$toggleLayoutForceNarrow);
					case 'OnLayoutNarrowChanged':
						return _Fresheyeball$elm_return$Return$map(
							_jigargosar$elm_simple_gtd$Model$setLayoutNarrow(_p12._0));
					case 'RemotePouchSync':
						return function (_p22) {
							return A2(
								_Fresheyeball$elm_return$Return$effect_,
								function (_p23) {
									return _jigargosar$elm_simple_gtd$Main$syncWithRemotePouch(
										function (_) {
											return _.pouchDBRemoteSyncURI;
										}(_p23));
								},
								A2(_jigargosar$elm_simple_gtd$Main$andThenUpdate, _jigargosar$elm_simple_gtd$Model$OnSaveCurrentForm, _p22));
						};
					case 'ToggleShowDeletedEntity':
						return _Fresheyeball$elm_return$Return$map(
							function (m) {
								return _elm_lang$core$Native_Utils.update(
									m,
									{showDeleted: !m.showDeleted});
							});
					case 'TodoAction':
						return _elm_lang$core$Basics$identity;
					case 'ReminderOverlayAction':
						return _jigargosar$elm_simple_gtd$Main$reminderOverlayAction(_p12._0);
					case 'ToggleTodoDone':
						return _Fresheyeball$elm_return$Return$andThen(
							A2(_jigargosar$elm_simple_gtd$Model$updateTodo, _jigargosar$elm_simple_gtd$Todo$ToggleDone, _p12._0));
					case 'SetTodoContext':
						return function (_p24) {
							return A2(
								_jigargosar$elm_simple_gtd$Main$andThenUpdate,
								_jigargosar$elm_simple_gtd$Model$OnDeactivateEditingMode,
								A3(
									_jigargosar$elm_simple_gtd$Main$updateTodoAndMaybeAlsoSelected,
									_jigargosar$elm_simple_gtd$Todo$SetContext(_p12._0),
									_p12._1,
									_p24));
						};
					case 'SetTodoProject':
						return function (_p25) {
							return A2(
								_jigargosar$elm_simple_gtd$Main$andThenUpdate,
								_jigargosar$elm_simple_gtd$Model$OnDeactivateEditingMode,
								A3(
									_jigargosar$elm_simple_gtd$Main$updateTodoAndMaybeAlsoSelected,
									_jigargosar$elm_simple_gtd$Todo$SetProject(_p12._0),
									_p12._1,
									_p25));
						};
					case 'NewTodoTextChanged':
						return _Fresheyeball$elm_return$Return$map(
							A2(_jigargosar$elm_simple_gtd$Model$updateNewTodoText, _p12._0, _p12._1));
					case 'OnDeactivateEditingMode':
						return function (_p26) {
							return A2(
								_jigargosar$elm_simple_gtd$Main$andThenUpdate,
								_jigargosar$elm_simple_gtd$Main$setDomFocusToFocusInEntityCmd,
								A2(_Fresheyeball$elm_return$Return$map, _jigargosar$elm_simple_gtd$Model$deactivateEditingMode, _p26));
						};
					case 'OnCreateDefaultEntitiesWithResult':
						var _p27 = A2(_jigargosar$elm_simple_gtd$X_Debug$log, 'result', _p12._0);
						return _elm_lang$core$Basics$identity;
					case 'OnCreateDefaultEntities':
						var cmd = A2(
							_elm_lang$http$Http$send,
							_jigargosar$elm_simple_gtd$Model$OnCreateDefaultEntitiesWithResult,
							A2(_elm_lang$http$Http$get, _jigargosar$elm_simple_gtd$Main$welcomeEntitiesURL, _elm_lang$core$Json_Decode$value));
						return function (_p28) {
							return A2(
								_jigargosar$elm_simple_gtd$Main$command,
								cmd,
								A2(
									_jigargosar$elm_simple_gtd$Main$andThenUpdate,
									_jigargosar$elm_simple_gtd$Model$OnDeactivateEditingMode,
									A2(
										_jigargosar$elm_simple_gtd$Main$map,
										function (_p29) {
											return A2(
												_jigargosar$elm_simple_gtd$Model$createTodo,
												'use `ArrowUp` and `ArrowDown` keys to focus item',
												A2(
													_jigargosar$elm_simple_gtd$Model$createTodo,
													'press `r` to set schedule/reminder',
													A2(
														_jigargosar$elm_simple_gtd$Model$createTodo,
														'press `p` to set project',
														A2(
															_jigargosar$elm_simple_gtd$Model$createTodo,
															'press `c` to set context',
															A2(
																_jigargosar$elm_simple_gtd$Model$createTodo,
																'press `e` to edit text',
																A2(
																	_jigargosar$elm_simple_gtd$Model$createTodo,
																	'press `i` to create and add to Inbox',
																	A2(
																		_jigargosar$elm_simple_gtd$Model$createTodo,
																		'Click `+` or press `q` for quick add',
																		A2(
																			_jigargosar$elm_simple_gtd$Model$createContext,
																			'zz SomeDay/Maybe',
																			A2(
																				_jigargosar$elm_simple_gtd$Model$createContext,
																				'3 Waiting For',
																				A2(
																					_jigargosar$elm_simple_gtd$Model$createContext,
																					'2 Next Actions',
																					A2(
																						_jigargosar$elm_simple_gtd$Model$createContext,
																						'1 Now',
																						A2(
																							_jigargosar$elm_simple_gtd$Model$createProject,
																							'GTD: Learn',
																							A2(_jigargosar$elm_simple_gtd$Model$createProject, 'Explore SimpleGTD.com', _p29)))))))))))));
										},
										_p28)));
						};
					case 'StartEditingReminder':
						var _p31 = _p12._0;
						return function (_p30) {
							return A2(
								_Fresheyeball$elm_return$Return$command,
								_jigargosar$elm_simple_gtd$Main$positionScheduleMenuCmd(_p31),
								A2(
									_Fresheyeball$elm_return$Return$map,
									_jigargosar$elm_simple_gtd$Model$startEditingReminder(_p31),
									_p30));
						};
					case 'StartEditingContext':
						var _p33 = _p12._0;
						return function (_p32) {
							return A2(
								_Fresheyeball$elm_return$Return$command,
								_jigargosar$elm_simple_gtd$Main$positionContextMenuCmd(_p33),
								A2(
									_Fresheyeball$elm_return$Return$map,
									_jigargosar$elm_simple_gtd$Model$startEditingTodoContext(_p33),
									_p32));
						};
					case 'StartEditingProject':
						var _p35 = _p12._0;
						return function (_p34) {
							return A2(
								_Fresheyeball$elm_return$Return$command,
								_jigargosar$elm_simple_gtd$Main$positionProjectMenuCmd(_p35),
								A2(
									_Fresheyeball$elm_return$Return$map,
									_jigargosar$elm_simple_gtd$Model$startEditingTodoProject(_p35),
									_p34));
						};
					case 'UpdateTodoForm':
						return _Fresheyeball$elm_return$Return$map(
							function (_p36) {
								return _jigargosar$elm_simple_gtd$Model$setEditMode(
									_jigargosar$elm_simple_gtd$ExclusiveMode$EditTask(_p36));
							}(
								A2(_jigargosar$elm_simple_gtd$Todo_Form$set, _p12._1, _p12._0)));
					case 'OnEditTodoProjectMenuStateChanged':
						return function (_p37) {
							return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
								A2(
									_Fresheyeball$elm_return$Return$map,
									function (_p38) {
										return _jigargosar$elm_simple_gtd$Model$setEditMode(
											_jigargosar$elm_simple_gtd$ExclusiveMode$EditTodoProject(_p38));
									}(
										A2(_jigargosar$elm_simple_gtd$Todo_GroupForm$setMenuState, _p12._1, _p12._0)),
									_p37));
						};
					case 'OnEditTodoContextMenuStateChanged':
						return function (_p39) {
							return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
								A2(
									_Fresheyeball$elm_return$Return$map,
									function (_p40) {
										return _jigargosar$elm_simple_gtd$Model$setEditMode(
											_jigargosar$elm_simple_gtd$ExclusiveMode$EditTodoContext(_p40));
									}(
										A2(_jigargosar$elm_simple_gtd$Todo_GroupForm$setMenuState, _p12._1, _p12._0)),
									_p39));
						};
					case 'UpdateRemoteSyncFormUri':
						return _Fresheyeball$elm_return$Return$map(
							function (_p41) {
								return _jigargosar$elm_simple_gtd$Model$setEditMode(
									_jigargosar$elm_simple_gtd$ExclusiveMode$EditSyncSettings(_p41));
							}(
								_elm_lang$core$Native_Utils.update(
									_p12._0,
									{uri: _p12._1})));
					case 'OnSetViewType':
						return _Fresheyeball$elm_return$Return$map(
							_jigargosar$elm_simple_gtd$Model$switchToView(_p12._0));
					case 'OnSetEntityListView':
						return _Fresheyeball$elm_return$Return$map(
							_jigargosar$elm_simple_gtd$Model$setEntityListViewType(_p12._0));
					case 'OnNowChanged':
						return _jigargosar$elm_simple_gtd$Main$onUpdateNow(_p12._0);
					case 'OnKeyboardMsg':
						return function (_p42) {
							return A2(
								_jigargosar$elm_simple_gtd$DomPorts$focusSelectorIfNoFocusCmd,
								'.entity-list .focusable-list-item[tabindex=0]',
								A2(
									_Fresheyeball$elm_return$Return$map,
									_jigargosar$elm_simple_gtd$Model$updateKeyboardState(
										_jigargosar$elm_simple_gtd$X_Keyboard$update(_p12._0)),
									_p42));
						};
					case 'OnSaveCurrentForm':
						return function (_p43) {
							return A2(
								_jigargosar$elm_simple_gtd$Main$andThenUpdate,
								_jigargosar$elm_simple_gtd$Model$OnDeactivateEditingMode,
								A2(_Fresheyeball$elm_return$Return$andThen, _jigargosar$elm_simple_gtd$Model$saveCurrentForm, _p43));
						};
					case 'NewTodo':
						return function (_p44) {
							return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
								A2(_Fresheyeball$elm_return$Return$map, _jigargosar$elm_simple_gtd$Model$activateNewTodoModeWithFocusInEntityAsReference, _p44));
						};
					case 'NewTodoForInbox':
						return function (_p45) {
							return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
								A2(_Fresheyeball$elm_return$Return$map, _jigargosar$elm_simple_gtd$Model$activateNewTodoModeWithInboxAsReference, _p45));
						};
					case 'NewProject':
						return function (_p46) {
							return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
								A2(_Fresheyeball$elm_return$Return$map, _jigargosar$elm_simple_gtd$Model$createAndEditNewProject, _p46));
						};
					case 'NewContext':
						return function (_p47) {
							return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
								A2(_Fresheyeball$elm_return$Return$map, _jigargosar$elm_simple_gtd$Model$createAndEditNewContext, _p47));
						};
					case 'OnEntityAction':
						var _p52 = _p12._0;
						var _p48 = _p12._1;
						switch (_p48.ctor) {
							case 'StartEditing':
								return function (_p49) {
									return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
										A2(
											_Fresheyeball$elm_return$Return$map,
											_jigargosar$elm_simple_gtd$Model$startEditingEntity(_p52),
											_p49));
								};
							case 'NameChanged':
								return _Fresheyeball$elm_return$Return$map(
									A2(_jigargosar$elm_simple_gtd$Model$updateEditModeNameChanged, _p48._0, _p52));
							case 'Save':
								return _jigargosar$elm_simple_gtd$Main$andThenUpdate(_jigargosar$elm_simple_gtd$Model$OnSaveCurrentForm);
							case 'ToggleDeleted':
								return function (_p50) {
									return A2(
										_jigargosar$elm_simple_gtd$Main$andThenUpdate,
										_jigargosar$elm_simple_gtd$Model$OnDeactivateEditingMode,
										A2(
											_Fresheyeball$elm_return$Return$andThen,
											_jigargosar$elm_simple_gtd$Model$toggleDeleteEntity(_p52),
											_p50));
								};
							case 'ToggleArchived':
								return function (_p51) {
									return A2(
										_jigargosar$elm_simple_gtd$Main$andThenUpdate,
										_jigargosar$elm_simple_gtd$Model$OnDeactivateEditingMode,
										A2(
											_Fresheyeball$elm_return$Return$andThen,
											_jigargosar$elm_simple_gtd$Model$toggleArchiveEntity(_p52),
											_p51));
								};
							case 'OnFocusIn':
								return _Fresheyeball$elm_return$Return$map(
									_jigargosar$elm_simple_gtd$Model$setFocusInEntity(_p52));
							case 'ToggleSelected':
								return _Fresheyeball$elm_return$Return$map(
									_jigargosar$elm_simple_gtd$Model$toggleEntitySelection(_p52));
							default:
								return _Fresheyeball$elm_return$Return$map(
									_jigargosar$elm_simple_gtd$Model$switchToEntityListViewFromEntity(_p52));
						}
					case 'OnLaunchBarMsgWithNow':
						var _p57 = _p12._1;
						var _p53 = _p12._0;
						switch (_p53.ctor) {
							case 'OnEnter':
								return function (_p54) {
									return function () {
										var _p55 = _p53._0;
										switch (_p55.ctor) {
											case 'Project':
												return _jigargosar$elm_simple_gtd$Main$map(
													_jigargosar$elm_simple_gtd$Model$switchToProjectView(_p55._0));
											case 'Projects':
												return _jigargosar$elm_simple_gtd$Main$map(
													_jigargosar$elm_simple_gtd$Model$setEntityListViewType(_jigargosar$elm_simple_gtd$Entity$ProjectsView));
											case 'Context':
												return _jigargosar$elm_simple_gtd$Main$map(
													_jigargosar$elm_simple_gtd$Model$switchToContextView(_p55._0));
											default:
												return _jigargosar$elm_simple_gtd$Main$map(
													_jigargosar$elm_simple_gtd$Model$setEntityListViewType(_jigargosar$elm_simple_gtd$Entity$ContextsView));
										}
									}()(
										A2(_jigargosar$elm_simple_gtd$Main$andThenUpdate, _jigargosar$elm_simple_gtd$Model$OnDeactivateEditingMode, _p54));
								};
							case 'OnInputChanged':
								return _jigargosar$elm_simple_gtd$Main$map(
									A3(_jigargosar$elm_simple_gtd$Model$updateLaunchBarInput, _p57, _p53._1, _p53._0));
							default:
								return function (_p56) {
									return _jigargosar$elm_simple_gtd$DomPorts$autoFocusInputCmd(
										A2(
											_jigargosar$elm_simple_gtd$Main$map,
											_jigargosar$elm_simple_gtd$Model$activateLaunchBar(_p57),
											_p56));
								};
						}
					case 'OnLaunchBarMsg':
						return _jigargosar$elm_simple_gtd$Main$withNow(
							_jigargosar$elm_simple_gtd$Model$OnLaunchBarMsgWithNow(_p12._0));
					case 'OnCloseNotification':
						return _jigargosar$elm_simple_gtd$Main$command(
							_jigargosar$elm_simple_gtd$Notification$closeNotification(_p12._0));
					case 'OnGlobalKeyUp':
						return _jigargosar$elm_simple_gtd$Main$onGlobalKeyUp(_p12._0);
					case 'OnKeyCombo':
						return _Fresheyeball$elm_return$Return$andThen(
							_jigargosar$elm_simple_gtd$Model$updateCombo(_p12._0));
					case 'OnTaskMsg':
						return _jigargosar$elm_simple_gtd$Main$withNow(
							_jigargosar$elm_simple_gtd$Model$OnTaskMsgWithTime(_p12._0));
					case 'OnTaskMsgWithTime':
						return A3(_jigargosar$elm_simple_gtd$Task_Main$update, _jigargosar$elm_simple_gtd$Main$andThenUpdate, _p12._1, _p12._0);
					case 'OnFirebaseMsg':
						return _jigargosar$elm_simple_gtd$Main$withNow(
							_jigargosar$elm_simple_gtd$Model$OnFirebaseMsgWithTime(_p12._0));
					case 'OnFirebaseMsgWithTime':
						return A3(_jigargosar$elm_simple_gtd$Firebase_Main$update, _jigargosar$elm_simple_gtd$Main$andThenUpdate, _p12._1, _p12._0);
					case 'OnAppDrawerMsg':
						return A2(_jigargosar$elm_simple_gtd$AppDrawer_Main$update, _jigargosar$elm_simple_gtd$Main$andThenUpdate, _p12._0);
					default:
						return _Fresheyeball$elm_return$Return$effect_(
							function (_p58) {
								return _jigargosar$elm_simple_gtd$Main$persistLocalPref(
									_jigargosar$elm_simple_gtd$Model$encodeLocalPref(_p58));
							});
				}
			}()(
				_Fresheyeball$elm_return$Return$singleton(_p11)));
	};
};
var _jigargosar$elm_simple_gtd$Main$andThenTodoMsg = function (_p59) {
	return _jigargosar$elm_simple_gtd$Main$andThenUpdate(
		_jigargosar$elm_simple_gtd$Model$OnTaskMsg(_p59));
};
var _jigargosar$elm_simple_gtd$Main$andThenUpdate = function (_p60) {
	return _Fresheyeball$elm_return$Return$andThen(
		_jigargosar$elm_simple_gtd$Main$update(_p60));
};
var _jigargosar$elm_simple_gtd$Main$onGlobalKeyUp = function (key) {
	return A2(
		_jigargosar$elm_simple_gtd$X_Return$with,
		_jigargosar$elm_simple_gtd$Model$getEditMode,
		function (editMode) {
			var _p61 = {ctor: '_Tuple2', _0: key, _1: editMode};
			_v9_2:
			do {
				if (_p61.ctor === '_Tuple2') {
					if (_p61._1.ctor === 'None') {
						var _p62 = _p61._0;
						switch (_p62.ctor) {
							case 'Escape':
								return _Fresheyeball$elm_return$Return$map(_jigargosar$elm_simple_gtd$Model$clearSelection);
							case 'CharQ':
								return _jigargosar$elm_simple_gtd$Main$andThenUpdate(_jigargosar$elm_simple_gtd$Model$NewTodo);
							case 'CharI':
								return _jigargosar$elm_simple_gtd$Main$andThenUpdate(_jigargosar$elm_simple_gtd$Model$NewTodoForInbox);
							case 'Slash':
								return _jigargosar$elm_simple_gtd$Main$andThenUpdate(
									_jigargosar$elm_simple_gtd$Model$OnLaunchBarMsg(_jigargosar$elm_simple_gtd$LaunchBar$Open));
							default:
								return _elm_lang$core$Basics$identity;
						}
					} else {
						if (_p61._0.ctor === 'Escape') {
							return _jigargosar$elm_simple_gtd$Main$andThenUpdate(_jigargosar$elm_simple_gtd$Model$OnDeactivateEditingMode);
						} else {
							break _v9_2;
						}
					}
				} else {
					break _v9_2;
				}
			} while(false);
			return _elm_lang$core$Basics$identity;
		});
};
var _jigargosar$elm_simple_gtd$Main$main = _rgrempel$elm_route_url$RouteUrl$programWithFlags(
	{delta2url: _jigargosar$elm_simple_gtd$Routes$delta2hash, location2messages: _jigargosar$elm_simple_gtd$Routes$hash2messages, init: _jigargosar$elm_simple_gtd$Model$init, update: _jigargosar$elm_simple_gtd$Main$update, view: _jigargosar$elm_simple_gtd$View$init, subscriptions: _jigargosar$elm_simple_gtd$Main$subscriptions})(
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (appVersion) {
			return A2(
				_elm_lang$core$Json_Decode$andThen,
				function (config) {
					return A2(
						_elm_lang$core$Json_Decode$andThen,
						function (developmentMode) {
							return A2(
								_elm_lang$core$Json_Decode$andThen,
								function (deviceId) {
									return A2(
										_elm_lang$core$Json_Decode$andThen,
										function (encodedContextList) {
											return A2(
												_elm_lang$core$Json_Decode$andThen,
												function (encodedProjectList) {
													return A2(
														_elm_lang$core$Json_Decode$andThen,
														function (encodedTodoList) {
															return A2(
																_elm_lang$core$Json_Decode$andThen,
																function (localPref) {
																	return A2(
																		_elm_lang$core$Json_Decode$andThen,
																		function (now) {
																			return A2(
																				_elm_lang$core$Json_Decode$andThen,
																				function (pouchDBRemoteSyncURI) {
																					return _elm_lang$core$Json_Decode$succeed(
																						{appVersion: appVersion, config: config, developmentMode: developmentMode, deviceId: deviceId, encodedContextList: encodedContextList, encodedProjectList: encodedProjectList, encodedTodoList: encodedTodoList, localPref: localPref, now: now, pouchDBRemoteSyncURI: pouchDBRemoteSyncURI});
																				},
																				A2(_elm_lang$core$Json_Decode$field, 'pouchDBRemoteSyncURI', _elm_lang$core$Json_Decode$string));
																		},
																		A2(_elm_lang$core$Json_Decode$field, 'now', _elm_lang$core$Json_Decode$float));
																},
																A2(_elm_lang$core$Json_Decode$field, 'localPref', _elm_lang$core$Json_Decode$value));
														},
														A2(
															_elm_lang$core$Json_Decode$field,
															'encodedTodoList',
															_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$value)));
												},
												A2(
													_elm_lang$core$Json_Decode$field,
													'encodedProjectList',
													_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$value)));
										},
										A2(
											_elm_lang$core$Json_Decode$field,
											'encodedContextList',
											_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$value)));
								},
								A2(_elm_lang$core$Json_Decode$field, 'deviceId', _elm_lang$core$Json_Decode$string));
						},
						A2(_elm_lang$core$Json_Decode$field, 'developmentMode', _elm_lang$core$Json_Decode$bool));
				},
				A2(
					_elm_lang$core$Json_Decode$field,
					'config',
					A2(
						_elm_lang$core$Json_Decode$andThen,
						function (isFirstVisit) {
							return _elm_lang$core$Json_Decode$succeed(
								{isFirstVisit: isFirstVisit});
						},
						A2(_elm_lang$core$Json_Decode$field, 'isFirstVisit', _elm_lang$core$Json_Decode$bool))));
		},
		A2(_elm_lang$core$Json_Decode$field, 'appVersion', _elm_lang$core$Json_Decode$string)));
var _jigargosar$elm_simple_gtd$Main$onMsgList = _elm_lang$core$Basics$flip(
	_elm_lang$core$List$foldl(
		function (_p63) {
			return _Fresheyeball$elm_return$Return$andThen(
				_jigargosar$elm_simple_gtd$Main$update(_p63));
		}));
