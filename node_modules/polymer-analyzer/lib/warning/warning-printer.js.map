{"version":3,"sources":["warning/warning-printer.ts"],"names":[],"mappings":"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","file":"warning-printer.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as chalk from 'chalk';\n\nimport {Analyzer} from '../analyzer';\nimport {Severity, SourceRange, Warning} from '../model/model';\n\nexport type Verbosity = 'one-line' | 'full';\n\nexport interface Options {\n  analyzer: Analyzer;\n  verbosity?: Verbosity;\n  color?: boolean;\n}\n\nconst defaultPrinterOptions = {\n  verbosity: 'full',\n  color: true\n};\n\nexport class WarningPrinter {\n  _chalk: chalk.Chalk;\n  private _options: Options;\n\n  constructor(private _outStream: NodeJS.WritableStream, options: Options) {\n    this._options = Object.assign({}, defaultPrinterOptions, options);\n    this._chalk = new chalk.constructor({enabled: !!this._options.color});\n  }\n\n  /**\n   * Convenience method around `printWarning`.\n   */\n  async printWarnings(warnings: Iterable<Warning>) {\n    for (const warning of warnings) {\n      await this.printWarning(warning);\n    }\n  }\n\n  async printWarning(warning: Warning) {\n    const severity = this._severityToString(warning.severity);\n    const range = warning.sourceRange;\n    if (!range) {\n      this._outStream.write(\n          `INTERNAL ERROR: Tried to print a '${warning.code}' ` +\n          `warning without a source range. Please report this!\\n` +\n          `     https://github.com/Polymer/polymer-analyzer/issues/new\\n`);\n      this._outStream.write(\n          `${this._severityToString(warning.severity)} ` +\n          `[${warning.code}] - ${warning.message}\\n`);\n      return;\n    }\n\n    if (this._options.verbosity === 'full') {\n      this._outStream.write('\\n\\n');\n      this._outStream.write(\n          await this.getUnderlinedText(range, warning.severity) + '\\n\\n');\n    }\n\n    this._outStream.write(\n        `${range.file}` +\n        `(${range.start.line},${range.start.column}) ` +\n        `${severity} [${warning.code}] - ${warning.message}\\n`);\n  }\n\n  private _severityToString(severity: Severity) {\n    const colorFunction = this._severityToColorFunction(severity);\n    switch (severity) {\n      case Severity.ERROR:\n        return colorFunction('error');\n      case Severity.WARNING:\n        return colorFunction('warning');\n      case Severity.INFO:\n        return colorFunction('info');\n      default:\n        const never: never = severity;\n        throw new Error(\n            `Unknown severity value - ${never} - ` +\n            `encountered while printing warning.`);\n    }\n  }\n\n  async getUnderlinedText(range: SourceRange, severity?: Severity) {\n    const colorFunction = severity == null ?\n        (v: string) => v :\n        this._severityToColorFunction(severity);\n\n    const lines = await this._getLinesOfText(\n        range.start.line, range.end.line, range.file);\n    const outputLines: string[] = [];\n    let lineNum = range.start.line;\n    for (const line of lines) {\n      outputLines.push(line);\n      outputLines.push(\n          colorFunction(getSquiggleUnderline(line, lineNum, range)));\n      lineNum++;\n    }\n    return outputLines.join('\\n');\n  }\n\n  private _severityToColorFunction(severity: Severity) {\n    switch (severity) {\n      case Severity.ERROR:\n        return this._chalk.red;\n      case Severity.WARNING:\n        return this._chalk.yellow;\n      case Severity.INFO:\n        return this._chalk.green;\n      default:\n        const never: never = severity;\n        throw new Error(\n            `Unknown severity value - ${never}` +\n            ` - encountered while printing warning.`);\n    }\n  }\n\n  private async _getLinesOfText(\n      startLine: number, endLine: number, localPath: string) {\n    const contents = await this._options.analyzer.load(localPath);\n    return contents.split('\\n').slice(startLine, endLine + 1);\n  }\n}\n\nfunction getSquiggleUnderline(\n    lineText: string, lineNum: number, sourceRange: SourceRange) {\n  // We're on a middle line of a multiline range. Squiggle the entire line.\n  if (lineNum !== sourceRange.start.line && lineNum !== sourceRange.end.line) {\n    return '~'.repeat(lineText.length);\n  }\n  // The tricky case. Might be the start of a multiline range, or it might just\n  // be a one-line range.\n  if (lineNum === sourceRange.start.line) {\n    const startColumn = sourceRange.start.column;\n    const endColumn = sourceRange.end.line === sourceRange.start.line ?\n        sourceRange.end.column :\n        lineText.length;\n    const prefix = lineText.slice(0, startColumn).replace(/[^\\t]/g, ' ');\n    if (startColumn === endColumn) {\n      return prefix + '~';  // always draw at least one squiggle\n    }\n    return prefix + '~'.repeat(endColumn - startColumn);\n  }\n\n  // We're on the end line of a multiline range. Just squiggle up to the end\n  // column.\n  return '~'.repeat(sourceRange.end.column);\n}\n"]}