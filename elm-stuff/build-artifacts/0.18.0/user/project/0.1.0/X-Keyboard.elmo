var _user$project$X_Keyboard$isSuperDown = _ohanhi$keyboard_extra$Keyboard_Extra$isPressed(_ohanhi$keyboard_extra$Keyboard_Extra$Super);
var _user$project$X_Keyboard$isMetaDown = _ohanhi$keyboard_extra$Keyboard_Extra$isPressed(_ohanhi$keyboard_extra$Keyboard_Extra$Meta);
var _user$project$X_Keyboard$isAltDown = _ohanhi$keyboard_extra$Keyboard_Extra$isPressed(_ohanhi$keyboard_extra$Keyboard_Extra$Alt);
var _user$project$X_Keyboard$isControlDown = _ohanhi$keyboard_extra$Keyboard_Extra$isPressed(_ohanhi$keyboard_extra$Keyboard_Extra$Control);
var _user$project$X_Keyboard$isShiftDown = _ohanhi$keyboard_extra$Keyboard_Extra$isPressed(_ohanhi$keyboard_extra$Keyboard_Extra$Shift);
var _user$project$X_Keyboard$update = _ohanhi$keyboard_extra$Keyboard_Extra$update;
var _user$project$X_Keyboard$subscription = function (tagger) {
	return A2(_elm_lang$core$Platform_Sub$map, tagger, _ohanhi$keyboard_extra$Keyboard_Extra$subscriptions);
};
var _user$project$X_Keyboard$init = _ohanhi$keyboard_extra$Keyboard_Extra$initialState;
var _user$project$X_Keyboard$downs = _ohanhi$keyboard_extra$Keyboard_Extra$downs;
var _user$project$X_Keyboard$ups = function (toMsg) {
	return _elm_lang$keyboard$Keyboard$ups(
		function (_p0) {
			return toMsg(
				_ohanhi$keyboard_extra$Keyboard_Extra$fromCode(_p0));
		});
};
var _user$project$X_Keyboard$succeedIfDecodedKeyEquals = F2(
	function (key, msg) {
		return A2(
			_elm_lang$core$Json_Decode$andThen,
			function (actualKey) {
				var _p1 = A2(
					_elm_lang$core$Debug$log,
					'actualKey, expectedKey',
					{ctor: '_Tuple2', _0: actualKey, _1: key});
				return _elm_lang$core$Native_Utils.eq(key, actualKey) ? _elm_lang$core$Json_Decode$succeed(msg) : _elm_lang$core$Json_Decode$fail('Not intrested');
			},
			_ohanhi$keyboard_extra$Keyboard_Extra$targetKey);
	});
var _user$project$X_Keyboard$onEscape = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'keyup',
		A2(_user$project$X_Keyboard$succeedIfDecodedKeyEquals, _ohanhi$keyboard_extra$Keyboard_Extra$Escape, msg));
};
var _user$project$X_Keyboard$onEnter = function (msg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'keyup',
		A2(_user$project$X_Keyboard$succeedIfDecodedKeyEquals, _ohanhi$keyboard_extra$Keyboard_Extra$Enter, msg));
};
var _user$project$X_Keyboard$isOnlyShiftKeyDown = function (ke) {
	return ke.isShiftDown && (!(ke.isMetaDown || (ke.isControlDown || ke.isAltDown)));
};
var _user$project$X_Keyboard$isAnySoftKeyDown = function (ke) {
	return ke.isShiftDown || (ke.isMetaDown || (ke.isControlDown || ke.isAltDown));
};
var _user$project$X_Keyboard$isNoSoftKeyDown = function (_p2) {
	return !_user$project$X_Keyboard$isAnySoftKeyDown(_p2);
};
var _user$project$X_Keyboard$targetKeyDecoder = A2(
	_elm_lang$core$Json_Decode$map,
	_ohanhi$keyboard_extra$Keyboard_Extra$fromCode,
	A2(_elm_lang$core$Json_Decode$field, 'keyCode', _elm_lang$core$Json_Decode$int));
var _user$project$X_Keyboard$KeyboardEvent = F6(
	function (a, b, c, d, e, f) {
		return {key: a, isShiftDown: b, isMetaDown: c, isControlDown: d, isAltDown: e, keyString: f};
	});
var _user$project$X_Keyboard$keyboardEventDecoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'key',
	_elm_lang$core$Json_Decode$string,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'altKey',
		_elm_lang$core$Json_Decode$bool,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'ctrlKey',
			_elm_lang$core$Json_Decode$bool,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'metaKey',
				_elm_lang$core$Json_Decode$bool,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'shiftKey',
					_elm_lang$core$Json_Decode$bool,
					A2(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$custom,
						_user$project$X_Keyboard$targetKeyDecoder,
						_elm_lang$core$Json_Decode$succeed(_user$project$X_Keyboard$KeyboardEvent)))))));
var _user$project$X_Keyboard$onKeyUp = function (onKeyMsg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'keyup',
		A2(
			_elm_lang$core$Json_Decode$map,
			onKeyMsg,
			A2(_user$project$X_Decode$traceDecoder, 'kd', _user$project$X_Keyboard$keyboardEventDecoder)));
};
var _user$project$X_Keyboard$onKeyDown = function (onKeyMsg) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'keydown',
		A2(
			_elm_lang$core$Json_Decode$map,
			onKeyMsg,
			A2(_user$project$X_Decode$traceDecoder, 'kd', _user$project$X_Keyboard$keyboardEventDecoder)));
};
var _user$project$X_Keyboard$onKeyDownPreventDefault = function (onKeyMsg) {
	return A2(
		_user$project$X_Html$onPreventDefault,
		'keydown',
		A2(
			_elm_lang$core$Json_Decode$map,
			onKeyMsg,
			A2(_user$project$X_Decode$traceDecoder, 'kd', _user$project$X_Keyboard$keyboardEventDecoder)));
};
var _user$project$X_Keyboard$onKeyDownStopPropagation = function (onKeyMsg) {
	return A2(
		_user$project$X_Html$onStopPropagation,
		'keydown',
		A2(
			_elm_lang$core$Json_Decode$map,
			onKeyMsg,
			A2(_user$project$X_Decode$traceDecoder, 'kd', _user$project$X_Keyboard$keyboardEventDecoder)));
};
