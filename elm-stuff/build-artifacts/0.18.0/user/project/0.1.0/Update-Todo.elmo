var _user$project$Update_Todo$command = _Fresheyeball$elm_return$Return$command;
var _user$project$Update_Todo$map = _Fresheyeball$elm_return$Return$map;
var _user$project$Update_Todo$set = A2(_user$project$Ext_Function_Infix_ops['>>>'], _user$project$Ext_Record$set, _Fresheyeball$elm_return$Return$map);
var _user$project$Update_Todo$over = A2(_user$project$Ext_Function_Infix_ops['>>>'], _user$project$Ext_Record$over, _Fresheyeball$elm_return$Return$map);
var _user$project$Update_Todo$onTodoMsgWithTime = F3(
	function (andThenUpdate, todoMsg, now) {
		var _p0 = todoMsg;
		switch (_p0.ctor) {
			case 'OnTodoToggleRunning':
				return A2(
					_user$project$Update_Todo$over,
					_user$project$Model$timeTracker,
					A2(_user$project$Todo_TimeTracker$toggleStartStop, _p0._0, now));
			case 'OnTodoInitRunning':
				return A2(
					_user$project$Update_Todo$set,
					_user$project$Model$timeTracker,
					A2(_user$project$Todo_TimeTracker$initRunning, _p0._0, now));
			case 'OnTodoTogglePaused':
				return A2(
					_user$project$Update_Todo$over,
					_user$project$Model$timeTracker,
					_user$project$Todo_TimeTracker$togglePause(now));
			case 'OnTodoStopRunning':
				return A2(_user$project$Update_Todo$set, _user$project$Model$timeTracker, _user$project$Todo_TimeTracker$none);
			case 'OnGotoRunningTodo':
				return function (_p1) {
					return A2(
						andThenUpdate,
						_user$project$Model$OnSetDomFocusToFocusInEntity,
						A2(_user$project$Update_Todo$map, _user$project$Model$gotoRunningTodo, _p1));
				};
			default:
				var _p4 = _p0._0;
				var todoId = _p4.data.id;
				return function (_p2) {
					return A2(
						andThenUpdate,
						_user$project$Model$OnCloseNotification(todoId),
						function () {
							var _p3 = _p4.action;
							if (_p3 === 'stop') {
								return andThenUpdate(_user$project$Model$onTodoStopRunning);
							} else {
								return andThenUpdate(_user$project$Model$onGotoRunningTodo);
							}
						}()(_p2));
				};
		}
	});
