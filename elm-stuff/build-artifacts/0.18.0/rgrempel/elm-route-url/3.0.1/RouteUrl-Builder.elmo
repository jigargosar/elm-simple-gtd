var _rgrempel$elm_route_url$RouteUrl_Builder$toChange = F2(
	function (stuffIntoHash, _p0) {
		var _p1 = _p0;
		var _p2 = _p1._0;
		var hashPrefix = stuffIntoHash ? '$' : '#';
		var formattedHash = _elm_lang$core$Native_Utils.eq(_p2.hash, '') ? '' : A2(
			_elm_lang$core$Basics_ops['++'],
			hashPrefix,
			_elm_lang$http$Http$encodeUri(_p2.hash));
		var eachQuery = F3(
			function (key, value, memo) {
				return {
					ctor: '::',
					_0: A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$http$Http$encodeUri(key),
						A2(
							_elm_lang$core$Basics_ops['++'],
							'=',
							_elm_lang$http$Http$encodeUri(value))),
					_1: memo
				};
			});
		var joinedPath = A2(
			_elm_lang$core$String$join,
			'/',
			A2(_elm_lang$core$List$map, _elm_lang$http$Http$encodeUri, _p2.path));
		var queryPrefix = stuffIntoHash ? '^' : '?';
		var joinedQuery = _elm_lang$core$Dict$isEmpty(_p2.query) ? '' : A2(
			_elm_lang$core$Basics_ops['++'],
			queryPrefix,
			A2(
				_elm_lang$core$String$join,
				'&',
				A3(
					_elm_lang$core$Dict$foldl,
					eachQuery,
					{ctor: '[]'},
					_p2.query)));
		var prefix = stuffIntoHash ? '#!/' : '/';
		return {
			entry: _p2.entry,
			url: A2(
				_elm_lang$core$Basics_ops['++'],
				prefix,
				A2(
					_elm_lang$core$Basics_ops['++'],
					joinedPath,
					A2(_elm_lang$core$Basics_ops['++'], joinedQuery, formattedHash)))
		};
	});
var _rgrempel$elm_route_url$RouteUrl_Builder$toUrlChange = _rgrempel$elm_route_url$RouteUrl_Builder$toChange(false);
var _rgrempel$elm_route_url$RouteUrl_Builder$toHashChange = _rgrempel$elm_route_url$RouteUrl_Builder$toChange(true);
var _rgrempel$elm_route_url$RouteUrl_Builder$hash = function (_p3) {
	var _p4 = _p3;
	return _p4._0.hash;
};
var _rgrempel$elm_route_url$RouteUrl_Builder$getQuery = F2(
	function (key, _p5) {
		var _p6 = _p5;
		return A2(_elm_lang$core$Dict$get, key, _p6._0.query);
	});
var _rgrempel$elm_route_url$RouteUrl_Builder$query = function (_p7) {
	var _p8 = _p7;
	return _p8._0.query;
};
var _rgrempel$elm_route_url$RouteUrl_Builder$path = function (_p9) {
	var _p10 = _p9;
	return _p10._0.path;
};
var _rgrempel$elm_route_url$RouteUrl_Builder$entry = function (_p11) {
	var _p12 = _p11;
	return _p12._0.entry;
};
var _rgrempel$elm_route_url$RouteUrl_Builder$Builder = function (a) {
	return {ctor: 'Builder', _0: a};
};
var _rgrempel$elm_route_url$RouteUrl_Builder$builder = _rgrempel$elm_route_url$RouteUrl_Builder$Builder(
	{
		entry: _rgrempel$elm_route_url$RouteUrl$NewEntry,
		path: {ctor: '[]'},
		query: _elm_lang$core$Dict$empty,
		hash: ''
	});
var _rgrempel$elm_route_url$RouteUrl_Builder$newEntry = function (_p13) {
	var _p14 = _p13;
	return _rgrempel$elm_route_url$RouteUrl_Builder$Builder(
		_elm_lang$core$Native_Utils.update(
			_p14._0,
			{entry: _rgrempel$elm_route_url$RouteUrl$NewEntry}));
};
var _rgrempel$elm_route_url$RouteUrl_Builder$modifyEntry = function (_p15) {
	var _p16 = _p15;
	return _rgrempel$elm_route_url$RouteUrl_Builder$Builder(
		_elm_lang$core$Native_Utils.update(
			_p16._0,
			{entry: _rgrempel$elm_route_url$RouteUrl$ModifyEntry}));
};
var _rgrempel$elm_route_url$RouteUrl_Builder$modifyPath = F2(
	function (func, _p17) {
		var _p18 = _p17;
		var _p19 = _p18._0;
		return _rgrempel$elm_route_url$RouteUrl_Builder$Builder(
			_elm_lang$core$Native_Utils.update(
				_p19,
				{
					path: func(_p19.path)
				}));
	});
var _rgrempel$elm_route_url$RouteUrl_Builder$prependToPath = function (_p20) {
	return _rgrempel$elm_route_url$RouteUrl_Builder$modifyPath(
		_elm_lang$core$List$append(_p20));
};
var _rgrempel$elm_route_url$RouteUrl_Builder$appendToPath = function (_p21) {
	return _rgrempel$elm_route_url$RouteUrl_Builder$modifyPath(
		A2(_elm_lang$core$Basics$flip, _elm_lang$core$List$append, _p21));
};
var _rgrempel$elm_route_url$RouteUrl_Builder$replacePath = F2(
	function (list, _p22) {
		var _p23 = _p22;
		return _rgrempel$elm_route_url$RouteUrl_Builder$Builder(
			_elm_lang$core$Native_Utils.update(
				_p23._0,
				{path: list}));
	});
var _rgrempel$elm_route_url$RouteUrl_Builder$modifyQuery = F2(
	function (func, _p24) {
		var _p25 = _p24;
		var _p26 = _p25._0;
		return _rgrempel$elm_route_url$RouteUrl_Builder$Builder(
			_elm_lang$core$Native_Utils.update(
				_p26,
				{
					query: func(_p26.query)
				}));
	});
var _rgrempel$elm_route_url$RouteUrl_Builder$insertQuery = F2(
	function (key, value) {
		return _rgrempel$elm_route_url$RouteUrl_Builder$modifyQuery(
			A2(_elm_lang$core$Dict$insert, key, value));
	});
var _rgrempel$elm_route_url$RouteUrl_Builder$updateQuery = F2(
	function (key, func) {
		return _rgrempel$elm_route_url$RouteUrl_Builder$modifyQuery(
			A2(_elm_lang$core$Dict$update, key, func));
	});
var _rgrempel$elm_route_url$RouteUrl_Builder$removeQuery = function (_p27) {
	return _rgrempel$elm_route_url$RouteUrl_Builder$modifyQuery(
		_elm_lang$core$Dict$remove(_p27));
};
var _rgrempel$elm_route_url$RouteUrl_Builder$replaceQuery = F2(
	function (query, _p28) {
		var _p29 = _p28;
		return _rgrempel$elm_route_url$RouteUrl_Builder$Builder(
			_elm_lang$core$Native_Utils.update(
				_p29._0,
				{query: query}));
	});
var _rgrempel$elm_route_url$RouteUrl_Builder$modifyHash = F2(
	function (func, _p30) {
		var _p31 = _p30;
		var _p32 = _p31._0;
		return _rgrempel$elm_route_url$RouteUrl_Builder$Builder(
			_elm_lang$core$Native_Utils.update(
				_p32,
				{
					hash: func(_p32.hash)
				}));
	});
var _rgrempel$elm_route_url$RouteUrl_Builder$replaceHash = F2(
	function (hash, _p33) {
		var _p34 = _p33;
		return _rgrempel$elm_route_url$RouteUrl_Builder$Builder(
			_elm_lang$core$Native_Utils.update(
				_p34._0,
				{hash: hash}));
	});
var _rgrempel$elm_route_url$RouteUrl_Builder$fromUrl = function (url) {
	var erl = _sporto$erl$Erl$parse(url);
	return _rgrempel$elm_route_url$RouteUrl_Builder$Builder(
		{
			entry: _rgrempel$elm_route_url$RouteUrl$NewEntry,
			path: erl.path,
			query: erl.query,
			hash: A2(
				_elm_lang$core$Maybe$withDefault,
				'',
				_elm_lang$http$Http$decodeUri(erl.hash))
		});
};
var _rgrempel$elm_route_url$RouteUrl_Builder$fromHash = function (url) {
	var unwrapped = _sporto$erl$Erl$parse(
		A4(
			_elm_lang$core$Regex$replace,
			_elm_lang$core$Regex$AtMost(1),
			_elm_lang$core$Regex$regex('\\^'),
			_elm_lang$core$Basics$always('?'),
			A4(
				_elm_lang$core$Regex$replace,
				_elm_lang$core$Regex$AtMost(1),
				_elm_lang$core$Regex$regex('$'),
				_elm_lang$core$Basics$always('#'),
				A4(
					_elm_lang$core$Regex$replace,
					_elm_lang$core$Regex$AtMost(1),
					_elm_lang$core$Regex$regex('^!'),
					_elm_lang$core$Basics$always(''),
					function (_) {
						return _.hash;
					}(
						_sporto$erl$Erl$parse(url))))));
	return _rgrempel$elm_route_url$RouteUrl_Builder$Builder(
		{entry: _rgrempel$elm_route_url$RouteUrl$NewEntry, path: unwrapped.path, query: unwrapped.query, hash: unwrapped.hash});
};
