{"version":3,"sources":["src/storage/implementation/url.ts"],"names":["makeNormalUrl","makeDownloadUrl","makeUploadUrl","makeQueryString","constants","object","urlPart","domainBase","apiBaseUrl","downloadBase","apiUploadBaseUrl","params","encode","encodeURIComponent","queryPart","forEach","key","val","nextPart","slice"],"mappings":";;;;;QAsBMA,a,GAAAA,a;QAIAC,e,GAAAA,e;QAIAC,a,GAAAA,a;QAIAC,e,GAAAA,e;;AAfN;;IAAYC,S;;AACZ;;IAAYC,M;;;;AApBZ;;;;;;;;;;;;;;;AAgBA;;;AAMM,SAAAL,aAAA,CAAwBM,OAAxB,EAAuC;AAC3C,WAAOF,UAAUG,UAAV,GAAuBH,UAAUI,UAAjC,GAA8CF,OAArD;AACD;AAEK,SAAAL,eAAA,CAA0BK,OAA1B,EAAyC;AAC7C,WAAOF,UAAUK,YAAV,GAAyBL,UAAUI,UAAnC,GAAgDF,OAAvD;AACD;AAEK,SAAAJ,aAAA,CAAwBI,OAAxB,EAAuC;AAC3C,WAAOF,UAAUG,UAAV,GAAuBH,UAAUM,gBAAjC,GAAoDJ,OAA3D;AACD;AAEK,SAAAH,eAAA,CAA0BQ,MAA1B,EAA2D;AAC/D,QAAIC,SAASC,kBAAb;AACA,QAAIC,YAAY,GAAhB;AACAT,WAAOU,OAAP,CAAeJ,MAAf,EAAuB,UAASK,GAAT,EAAcC,GAAd,EAAiB;AACtC,YAAIC,WAAWN,OAAOI,GAAP,IAAc,GAAd,GAAoBJ,OAAOK,GAAP,CAAnC;AACAH,oBAAYA,YAAYI,QAAZ,GAAuB,GAAnC;AACD,KAHD;AAKA;AACAJ,gBAAYA,UAAUK,KAAV,CAAgB,CAAhB,EAAmB,CAAC,CAApB,CAAZ;AACA,WAAOL,SAAP;AACD","file":"url.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport * as constants from './constants';\nimport * as object from './object';\n\nexport function makeNormalUrl(urlPart: string): string {\n  return constants.domainBase + constants.apiBaseUrl + urlPart;\n}\n\nexport function makeDownloadUrl(urlPart: string): string {\n  return constants.downloadBase + constants.apiBaseUrl + urlPart;\n}\n\nexport function makeUploadUrl(urlPart: string): string {\n  return constants.domainBase + constants.apiUploadBaseUrl + urlPart;\n}\n\nexport function makeQueryString(params: { [key: string]: string }): string {\n  let encode = encodeURIComponent;\n  let queryPart = '?';\n  object.forEach(params, function(key, val) {\n    let nextPart = encode(key) + '=' + encode(val);\n    queryPart = queryPart + nextPart + '&';\n  });\n\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n"]}