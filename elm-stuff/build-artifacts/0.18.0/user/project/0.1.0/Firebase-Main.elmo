var _user$project$Firebase_Main$overSignInModel = _user$project$X_Record$over(_user$project$Model$signInModel);
var _user$project$Firebase_Main$signIn = _elm_lang$core$Native_Platform.outgoingPort(
	'signIn',
	function (v) {
		return null;
	});
var _user$project$Firebase_Main$signOut = _elm_lang$core$Native_Platform.outgoingPort(
	'signOut',
	function (v) {
		return null;
	});
var _user$project$Firebase_Main$update = F3(
	function (andThenUpdate, now, msg) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'OnSignIn':
				return function (_p1) {
					return A2(
						andThenUpdate,
						_user$project$Model$OnPersistLocalPref,
						A2(
							_Fresheyeball$elm_return$Return$map,
							_user$project$Firebase_Main$overSignInModel(_user$project$Firebase_SignIn$updateOnTriedSignIn),
							A2(
								_Fresheyeball$elm_return$Return$command,
								_user$project$Firebase_Main$signIn(
									{ctor: '_Tuple0'}),
								_p1)));
				};
			case 'OnSignOut':
				return function (_p2) {
					return A2(
						_Fresheyeball$elm_return$Return$command,
						_elm_lang$navigation$Navigation$load(_user$project$AppUrl$landing),
						A2(
							andThenUpdate,
							_user$project$Model$OnPersistLocalPref,
							A2(
								_Fresheyeball$elm_return$Return$map,
								_user$project$Firebase_Main$overSignInModel(_user$project$Firebase_SignIn$updateOnTriedSignOut),
								A2(
									_Fresheyeball$elm_return$Return$command,
									_user$project$Firebase_Main$signOut(
										{ctor: '_Tuple0'}),
									_p2))));
				};
			default:
				return function (_p3) {
					return A3(
						_user$project$X_Return$mapModelWith,
						function (_) {
							return _.user;
						},
						function (user) {
							return _user$project$Firebase_Main$overSignInModel(
								_user$project$Firebase_SignIn$updateAfterUserChanged(user));
						},
						A2(
							_Fresheyeball$elm_return$Return$andThen,
							function (model) {
								return function () {
									var _p4 = model.user;
									if (_p4.ctor === 'NotLoggedIn') {
										return _elm_lang$core$Basics$identity;
									} else {
										return andThenUpdate(_user$project$Model$OnDeactivateEditingMode);
									}
								}()(
									_Fresheyeball$elm_return$Return$singleton(model));
							},
							_p3));
				};
		}
	});
